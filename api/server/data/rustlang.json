{
    "is_complete": true,
    "username": "rustlang",
    "retweeted": {
        "1123979020847108096": {
            "id": "1123979020847108096",
            "text": "the rustbridge roadmap for 2019 (more or less) @rustlang https://p.veb.cool/phame/live/1/post/1/the_rustbridge_roadmap_for_2019/\u00a0\u2026",
            "username": "faint_visions",
            "num_likes": 7,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1124016756232740864": {
            "id": "1124016756232740864",
            "text": "Still super proud of that time I wrote up the entire technique of how to make a @rustlang Ferris hat with a bunch of pictures\n\nhttp://edunham.net/2019/04/06/rustacean_hat_pattern.html#more\u00a0\u2026",
            "username": "QEDunham",
            "num_likes": 15,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1124226869686099969": {
            "id": "1124226869686099969",
            "text": "I have a little question about FFI in @rustlang  especially c and rust, I want to get libsignal-protocol to the rust land, what should i do, and what would you prefer?\nespecially that is lib has a c implementation, *links in replies*",
            "username": "ShekoHex",
            "num_likes": 1,
            "num_retweets": 1,
            "num_replies": 4
        },
        "1124041445529280512": {
            "id": "1124041445529280512",
            "text": "Would love to get your support by voting for this  https://www.jfrog.com/jira/browse/RTFACT-13469\u00a0\u2026",
            "username": "jfrog",
            "num_likes": 0,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1123718404760834049": {
            "id": "1123718404760834049",
            "text": "2019 roadmap for Cargo:https://www.ncameron.org/blog/cargo-in-2019/\u00a0\u2026",
            "username": "nick_r_cameron",
            "num_likes": 122,
            "num_retweets": 35,
            "num_replies": 7
        },
        "1123674331618451456": {
            "id": "1123674331618451456",
            "text": "Main stage at the keynote there was lots of  for @rustlang",
            "username": "scottcoulton",
            "num_likes": 6,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1123665701858942976": {
            "id": "1123665701858942976",
            "text": "I finally finished part 4 of a series about building a plugin system with @rustlang and @wasmerio\nhttps://wiredforge.com/blog/wasmer-plugin-pt-4/index.html\u00a0\u2026",
            "username": "FreeMasen",
            "num_likes": 26,
            "num_retweets": 7,
            "num_replies": 1
        },
        "1123611519869235201": {
            "id": "1123611519869235201",
            "text": "gptman: a GPT manager CLI in @rustlang that allows you to resize partitions and copy from one disk to another, now lets the user inserting size and starting LBA in kb, kib, mb, mib, ... while still aligning the partitions https://crates.io/crates/gptman\u00a0",
            "username": "CecileTonglet",
            "num_likes": 34,
            "num_retweets": 8,
            "num_replies": 1
        },
        "1123597194970435584": {
            "id": "1123597194970435584",
            "text": "#Announcement @ThisWeekInRust We've just launched the world's first private @rustlang Cargo registry http://j.mp/2GRglCq\u00a0 #cloudsmith #rust #crates #cargopic.twitter.com/W8Uec6ad9E",
            "username": "cloudsmith",
            "num_likes": 26,
            "num_retweets": 4,
            "num_replies": 1
        },
        "1123610990023774208": {
            "id": "1123610990023774208",
            "text": "Just published my new \n@rustlang\n crate - SQSListen - which allows you to listen (non-blocking) to AWS SQS queue and attach handler which processes received messages. https://github.com/andrewnester/sqslisten\u00a0\u2026\nhttps://crates.io/crates/sqslisten\u00a0\u2026 #rust #rustlang",
            "username": "nester_dev",
            "num_likes": 31,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1123442997818011649": {
            "id": "1123442997818011649",
            "text": "New @rustlang meetup in KW next Tuesday May 7th. Come join us at Smile Tiger for a coffee/tea/whatever-you-drink-that's-not-alcoholic (they don't have a liquor license afaik) and chat about Rust!https://www.meetup.com/Rust-KW/events/261065994/\u00a0\u2026",
            "username": "mikeyhew",
            "num_likes": 7,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1123512368766623744": {
            "id": "1123512368766623744",
            "text": "Slides and demo project from an introductory @rustlang presentation I gave yesterday:https://github.com/djc/talks/tree/master/2019-04-30%20Rust:%20reliability%2C%20productivity%2C%20performance%20--%20pick%20three\u00a0\u2026",
            "username": "djco",
            "num_likes": 16,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1123545258250375168": {
            "id": "1123545258250375168",
            "text": "Did you know that there is a Learning Working Group in @rustlang compiler team? https://github.com/rust-lang/compiler-team/tree/master/working-groups/learning\u00a0\u2026\n\nGoal: This working group aims to make the compiler easier to learn by ensuring that rustc-guide and api docs are \"complete\". \n\ncc/ @nikomatsakis  and @spastorino",
            "username": "amanjeev",
            "num_likes": 52,
            "num_retweets": 11,
            "num_replies": 2
        },
        "1123549138430246913": {
            "id": "1123549138430246913",
            "text": "We have built an application in Rust and AWS that recognize a person entering any security system\nhttps://blog.knoldus.com/hawk-image-recognition-project-using-rust-and-aws-services/\u00a0\u2026\n@rustlang @ThisWeekInRust @read_rust @RustBridge @rustlang @Knolspeak",
            "username": "muditchhabra1",
            "num_likes": 20,
            "num_retweets": 9,
            "num_replies": 0
        },
        "1123366673455562752": {
            "id": "1123366673455562752",
            "text": "Today I released physical image-based lighting as well as emissive materials for rendy-pbr. This means it can load a spherical HDR, filter it, and use it for physically-based lighting and reflections! Made with @rustlang and @VulkanAPI /Metal/(soon)DX12 https://github.com/termhn/rendy-pbr\u00a0\u2026pic.twitter.com/VWFzwYVvKz",
            "username": "fu5ha",
            "num_likes": 59,
            "num_retweets": 9,
            "num_replies": 5
        },
        "1123373463513829377": {
            "id": "1123373463513829377",
            "text": "Check out a wrap-up blog post of the first ever @RustConAsia, written by our wonderful intern, June Huang. @rustlang #rustlang #TiDB #TiKV.https://hubs.ly/H0hGw950\u00a0",
            "username": "PingCAP",
            "num_likes": 16,
            "num_retweets": 9,
            "num_replies": 0
        },
        "1123227099815301120": {
            "id": "1123227099815301120",
            "text": "I used 3D printer to make a #Rust logo. It could be a charm. It's just a prototype now. I consider to give one to each speaker in \"Everything in Rust\" track of @coscup \n\nThe CFP is opening: http://bit.ly/2XTfWGD\u00a0\nCOSCUP 2019 - Aug 17th-18th. NTUST, Taiwan\n\n#rustlang #3dprintingpic.twitter.com/n0uBVRjr72",
            "username": "tigercosmos",
            "num_likes": 23,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1123256895287042048": {
            "id": "1123256895287042048",
            "text": " Mozilla is hiring a #rustlang position, focused around infra and http://crates.io\u00a0!  https://careers.mozilla.org/position/gh/1667124/\u00a0\u2026",
            "username": "nikomatsakis",
            "num_likes": 198,
            "num_retweets": 97,
            "num_replies": 1
        },
        "1123293308019724288": {
            "id": "1123293308019724288",
            "text": "Blog post about experiments with writing simple #kubernetes operators in @rustlanghttps://clux.github.io/probes/post/2019-04-29-rust-on-kubernetes/\u00a0\u2026",
            "username": "sszynrae",
            "num_likes": 16,
            "num_retweets": 12,
            "num_replies": 1
        },
        "1123294648045383680": {
            "id": "1123294648045383680",
            "text": "Mike Baker of @smarkets explaining #tokiostreams and @rustlang usage at @RustLdnUsers tonightpic.twitter.com/3Kq4mTqBAv",
            "username": "BrianLinuxing",
            "num_likes": 7,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1123119876728676353": {
            "id": "1123119876728676353",
            "text": "We review three superb frameworks for building web APIs using @rustlang:https://nordicapis.com/3-frameworks-for-building-apis-using-rust/\u00a0\u2026",
            "username": "nordicapis",
            "num_likes": 34,
            "num_retweets": 8,
            "num_replies": 1
        },
        "1123134091673600000": {
            "id": "1123134091673600000",
            "text": "Alright, just throwing it out there: I've resumed the work for the  @couchbase @rustlang SDK! Hope to ship a 1.0.0-alpha.1 soon, stay tuned for a blog post. See https://github.com/couchbaselabs/couchbase-rs\u00a0\u2026 ... feel free to try master if you are adventurous!",
            "username": "daschl",
            "num_likes": 17,
            "num_retweets": 6,
            "num_replies": 1
        },
        "1123164651716583426": {
            "id": "1123164651716583426",
            "text": "I'm documenting my journey learning @rustlang and creating the Rust clone of Ember-CLI:https://www.kennethlarsen.org/rust-for-frontend-developers-modules/\u00a0\u2026",
            "username": "kennethlarsen",
            "num_likes": 33,
            "num_retweets": 10,
            "num_replies": 0
        },
        "1123160853317079040": {
            "id": "1123160853317079040",
            "text": "Okay, enjoyed @OxidizeConf and @RustConAsia? Here's what comes next in @rustlang conferencing.\n\nAll of them are searching for speakers, sponsors and, above all: attendees!\n\nIf you want to promote your specific flavour of Rust, all of them are interested in your talks!\n\n(thread)",
            "username": "Argorak",
            "num_likes": 21,
            "num_retweets": 15,
            "num_replies": 1
        },
        "1123222630457389057": {
            "id": "1123222630457389057",
            "text": "@rustlang What is the best way to test a function that relies on data from an API response without hitting the network in my tests? For now I serialized the response to a text file and am reading it manually. Are there better / more automated ways? #rustlang",
            "username": "scottluptowski",
            "num_likes": 4,
            "num_retweets": 1,
            "num_replies": 3
        },
        "1123054729662091264": {
            "id": "1123054729662091264",
            "text": "Any advice for a good debugger for rust on Windows (IntelliJ or VSCode) with disasm view if possible @rustlang",
            "username": "MackT_uCF",
            "num_likes": 9,
            "num_retweets": 3,
            "num_replies": 2
        },
        "1122965301400879104": {
            "id": "1122965301400879104",
            "text": "If you haven't already seen it: Try out this tutorial for beginners and intermediate rustaceans @rustlanghttps://twitter.com/thinkrapido/status/1118833143845408768\u00a0\u2026",
            "username": "thinkrapido",
            "num_likes": 42,
            "num_retweets": 13,
            "num_replies": 0
        },
        "1122969564176732160": {
            "id": "1122969564176732160",
            "text": "Looking for an easy task with Rusoto, the #AWS SDK for #rustlang ? https://github.com/rusoto/rusoto/issues/1370\u00a0\u2026 is up for grabs! @rustlang",
            "username": "Motoblag",
            "num_likes": 11,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1122923363708678151": {
            "id": "1122923363708678151",
            "text": "10 key learnings after 30,000 LOC in Rust https://medium.com/@jondot/my-key-learnings-after-30-000-loc-in-rust-a553e6403c19\u00a0\u2026 #rustlang #rust @rustlang /cc @steveklabnik",
            "username": "jondot",
            "num_likes": 97,
            "num_retweets": 26,
            "num_replies": 1
        },
        "1122923394503196672": {
            "id": "1122923394503196672",
            "text": "A little @rustlang project announcement: I\u2019ve just published a first (very early) release of a macOS native Rust Playgrounds app, available athttps://github.com/cmyr/RustPlayground\u00a0\u2026",
            "username": "cmyr",
            "num_likes": 56,
            "num_retweets": 14,
            "num_replies": 0
        },
        "1122934454350041088": {
            "id": "1122934454350041088",
            "text": "i wonder how feasible it would be to try to make a @ZephyrIoT project via @rustlang. i've seen plenty of rust bindings to native libraries: what about an OS?",
            "username": "rektide",
            "num_likes": 6,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1122944790625079296": {
            "id": "1122944790625079296",
            "text": "Quick question for the @rustlang folks.  I'm looking for a probabilistic top-k struct for processing streaming data.  I found the 'pdatastructs' crate but was wondering if there are others I should check.\n\nThanks!  \nhttps://crates.io/crates/pdatastructs\u00a0\u2026",
            "username": "grumi78",
            "num_likes": 4,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1122949831390048256": {
            "id": "1122949831390048256",
            "text": "An example #kubernetes operator in @rustlanghttps://github.com/clux/operator-rs\u00a0\u2026",
            "username": "sszynrae",
            "num_likes": 22,
            "num_retweets": 8,
            "num_replies": 2
        },
        "1122650784028483584": {
            "id": "1122650784028483584",
            "text": "hey #rustlang friends, has anyone come across anything like a quote! or typed-html style macro for building terminal outputs..?\n\n- wonders whether one of the html ones would work-",
            "username": "ryankurte",
            "num_likes": 6,
            "num_retweets": 1,
            "num_replies": 5
        },
        "1122766102474428417": {
            "id": "1122766102474428417",
            "text": "Watch me having talk at Rust Meetup 201905: WebAssembly <3 Rust #rustlang #wasm #rustzghttp://meetu.ps/e/GGPrP/gQpHx/a\u00a0",
            "username": "ivanhorvat82",
            "num_likes": 8,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1122796268156260352": {
            "id": "1122796268156260352",
            "text": "Could somebody point out a good success story of #rustlang/#cpp interop?\n(asking for a friend)",
            "username": "hoodie_de",
            "num_likes": 7,
            "num_retweets": 1,
            "num_replies": 6
        },
        "1122698191059726336": {
            "id": "1122698191059726336",
            "text": "What is your favorite non-language specific aspect of Rust programming? (Leave others in comments)",
            "username": "80guitarhero",
            "num_likes": 19,
            "num_retweets": 2,
            "num_replies": 13
        },
        "1122703805689106432": {
            "id": "1122703805689106432",
            "text": "hi @rustlangpic.twitter.com/WWiBdC2eZX",
            "username": "fivetanley",
            "num_likes": 54,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1122777396648693765": {
            "id": "1122777396648693765",
            "text": "Getting really close to being ready to ship image-based lighting (and emissive materials) in rendy-pbr! It adds so much to the lighting...\n\nWritten in @rustlang with @VulkanAPIpic.twitter.com/WgFoDAh3Md",
            "username": "fu5ha",
            "num_likes": 63,
            "num_retweets": 9,
            "num_replies": 3
        },
        "1122650596803338246": {
            "id": "1122650596803338246",
            "text": "Please help to find a good and cheap screencast recording and editing software for windows. I like to make a video about ownership, borrowing & lifetimes (A Pen & Paper Adventure) I've evaluated Camtasia, but am not totally happy with it #rustlang @rustlangpic.twitter.com/lk1Z7HoTTW",
            "username": "thinkrapido",
            "num_likes": 21,
            "num_retweets": 2,
            "num_replies": 9
        },
        "1122505187174776833": {
            "id": "1122505187174776833",
            "text": "I've started a project of rewriting the #TypeScript compiler in #rustlang and compiling it to wasm, like @jntrnr suggested in this tweet: https://twitter.com/jntrnr/status/1063838121823858688\u00a0\u2026\n\nHere is the github repo: https://github.com/yever/rusty-typescript\u00a0\u2026\n@TypescriptRusty",
            "username": "jaaaarwr",
            "num_likes": 96,
            "num_retweets": 22,
            "num_replies": 5
        },
        "1122486558018494464": {
            "id": "1122486558018494464",
            "text": "Just published my first @rustlang crate in the @rustembedded eco-system during the Berlin #oxidizeconf impl. days! (it's a very simple driver that I just made platform-agnostic with embedded-hal).\n\nNow... time to try it out on the nRF52832 MCU!pic.twitter.com/Kg7Lt1MNd6",
            "username": "gferon",
            "num_likes": 65,
            "num_retweets": 14,
            "num_replies": 1
        },
        "1122531555350581248": {
            "id": "1122531555350581248",
            "text": "Just released v0.0.1 of my @OxidizeConf impl day project for today: \n\nmicromath: a @rustembedded arithmetic, 2D/3D vector, and statistics library based on fast bitwise approximations \n\nhttps://crates.io/crates/micromath\u00a0\u2026\n\n/cc @rustlang",
            "username": "bascule",
            "num_likes": 36,
            "num_retweets": 8,
            "num_replies": 2
        },
        "1122558585156796416": {
            "id": "1122558585156796416",
            "text": "Ho #rustlang rustacians, I've to read more then 6M files from a single dir. Which Is the Better way to do It? cc @rustlang",
            "username": "mlusetti",
            "num_likes": 13,
            "num_retweets": 2,
            "num_replies": 8
        },
        "1122559233348730880": {
            "id": "1122559233348730880",
            "text": "Going live in a little under ten minutes to solder and try @rustlang on some hardware!http://Twitch.tv/nodebotanist\u00a0",
            "username": "nodebotanist",
            "num_likes": 12,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1122197727771676672": {
            "id": "1122197727771676672",
            "text": "I just published about error handling in #rust @rustlanghttps://dev.to/saiumesh/error-handling-in-rust-programming-language-3g4\u00a0\u2026",
            "username": "saiumesh",
            "num_likes": 97,
            "num_retweets": 16,
            "num_replies": 2
        },
        "1122207965702971394": {
            "id": "1122207965702971394",
            "text": "@rustlang Is there a workaround for autotraits and lack of negative trait bounds? I want to mark all types PII per default, opt out with neg. impl and forbid PII from being logged with s/t like fn log<V: !Pii>(value: V)\ncc @spacekookie @steveklabnik @Carols10cents @withoutboats",
            "username": "felipesere",
            "num_likes": 8,
            "num_retweets": 3,
            "num_replies": 5
        },
        "1122171035904815105": {
            "id": "1122171035904815105",
            "text": "Now Some more interesting observations on my @rustlang performance journey with simdjson. I made a change that drastically increases CPU cycles but reduces reduces cache misses and references. The increase in cycles made me think it\u2019d degrade performance, turns out it didn\u2019t /\u2026",
            "username": "heinz_gies",
            "num_likes": 22,
            "num_retweets": 3,
            "num_replies": 2
        },
        "1122177849090367488": {
            "id": "1122177849090367488",
            "text": "Just released pdatastructs 0.6, featuring:\n\n- T-Digest\n- Lossy Counter\n\nhttps://crates.io/crates/pdatastructs\u00a0\u2026\nhttps://docs.rs/pdatastructs/0.6.0/pdatastructs/\u00a0\u2026\nhttps://github.com/crepererum/pdatastructs.rs\u00a0\u2026\n@rustlang",
            "username": "crepererum",
            "num_likes": 21,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1122151577056313344": {
            "id": "1122151577056313344",
            "text": "Half way through the \u2066@rustembedded\u2069 book and I must say: even if you don\u2019t want to know about \u2066@rustlang\u2069 so much it\u2019s an excellent intro into embedded programming.  https://rust-embedded.github.io/book/peripherals/singletons.html\u00a0\u2026",
            "username": "nburdy",
            "num_likes": 96,
            "num_retweets": 17,
            "num_replies": 3
        },
        "1122141095704444929": {
            "id": "1122141095704444929",
            "text": "First of all, Oxidize is presented by @FerrousSystems, focused on @rustlang networking and embedded things. We train, develop and prototype.\n\nhttp://ferrous-systems.com\u00a0",
            "username": "OxidizeConf",
            "num_likes": 21,
            "num_retweets": 4,
            "num_replies": 1
        },
        "1122125647797784576": {
            "id": "1122125647797784576",
            "text": ".@rustlang\u2069 embedded seems pretty awesome on the surface. Between compile time enforced design contracts on pin modes and the HAL traits, it seems like it\u2019s solving for the right things.\nAnyone using it in production/have opinions?\n\u2066@__deetz__\u2069  https://docs.rust-embedded.org/book/static-guarantees/design-contracts.html\u00a0\u2026",
            "username": "nburdy",
            "num_likes": 24,
            "num_retweets": 4,
            "num_replies": 2
        },
        "1121983385168224256": {
            "id": "1121983385168224256",
            "text": "@rustlang investing in building developer communitiy in Nigeria (the 4th fastest growing developer ecosystem) according to @github will  truely improve rust adoption here pic.twitter.com/eJm9Uc3u06",
            "username": "opara_proser",
            "num_likes": 23,
            "num_retweets": 4,
            "num_replies": 1
        },
        "1121983373537423360": {
            "id": "1121983373537423360",
            "text": "@rustlang a community in Nigeria  will definitely suffice, and this trends will definitely change and cap at 75 - Max 5years from now.pic.twitter.com/awmaiM3Uvc",
            "username": "opara_proser",
            "num_likes": 6,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1121976303656165376": {
            "id": "1121976303656165376",
            "text": "jsonrpc-server is a proxy server written in @rustlang that allows a subset of the @codechain_io RPCs. Our team uses this tool to operate a public CodeChain RPC node. Check it out!https://github.com/CodeChain-io/jsonrpc-filter\u00a0\u2026",
            "username": "kwangyulseo",
            "num_likes": 18,
            "num_retweets": 10,
            "num_replies": 0
        },
        "1121871699086123008": {
            "id": "1121871699086123008",
            "text": "If you're considering using WebAssembly, and you've not tried @rustwasm's wasm-bindgen, you should! Take a look at two versions of a simple function written in Rust and callable from JS: one version written with wasm-bindgen and the other hand-written. The difference is huge!pic.twitter.com/MmBFSwUb0V",
            "username": "ryan_levick",
            "num_likes": 119,
            "num_retweets": 24,
            "num_replies": 1
        },
        "1121806697390071813": {
            "id": "1121806697390071813",
            "text": "Here are our meeting notes from yesterday: \nhttps://users.rust-lang.org/t/async-ecosystem-wg/27619\u00a0\u2026\n\nWant to be part of the discussion? Join in on Discord every Thursday at 4pm UTChttps://discord.gg/nDUEKhX\u00a0",
            "username": "RustNetWG",
            "num_likes": 30,
            "num_retweets": 13,
            "num_replies": 0
        },
        "1121911927301558272": {
            "id": "1121911927301558272",
            "text": "Had fun porting a @rustlang terminal demo to work on Windows this morning. Now Windows users can also enjoy the thrill of the spinning Pikachu \n\nBlog: http://www.jonathanturner.org/2019/04/porting-the-pikachu.html\u00a0\u2026\nRepo: https://github.com/jonathandturner/rust-sloth/tree/crossterm-port\u00a0\u2026pic.twitter.com/3RVnwtEgoj",
            "username": "jntrnr",
            "num_likes": 73,
            "num_retweets": 12,
            "num_replies": 1
        },
        "1121748502864855040": {
            "id": "1121748502864855040",
            "text": "Just released version 0.1.5 of juniper-from-schema https://crates.io/crates/juniper-from-schema\u00a0\u2026\n\nIt includes support for default argument values and has a couple of bug fixes.\n\n#rustlang #graphql",
            "username": "DavidPdrsn",
            "num_likes": 8,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1121767624977698817": {
            "id": "1121767624977698817",
            "text": "\u5b9f\u8df5Rust\u5165\u9580\u306e\u732e\u672c\u3092\u9802\u304d\u307e\u3057\u305f\u3002\n\u6211\u304c\u5bb6\u306eferris\u3061\u3083\u3093\u3082\u5927\u559c\u3073\u3057\u3066\u307e\u3059\n\u672c\u65e5\u304b\u3089\u96fb\u5b50\u672c\u3082\u8ca9\u58f2\u958b\u59cb\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u305c\u3072\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\nI got the Japanese Rust book !!!\n\u5927\u5207\u306b\u8aad\u307e\u305b\u3066\u9802\u304d\u307e\u3059\n#rust_jp #rustlangpic.twitter.com/4CPAJNGjuf",
            "username": "T5uku5hi",
            "num_likes": 68,
            "num_retweets": 12,
            "num_replies": 2
        },
        "1121804261598351365": {
            "id": "1121804261598351365",
            "text": "How could i dynamically compile #rustlang code and load it as library for immidiate use? @rustlang",
            "username": "serzhiio",
            "num_likes": 11,
            "num_retweets": 3,
            "num_replies": 3
        },
        "1121828910646419457": {
            "id": "1121828910646419457",
            "text": "Latest #rustlang video, about \"representing types in rustc\". This video is part of an experiment. The compiler team's learning WG will try to turn it into a rustc-guide chapter for others to read!https://youtu.be/c01TsOsr3-c\u00a0",
            "username": "nikomatsakis",
            "num_likes": 99,
            "num_retweets": 28,
            "num_replies": 0
        },
        "1121838069710249984": {
            "id": "1121838069710249984",
            "text": "Been working on my own programming language as a hobby, called Mamba . It's like Python, but with types , null safety , and some other cool stuff . You can check out the repo  (still in early stages )\nIt's a transpiler written using @rustlanghttps://www.github.com/JSAbrahams/mamba\u00a0\u2026",
            "username": "JoelAbrahams96",
            "num_likes": 80,
            "num_retweets": 9,
            "num_replies": 2
        },
        "1121811750922407936": {
            "id": "1121811750922407936",
            "text": "90's chats are coming back. Come and see what I'm doing with my new @rustlang project, love your here your thoughts: https://oribenshir.github.io/afternoon_rusting/blog/project-introduction\u00a0\u2026\n#rustlang #afternoon_rusting",
            "username": "oribenshir",
            "num_likes": 11,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1121788439337193473": {
            "id": "1121788439337193473",
            "text": "over a year since I've touched rustfm-scrobble - my @lastfm Scrobbling API library for @rustlang - new release today!\n\nhttps://github.com/bobbo/rustfm-scrobble/releases/tag/v0.9.2\u00a0\u2026\n\nThanks to @Input_Username & @agersant for their contributions.",
            "username": "davidmfutcher",
            "num_likes": 16,
            "num_retweets": 5,
            "num_replies": 1
        },
        "1121744996992978944": {
            "id": "1121744996992978944",
            "text": "Why shall I learn @rustlang ? What are the pros and cons compared to C++",
            "username": "gregrisch",
            "num_likes": 31,
            "num_retweets": 10,
            "num_replies": 23
        },
        "1121756119062458369": {
            "id": "1121756119062458369",
            "text": "I have blog postified my embedded rust adventure that ultimately boils down to making a LED blink. @rustlanghttps://idursun.com/posts/hello_world_in_morse_code/\u00a0\u2026",
            "username": "idursun",
            "num_likes": 32,
            "num_retweets": 9,
            "num_replies": 0
        },
        "1121761942757085185": {
            "id": "1121761942757085185",
            "text": "Any suggestions for the best @rustlang game engine for game jams?\nI need something that is as quick as possible to set up.\nI've been considering ggez since I like the L\u00d6VE-way, but I'm close to switching to @AmethystEngine.\n#rustlang",
            "username": "themeshpotato",
            "num_likes": 14,
            "num_retweets": 4,
            "num_replies": 5
        },
        "1121471328878497795": {
            "id": "1121471328878497795",
            "text": "Rust 1.34.1 contains some fixes for the new 'const fn finder' Clippy lint `missing_const_for_fn` so now is the perfect time to give it a try and report bugs. You can give it a try with `cargo clippy -- -W clippy::missing_const_for_fn` #rustlang #rust",
            "username": "philhansch",
            "num_likes": 12,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1121477616974872578": {
            "id": "1121477616974872578",
            "text": "Having no end of trouble with rustup and cargo behind a web proxy. They both used to work, but now rustup only works with RUSTUP_USE_CURL=1, and cargo doesn't work at all. Proxy is set in the env and in ~/.cargo/config. Anyone seen this? #rustlang",
            "username": "mgdm",
            "num_likes": 4,
            "num_retweets": 4,
            "num_replies": 2
        },
        "1121516989023965185": {
            "id": "1121516989023965185",
            "text": ".@rustlang \u00e9 o tema da palestra de @ElemarJr, Senior Engineer @ Hibernating Rhinos. Descubra o que torna o c\u00f3digo Rust t\u00e3o elegante sem perda de performance, em um panorama geral da linguagem com \u00eanfase no tratamento da mem\u00f3ria: https://buff.ly/2VpzBjL\u00a0pic.twitter.com/6fgPkZNJ0Y",
            "username": "QConSP",
            "num_likes": 8,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1121490424739303425": {
            "id": "1121490424739303425",
            "text": "I looked into if iterators are really zero overhead in @rustlang it sounded like a dubious claim to be honest, turns out that all my tests say they are! I\u2019m impressed. Interesting side discovery a loop over a vector is significantly slower then over the vector as slice!",
            "username": "heinz_gies",
            "num_likes": 100,
            "num_retweets": 23,
            "num_replies": 4
        },
        "1121496288783228933": {
            "id": "1121496288783228933",
            "text": "I wrote a @rustlang auto-import plugin for Sublime Text supporting in-project and standard library types and traits. It was super handy for the compiler I wrote in Rust this term. https://github.com/trishume/SublimeRustAutoImport\u00a0\u2026pic.twitter.com/qUkGfNv3Gv",
            "username": "trishume",
            "num_likes": 67,
            "num_retweets": 8,
            "num_replies": 3
        },
        "1121475080855355393": {
            "id": "1121475080855355393",
            "text": "I want to make my @rustlang streaming more relevant for people. Please let me know what kind of streams about Rust you want to see. Reply or vote! ",
            "username": "ryan_levick",
            "num_likes": 23,
            "num_retweets": 5,
            "num_replies": 7
        },
        "1121457805783965697": {
            "id": "1121457805783965697",
            "text": "We just released version 0.5.0 of our @rustlang word embeddings training package, finalfrontier. This version adds support for dependency embeddings. Support for depembeds was implemented by Sebastian P\u00fctz.https://github.com/finalfusion/finalfrontier/releases/tag/0.5.0\u00a0\u2026",
            "username": "danieldekok",
            "num_likes": 12,
            "num_retweets": 4,
            "num_replies": 1
        },
        "1121458521390878721": {
            "id": "1121458521390878721",
            "text": "We also released version 0.2.0 of our finalfusion wheel to PyPI. It now returns embeddings as numpy arrays rather than Python lists .\n\nhttps://finalfusion.github.io/python\u00a0",
            "username": "danieldekok",
            "num_likes": 5,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1121459021372850176": {
            "id": "1121459021372850176",
            "text": "This is the first time I was the one pushing out a @rustlang release! yay!https://twitter.com/rustlang/status/1121454622898622464\u00a0\u2026",
            "username": "pietroalbini",
            "num_likes": 95,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1121469859320291334": {
            "id": "1121469859320291334",
            "text": "Question for @rustlang folks: have you ever had a function signature that needed multiple [non-static] lifetimes where collapsing them into one wouldn\u2019t work? Aren\u2019t all lifetimes just \u2018the length of this function call and maybe a little more\u2019?",
            "username": "Pearfalse",
            "num_likes": 3,
            "num_retweets": 3,
            "num_replies": 4
        },
        "1121457420641820672": {
            "id": "1121457420641820672",
            "text": "We are writing our next-gen enterprise storage engine for Kubernetes in @rustlang \nSuper excited for the future of #Rust",
            "username": "muratkarslioglu",
            "num_likes": 23,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1121432216599453698": {
            "id": "1121432216599453698",
            "text": "One year ago I didn't see many paying @rustlang jobs. The core team at Mozilla & a few outliers. There may have been more & I just didn't know. But, I see more & more start-ups especially in the embedded space in need of Rustaceans. That's a good sign! @rustembedded",
            "username": "joeldpalmer",
            "num_likes": 113,
            "num_retweets": 19,
            "num_replies": 5
        },
        "1121211924031528961": {
            "id": "1121211924031528961",
            "text": "Help to build Pants and its surrounding open source infrastructure! #rustlang #python #scalahttps://twitter.com/stuhood/status/1121166523035291648\u00a0\u2026",
            "username": "pantsbuild",
            "num_likes": 11,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1121249432727621632": {
            "id": "1121249432727621632",
            "text": "I stayed up late to make @travisci compile my #rustlang app on different OSs and ship the binaries to GitHub releases automatically and documented the entire process in a blog\n\nread about it here on @ThePracticalDev :https://dev.to/hawkinjs/leveraging-travis-ci-for-continuous-deployment-to-publish-compiled-binaries-to-github-2k06\u00a0\u2026",
            "username": "hawkinjs",
            "num_likes": 53,
            "num_retweets": 13,
            "num_replies": 2
        },
        "1121237973100634113": {
            "id": "1121237973100634113",
            "text": "I didn't see a @rustlang interface to setproctitle() anywhere, so I made one: https://github.com/Freaky/rust-proctitle/\u00a0\u2026\n\nTested on FreeBSD, Linux, and Windows, though support for the latter is less than ideal.",
            "username": "blaagh",
            "num_likes": 14,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1121297952310358018": {
            "id": "1121297952310358018",
            "text": "What I Learnt Building a Lobsters TUI in @rustlang https://www.wezm.net/technical/2019/04/lobsters-tui/\u00a0\u2026pic.twitter.com/Wp8Lo0RlqF",
            "username": "wezm",
            "num_likes": 25,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1121377628378759171": {
            "id": "1121377628378759171",
            "text": "The @rustlang Youtube account is so successful and used that there's a discussion splitting it into multiple channels. There's definitely the need for sections. Do I know anyone running a large mulit-subject channel?",
            "username": "Argorak",
            "num_likes": 20,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1121415838643441664": {
            "id": "1121415838643441664",
            "text": "Fitting. The first embedded @rustlang conference happens at @thoughtworks Werkstatt Berlin, this weekend!https://twitter.com/thoughtworks/status/1120983366008999936\u00a0\u2026",
            "username": "OxidizeConf",
            "num_likes": 11,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1118284327870173185": {
            "id": "1118284327870173185",
            "text": "Just 3 weeks till the next @gnome  @rustlang hackfest in Berlin! Come join us, whether it is to help us  in creating a safe & efficient desktop or to hack on anything Rust or GNOME https://wiki.gnome.org/Hackfests/Rust2019\u00a0\u2026",
            "username": "zeenix",
            "num_likes": 31,
            "num_retweets": 8,
            "num_replies": 3
        },
        "1121161031135350784": {
            "id": "1121161031135350784",
            "text": "And futures is stable on 1.36! (PR has merged)https://github.com/rust-lang/rust/pull/59739\u00a0\u2026",
            "username": "nick_r_cameron",
            "num_likes": 298,
            "num_retweets": 73,
            "num_replies": 2
        },
        "1121133520531779584": {
            "id": "1121133520531779584",
            "text": ".@rustlang people: how can i construct an example of a tokio delay being cancelled? here's my (bad) attempt: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=fe5e139389663bccb55a494dcc9c020d\u00a0\u2026",
            "username": "bengl",
            "num_likes": 3,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1121142951630049280": {
            "id": "1121142951630049280",
            "text": "Wow, since I released rustup 1.18.0 I've actually had people look at and try https://crates.io/crates/git-testament\u00a0\u2026 which I really wasn't expecting.\n\nHere's hoping I get some good feature requests and/or bug reports :D\n\n(#unexpected @rustlang community engagement FTW)",
            "username": "dsilverstone",
            "num_likes": 20,
            "num_retweets": 4,
            "num_replies": 4
        },
        "1121117813941268480": {
            "id": "1121117813941268480",
            "text": "I just published about modules in @rustlang https://dev.to/saiumesh/modules-in-rust-programming-language-495m\u00a0\u2026. please share suggestion/feedback. Thanks!!",
            "username": "saiumesh",
            "num_likes": 120,
            "num_retweets": 32,
            "num_replies": 3
        },
        "1121104346106744832": {
            "id": "1121104346106744832",
            "text": "I wrote some @rustlang today https://github.com/wasmerio/wapm-cli/pull/65\u00a0\u2026",
            "username": "teabass",
            "num_likes": 25,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1120764124726726658": {
            "id": "1120764124726726658",
            "text": "Been missing Rust related events? In May we will have first \"show & tell\" event ever in the history of Rust Wroc\u0142aw! Piotr is going to talk about docker-cmd and Wojciech will give us short intro to GUI programming in Rust. more details: https://www.meetup.com/Rust-Wroclaw/events/260858425/\u00a0\u2026\nCome, join us!",
            "username": "RustWroclaw",
            "num_likes": 19,
            "num_retweets": 9,
            "num_replies": 0
        },
        "1120794067737116672": {
            "id": "1120794067737116672",
            "text": "New #rustlang video, starting to dive into how the chalk-engine crate works and its formal foundationshttps://youtu.be/Ny2928cGDoM\u00a0",
            "username": "nikomatsakis",
            "num_likes": 52,
            "num_retweets": 12,
            "num_replies": 0
        },
        "1120896203980455936": {
            "id": "1120896203980455936",
            "text": "Running into an interesting issue wrapping a C API in #rustlang. I threw together a playground example demonstrating the issue: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=9f9e35498d2195d155d83108da1514cf\u00a0\u2026\n\nI'm curious if anyone has any suggestions on what to do here",
            "username": "randomPoison",
            "num_likes": 11,
            "num_retweets": 3,
            "num_replies": 3
        },
        "1120996927212965889": {
            "id": "1120996927212965889",
            "text": "#rustlang meetup is happening in Tokyo. #rust_jppic.twitter.com/0WI1N5pR8e",
            "username": "chikoski",
            "num_likes": 19,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1121073882318934017": {
            "id": "1121073882318934017",
            "text": "This Week in Rust 283 https://buff.ly/2GvKhEk\u00a0 #rustlang",
            "username": "ThisWeekInRust",
            "num_likes": 29,
            "num_retweets": 14,
            "num_replies": 2
        },
        "1121062217573519360": {
            "id": "1121062217573519360",
            "text": ".@rustlang meetup in SF tonight!",
            "username": "Brittain_Ben",
            "num_likes": 8,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1121037060624781313": {
            "id": "1121037060624781313",
            "text": "Finally the .@rustlang @GTKtoolkit bindings have support again for async/await syntax with GIO-style asynchronous functions and latest nightly, and as a side effect was ported to futures 0.3.\n\nLooks quite nice now if you ask me: https://github.com/sdroege/gtk-rs-examples/blob/futures-0.3/src/bin/gio_futures_await.rs\u00a0\u2026",
            "username": "sdroege_",
            "num_likes": 53,
            "num_retweets": 11,
            "num_replies": 1
        },
        "1121010493647466496": {
            "id": "1121010493647466496",
            "text": "The @rustlang user group Munich is happy to welcome @tomaka17, who will be talking about the rust version of @libp2p - the networking stack for the distributed web. Come join us on the 2nd of May in #Munich .https://www.meetup.com/Munich-IPFS-User-Group/events/259762490\u00a0\u2026",
            "username": "klaehnr",
            "num_likes": 28,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1120954459721478144": {
            "id": "1120954459721478144",
            "text": "i dont want to say @rustlang is easy BUT\neven i am able to write and compile a #GTK app on windows 10\n\nThanks @rustlang andhttps://github.com/antoyo/relm\u00a0",
            "username": "woodworker",
            "num_likes": 48,
            "num_retweets": 10,
            "num_replies": 0
        },
        "1120975195190247429": {
            "id": "1120975195190247429",
            "text": "Great Substrate language/tool overview, @rustlang and wasm baked in! #sub0pic.twitter.com/26ALKQ2eSL",
            "username": "byteadventures",
            "num_likes": 11,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1120993741899280385": {
            "id": "1120993741899280385",
            "text": "Hey @rustlang people! What would a port of @Rich_Harris's Svelte.js to #rustlang + #webassembly look like? Is it even possible? Would it make sense? Just curious and exploring ideas. (Rich Harris and Svelte people are welcomed to answer too)",
            "username": "Dj3bbZ",
            "num_likes": 16,
            "num_retweets": 2,
            "num_replies": 3
        },
        "1120857488125984768": {
            "id": "1120857488125984768",
            "text": "I just published Monitoring AWS Batch Jobs with Rust:\n https://medium.com/rusted/monitoring-aws-batch-jobs-with-rust-8f1ef6115871\u00a0\u2026\n#AWS #rust @rustlang",
            "username": "_itsHabib",
            "num_likes": 42,
            "num_retweets": 10,
            "num_replies": 2
        },
        "1120866600620560384": {
            "id": "1120866600620560384",
            "text": "Amazing. So @rustlang meets .NET, perhaps?https://twitter.com/eric_sink/status/1120811624271683585\u00a0\u2026",
            "username": "sidecut",
            "num_likes": 10,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1120867964167839745": {
            "id": "1120867964167839745",
            "text": "That\u2019s one of the destinations I hope to reach, yes.",
            "username": "eric_sink",
            "num_likes": 3,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1120811624271683585": {
            "id": "1120811624271683585",
            "text": "I am writing a tool that converts WebAssembly/WASI modules to .NET assemblies.\n\nBlog post: https://ericsink.com/entries/wasm_wasi_dotnet.html\u00a0\u2026\n\nRepo:https://github.com/ericsink/wasm2cil\u00a0\u2026",
            "username": "eric_sink",
            "num_likes": 416,
            "num_retweets": 127,
            "num_replies": 17
        },
        "1120780842257850368": {
            "id": "1120780842257850368",
            "text": "Just released the first version of XV, my terminal UI hex viewer written in 100% safe @rustlang: https://chrisvest.github.io/xv/\u00a0",
            "username": "chvest",
            "num_likes": 60,
            "num_retweets": 16,
            "num_replies": 3
        },
        "1120757975860350977": {
            "id": "1120757975860350977",
            "text": "Connecting two of my favourite worlds: I've wrapped @davidtolnay's syn (https://github.com/dtolnay/syn\u00a0) into a JS+WASM API so that you can now parse and explore @rustlang ASTs directly in your browser.\n\nCheck it out at https://astexplorer.net/\u00a0!pic.twitter.com/VTPPOcAfB9",
            "username": "RReverser",
            "num_likes": 187,
            "num_retweets": 45,
            "num_replies": 8
        },
        "1120618996229742592": {
            "id": "1120618996229742592",
            "text": "We are so happy to have you here. Thanks to all the speakers and attendees! Hope to see you the next year ~pic.twitter.com/AzCJuVvDKs",
            "username": "RustConAsia",
            "num_likes": 23,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1120748043668578304": {
            "id": "1120748043668578304",
            "text": " I\u2019m happy to announce that @RReverser added @rustlang support to https://astexplorer.net\u00a0. This is also the first #WebAssembly module in astexplorer! Exciting times ",
            "username": "fkling42",
            "num_likes": 87,
            "num_retweets": 13,
            "num_replies": 2
        },
        "1120749891360366592": {
            "id": "1120749891360366592",
            "text": "#RustLab is the only international conference in Italy dedicated to the Rust programming language: reserve your seat today!\n#Developers #rust #rustlang @rustlanghttps://www.rustlab.it/page/1398226/booking\u00a0\u2026",
            "username": "rustlab_conf",
            "num_likes": 19,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1120609246482259970": {
            "id": "1120609246482259970",
            "text": "Cool to see #rustlang icon in an ad for a developer oriented job board.pic.twitter.com/AFv6uIlQ4u",
            "username": "ivergarak",
            "num_likes": 154,
            "num_retweets": 17,
            "num_replies": 1
        },
        "1120660171028615169": {
            "id": "1120660171028615169",
            "text": "I've posted a new article about using DMA and @rustembedded to transfer data to the STM32F3 Discovery Board's Digital to Analog Converter: https://flowdsp.io/blog/stm32f3-02-dac-dma/\u00a0\u2026 #embedded #rustlang",
            "username": "antvangelder",
            "num_likes": 26,
            "num_retweets": 9,
            "num_replies": 0
        },
        "1120654344184041473": {
            "id": "1120654344184041473",
            "text": "This place like its drinks memory safe @rustlangpic.twitter.com/L3SRVVikW6",
            "username": "jesus_bv",
            "num_likes": 149,
            "num_retweets": 16,
            "num_replies": 2
        },
        "1120654794027339783": {
            "id": "1120654794027339783",
            "text": "Building a plugin system with @wasmerio  and @rustlang part 3 is out today!\n\nhttps://wiredforge.com/blog/wasmer-plugin-pt-3/index.html\u00a0\u2026",
            "username": "FreeMasen",
            "num_likes": 21,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1120674794771345408": {
            "id": "1120674794771345408",
            "text": "@rustlang #rustlang If you want to write a cool Rust web server application, start from this little boilerplate! https://github.com/pbzweihander/rust-web-boilerplate\u00a0\u2026\nAll PRs are welcome!",
            "username": "pbzweihander_rs",
            "num_likes": 21,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1120705294810660865": {
            "id": "1120705294810660865",
            "text": "On May 7th I'll be speaking at Google I/O Extended at @PolitecnicaChis. Event organized by @codigofacilito. I'll talk about \"Web Apps with @rustlang and @Firebase\" @mozillareps http://talks.codigofacilito.com/events/google-i-o-extended-tuxtla-gutierrez\u00a0\u2026",
            "username": "mariogmd",
            "num_likes": 6,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1120398325155598337": {
            "id": "1120398325155598337",
            "text": "What is this what the heck? Unresolved import but the next line is unused import for the same thing? Am confusion man #rustlangpic.twitter.com/7ro1v4AKzB",
            "username": "_zeon000",
            "num_likes": 19,
            "num_retweets": 2,
            "num_replies": 2
        },
        "1120433840558878720": {
            "id": "1120433840558878720",
            "text": "New #rustlang blog post: describing a recent experiment on how to better summarize conversations (and hopefully change the dynamics in the process) http://smallcultfollowing.com/babysteps/blog/2019/04/22/aic-collaborative-summary-documents/\u00a0\u2026",
            "username": "nikomatsakis",
            "num_likes": 67,
            "num_retweets": 18,
            "num_replies": 4
        },
        "1120389671924715520": {
            "id": "1120389671924715520",
            "text": "blogged: generic returns in rust https://blog.jcoglan.com/2019/04/22/generic-returns-in-rust/\u00a0\u2026\n\non how rust's type/trait system enables fine-grained control without losing expressiveness, even allowing functions you cannot write in untyped languages",
            "username": "mountain_ghosts",
            "num_likes": 241,
            "num_retweets": 84,
            "num_replies": 12
        },
        "1120357283731390464": {
            "id": "1120357283731390464",
            "text": "I built web server for @rustlang using #rocket. It has database, jwt and private routes implementation.https://github.com/saiumesh535/rocket-rust\u00a0\u2026",
            "username": "saiumesh",
            "num_likes": 29,
            "num_retweets": 6,
            "num_replies": 2
        },
        "1118234121745174536": {
            "id": "1118234121745174536",
            "text": "I just made a Frankenstein's monster: Python code embedded directly in @rustlang code. Should I kill it before it escapes the lab? pic.twitter.com/fKEgl6QTFd",
            "username": "m_ou_se",
            "num_likes": 1317,
            "num_retweets": 504,
            "num_replies": 46
        },
        "1120144685706567680": {
            "id": "1120144685706567680",
            "text": "\u30d6\u30ed\u30b0\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f\u3002\u300cRust\u306eiter::from_fn\u306b\u3064\u3044\u3066\u300d\nBlogged on \"iter::from_fn\" in Rust. #rustlang @rustlang\nhttps://masahiko-ofgp-ja-notebook.blogspot.com/2019/04/rustlang-iter-from-fn.html\u00a0\u2026",
            "username": "masahiko_ofgp",
            "num_likes": 4,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1120231100008284161": {
            "id": "1120231100008284161",
            "text": "@rustlang error[E0507]: cannot move out of borrowed content\n\nHow can i close/drop a file, that is owned by a struct, without dropping the whole struct?  Or is the old file closed automatically? #rust #rustlangpic.twitter.com/zjHSHmn0mr",
            "username": "Wulf_Bloody",
            "num_likes": 12,
            "num_retweets": 2,
            "num_replies": 8
        },
        "1120235459538505728": {
            "id": "1120235459538505728",
            "text": "I have feeling Sha1 from sha-1 is slower than old one from rust-crypto, anyone noticed that? @rustlang",
            "username": "kil0rk",
            "num_likes": 3,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1120291086335971333": {
            "id": "1120291086335971333",
            "text": "\"What I learned from my failed attempt of writing baremetal android in Rust\" @rustlang #rust #arm #androidhttps://onatm.dev/2019/04/22/What-I-learned-from-my-failed-attempt-of-writing-baremetal-android-in-Rust/\u00a0\u2026",
            "username": "onatm",
            "num_likes": 23,
            "num_retweets": 8,
            "num_replies": 2
        },
        "1120299966923042816": {
            "id": "1120299966923042816",
            "text": "I just published a repository of a simple @rustlang web server which I intend to be easy for people coming from NodeJS to understand. It's for self learning purposes and probably not the best implementations. Looking for thoughts and helphttps://github.com/mtmr0x/rust-web-boilerplate\u00a0\u2026",
            "username": "mtmr0x",
            "num_likes": 43,
            "num_retweets": 11,
            "num_replies": 2
        },
        "1120012708454076416": {
            "id": "1120012708454076416",
            "text": "I made yet another html virtual-dom library in @rustlang. I call it Sauron, https://github.com/ivanceras/sauron\u00a0\u2026 . It's inspired by @elmlang.pic.twitter.com/vIWvAmsmlo",
            "username": "ivanceras",
            "num_likes": 70,
            "num_retweets": 16,
            "num_replies": 1
        },
        "1120032786805604352": {
            "id": "1120032786805604352",
            "text": "Have a bank holiday tomorrow (Easter Monday) and looking to work on some open source in @rustlang? We are looking for some help with documentation on the assert_fs cratehttps://github.com/assert-rs/assert_cmd/issues/76\u00a0\u2026",
            "username": "CliRust",
            "num_likes": 10,
            "num_retweets": 6,
            "num_replies": 1
        },
        "1120032042589151232": {
            "id": "1120032042589151232",
            "text": "I am slightly stumped while building a Tide / @rustlang session middleware.\n\nI've outlined the problem here \u2013 it might be that I'm doing something obviously wrong?https://github.com/chrisdickinson/blog-rs/blob/master/src/session.rs#L45\u00a0\u2026",
            "username": "isntitvacant",
            "num_likes": 13,
            "num_retweets": 1,
            "num_replies": 3
        },
        "1120064623196164096": {
            "id": "1120064623196164096",
            "text": "Wrote a tiny lib that makes dealing with Rust panic backtraces a little less  painful. #rust @rustlang https://github.com/athre0z/color-backtrace\u00a0\u2026pic.twitter.com/xeqt1r7VUZ",
            "username": "athre0z",
            "num_likes": 240,
            "num_retweets": 50,
            "num_replies": 10
        },
        "1119991788457078785": {
            "id": "1119991788457078785",
            "text": "Question for @rustlang #rust users of SerDe. I can default a field by using \n#[serde(default = \"blank\")] and then creating a fn blank. Is there a way to apply a default to an entire struct, or a group of fields?",
            "username": "EliBenPorat",
            "num_likes": 2,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1119818639287275521": {
            "id": "1119818639287275521",
            "text": "Actix web 1.0.0 beta1 is released - a small, pragmatic, and extremely fast web framework for @rustlang",
            "username": "fafhrd91",
            "num_likes": 243,
            "num_retweets": 66,
            "num_replies": 2
        },
        "1119626863377252352": {
            "id": "1119626863377252352",
            "text": "@rustlang @rustwasm Is it possible to build web extensions (browser Add-ons) with web assembly instead of Javascript or a mixture of both? Especially for Firefox web extensions?",
            "username": "iamCharlesChege",
            "num_likes": 17,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1119630466968096769": {
            "id": "1119630466968096769",
            "text": "Ever wanted to view a rasterized version of Pikachu in your terminal?\nWell with rust-sloth, now you can!\nhttps://github.com/ecumene-software/rust-sloth\u00a0\u2026\n\nQuite a neat @rustlang project.pic.twitter.com/m3HlZR1iqf",
            "username": "jackharrhyisme",
            "num_likes": 269,
            "num_retweets": 81,
            "num_replies": 7
        },
        "1119652926048415745": {
            "id": "1119652926048415745",
            "text": "Ever been interested in creating a plugin interface for your @rustlang programs? Let's explore how to use @wasmerio to do just that!\n\nhttps://wiredforge.com/blog/wasmer-plugin-pt-1\u00a0\u2026",
            "username": "FreeMasen",
            "num_likes": 55,
            "num_retweets": 17,
            "num_replies": 2
        },
        "1119678439945064454": {
            "id": "1119678439945064454",
            "text": "@rustlang Just released version 0.2.0 of my EVTX parsing crate, with zero-copy JSON output support, this means no more XML-to-JSON conversion, thanks to the incredible serde library. https://github.com/omerbenamram/evtx\u00a0\u2026 #DFIR",
            "username": "OBenamram",
            "num_likes": 13,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1119683496975323136": {
            "id": "1119683496975323136",
            "text": "News: @rustlang 1.33 and 1.34\u2014Moar `const fn`, some `Pin`, and alternative Cargo registries!\n\nhttps://newrustacean.com/show_notes/news/rust_1_33_1_34/\u00a0\u2026",
            "username": "newrustacean",
            "num_likes": 21,
            "num_retweets": 9,
            "num_replies": 0
        },
        "1119612208856436736": {
            "id": "1119612208856436736",
            "text": "Here's a write up of design attempt #1 for parallel query execution in @rustlang .. I'm hoping for suggestions from more experienced Rustaceans https://andygrove.io/2019/04/parallel-query-execution/\u00a0\u2026",
            "username": "andygrove73",
            "num_likes": 34,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1119534279338283008": {
            "id": "1119534279338283008",
            "text": "That's all for today! Please go to dinner with some of your new friends and we'll see you tomorrow bright and early!",
            "username": "RustConAsia",
            "num_likes": 7,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1119300166329044992": {
            "id": "1119300166329044992",
            "text": "Anyone looking for an Embedded #Rustlang job in SF? https://angel.co/helium-2/jobs/541447-senior-firware-engineer-rust-c\u00a0\u2026 @ThisWeekInRust @rustembedded",
            "username": "chrisabruce",
            "num_likes": 12,
            "num_retweets": 14,
            "num_replies": 0
        },
        "1119344559396405248": {
            "id": "1119344559396405248",
            "text": "Has anybody ever generated typescript definitions for serde annotated types outside a wasm context in #rustlang",
            "username": "hoodie_de",
            "num_likes": 8,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1119350941738786827": {
            "id": "1119350941738786827",
            "text": "#rustlang How to avoid using .to_owned() on every string literal?",
            "username": "SamyDindane",
            "num_likes": 10,
            "num_retweets": 3,
            "num_replies": 8
        },
        "1119388078605389824": {
            "id": "1119388078605389824",
            "text": "The #rustlang rand crate is adding a miri pass to their CI to catch UB allowed by unsafe  I'm impressed by how straightforward it is to get miri running now! This seems like something any lib with non-trivial (any) amounts of unsafe should look athttps://github.com/rust-random/rand/pull/781\u00a0\u2026",
            "username": "KodrAus",
            "num_likes": 57,
            "num_retweets": 11,
            "num_replies": 1
        },
        "1119539764435279877": {
            "id": "1119539764435279877",
            "text": "Created video about my practical experience of using @rustlang for game development @rust_gamedev (best at x1.75 speed :))\nhttps://youtu.be/Oc0zDdltZsE\u00a0\n#rustlang",
            "username": "VladZhukov0",
            "num_likes": 27,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1119352428497985536": {
            "id": "1119352428497985536",
            "text": "Deploy de aplicaci\u00f3n Rocket desde @gitlab a @heroku #RustLang @rustlang @rustlang_mxhttps://dev.to/mattdark/deploy-de-aplicacion-rocket-desde-gitlab-a-heroku-4pjg\u00a0\u2026",
            "username": "mariogmd",
            "num_likes": 7,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1119379921086734336": {
            "id": "1119379921086734336",
            "text": "Is there some best practices around when to use map/and_then vs match for Option and Result types in @rustlang?",
            "username": "beardfury",
            "num_likes": 21,
            "num_retweets": 2,
            "num_replies": 2
        },
        "1119216737927532545": {
            "id": "1119216737927532545",
            "text": "Hey there! #RustLab schedule is online! Buy your ticket now!\n#Rust #Rustlang\n https://www.rustlab.it/agenda\u00a0pic.twitter.com/hw3WjSllPX",
            "username": "rustlab_conf",
            "num_likes": 11,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1119230536709496832": {
            "id": "1119230536709496832",
            "text": "Does anybody have a good barebones #rustlang example of detecting a TcpStream connection failure and attempting to re-connect over some number of retries or a timeout period? #tcp I've got a reader thread and a writer thread, looking for a good pattern to bounce/retry them",
            "username": "KevinHoffman",
            "num_likes": 8,
            "num_retweets": 1,
            "num_replies": 3
        },
        "1119318699457097728": {
            "id": "1119318699457097728",
            "text": "Hey #rustlang  folks - what are some projects you worked on in the beginning that helped you grasp #rust? Thanks!",
            "username": "ScottVaverchak",
            "num_likes": 42,
            "num_retweets": 6,
            "num_replies": 24
        },
        "1119260550985285632": {
            "id": "1119260550985285632",
            "text": "Just published https://medium.com/@jondot/12-killer-rust-libraries-you-should-know-c60bab07624f\u00a0\u2026 #rust #rustlang /cc @rustlang @steveklabnik",
            "username": "jondot",
            "num_likes": 107,
            "num_retweets": 46,
            "num_replies": 2
        },
        "1119302766252498949": {
            "id": "1119302766252498949",
            "text": "I did a thing in @rustlang: https://github.com/nlopes/avro-schema-registry\u00a0\u2026. Mostly to put my learnings into a bigger app.\n\nDo leave feedback if you have any!",
            "username": "shelikavoid",
            "num_likes": 10,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1118946325377245184": {
            "id": "1118946325377245184",
            "text": "Well, I wrote a very long article about parser combinators in Rust. https://bodil.lol/parser-combinators/\u00a0\u2026",
            "username": "bodil",
            "num_likes": 520,
            "num_retweets": 147,
            "num_replies": 25
        },
        "1119088183122096129": {
            "id": "1119088183122096129",
            "text": "The World's Fourth Simplest Bytecode Intepreter: The Register Machine, now in #rustlang: https://elfsternberg.com/2019/04/18/worlds-fourth-simplest-bytecode-interpreter-register-machines/\u00a0\u2026",
            "username": "elfsternberg",
            "num_likes": 11,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1119100113761099783": {
            "id": "1119100113761099783",
            "text": "Rusoto, an AWS SDK for #rustlang, has release 0.38.0 out the door! pic.twitter.com/2KDrt9hIbS",
            "username": "Motoblag",
            "num_likes": 29,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1119137343032553478": {
            "id": "1119137343032553478",
            "text": "The World's Fifth Simplest Bytecode Interpreter: A Regex Engine, in #rustlang! https://elfsternberg.com/2019/04/18/the-worlds-fifth-simplest-bytecode-interpreter-a-regular-expression-engine/\u00a0\u2026",
            "username": "elfsternberg",
            "num_likes": 22,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1119197163999911936": {
            "id": "1119197163999911936",
            "text": "New #rustlang blog post: \"AiC: Adventures in consensus\". Exploring what it might mean to \"focus on finding the best solution, rather than winning the argument\". http://smallcultfollowing.com/babysteps/blog/2019/04/19/aic-adventures-in-consensus/\u00a0\u2026",
            "username": "nikomatsakis",
            "num_likes": 130,
            "num_retweets": 40,
            "num_replies": 2
        },
        "1119197978898518017": {
            "id": "1119197978898518017",
            "text": "Blog: Lessons moving from iOS delegates to Rust async https://thomask.sdf.org/blog/2019/04/19/lessons-moving-from-ios-delegates-to-rust-async.html\u00a0\u2026 #rustlang",
            "username": "teek_eh",
            "num_likes": 16,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1119114411778535424": {
            "id": "1119114411778535424",
            "text": "dwm (dynamic window manager http://dwm.suckless.org/\u00a0) converted from C to (unsafe) Rust with c2rust running in Xephyr /cc @immunant @rustlangpic.twitter.com/FOX8gDpGIb",
            "username": "wezm",
            "num_likes": 63,
            "num_retweets": 11,
            "num_replies": 2
        },
        "1119142205543706625": {
            "id": "1119142205543706625",
            "text": "That's it! I have a working webauthn with u2f library for @rustlang! Reviews and comments are welcome:https://github.com/Firstyear/webauthn-rs/\u00a0\u2026",
            "username": "Erstejahre",
            "num_likes": 40,
            "num_retweets": 9,
            "num_replies": 1
        },
        "1119212690801446912": {
            "id": "1119212690801446912",
            "text": "https://learning-rust.github.io/\u00a0 got its 400th today. Have many things in my mind to improve @rustlang learning process. But, still I have to spend more time on practicing Go with my current job, even on weekends. Quite sad, because I missed RustCon Asia at this moment. #rustlang #rustpic.twitter.com/310iSBSTQ5",
            "username": "dumindu_nuwan",
            "num_likes": 317,
            "num_retweets": 70,
            "num_replies": 3
        },
        "1118985888363687936": {
            "id": "1118985888363687936",
            "text": "I extracted the hash map build from simdjson-rs into it\u2019s own crate I figure other @rustlang projects might get some use out of it aside of smidgeon: https://crates.io/crates/halfbrown\u00a0\u2026",
            "username": "heinz_gies",
            "num_likes": 21,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1119014224804503553": {
            "id": "1119014224804503553",
            "text": "Render's getting ready to roll out native @rustlang support in the next few days. DM me if you'd like to try it out before anyone else!",
            "username": "anuraggoel",
            "num_likes": 25,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1118964980965994496": {
            "id": "1118964980965994496",
            "text": "Anybody up for a CR? I wanted to see if Go's single flight package made sense in @rustlang. Here is a gist of the code with a link to the Go file: https://gist.github.com/gsquire/99dfed3d4e8cadce54035d574d2406b5\u00a0\u2026\n\nI'm certain there are mistakes so please feel free to point them out.",
            "username": "garrettsquire",
            "num_likes": 13,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1118770896569819137": {
            "id": "1118770896569819137",
            "text": "https://www.amethyst.rs/blog/moss-grant-announce/\u00a0\u2026\n\nAmethyst has received $10,000 in funding from @mozilla's MOSS program to work on #webassembly support! \n#rustlang #gamedev #opensource",
            "username": "AmethystEngine",
            "num_likes": 196,
            "num_retweets": 61,
            "num_replies": 7
        },
        "1118833143845408768": {
            "id": "1118833143845408768",
            "text": "Followup: Tutorial for implementing the command line game HANGMAN. https://github.com/rusticus-io/hangman\u00a0\u2026 #rustlang #Stuttgartpic.twitter.com/6rUWAztIRc",
            "username": "thinkrapido",
            "num_likes": 78,
            "num_retweets": 15,
            "num_replies": 1
        },
        "1118865111379267584": {
            "id": "1118865111379267584",
            "text": "How to write an ASCII symbols image encoder in Rust https://link.medium.com/fi1w8VwiZV\u00a0   by @MightyKho . \nSome beginner insight into #rustlang voted most loved programming language by @StackOverflow surveys . @carwowdev",
            "username": "vrashabh",
            "num_likes": 48,
            "num_retweets": 10,
            "num_replies": 0
        },
        "1118921708600270854": {
            "id": "1118921708600270854",
            "text": "Hey @rustlang and @rustwasm community! Is there a good HTML template markup solution in Rust, so I can write Rust code inside HTML? Along with that, is there a solution to compile that to wasm removing the need for manual JS? (Similar to Razor/Blazor from Microsoft)",
            "username": "80guitarhero",
            "num_likes": 8,
            "num_retweets": 1,
            "num_replies": 4
        },
        "1118887974400417795": {
            "id": "1118887974400417795",
            "text": "Ciao a tutti! Ci vediamo stasera a @tlbxcoworking per contribuire in @rustlang! #rusthttps://www.meetup.com/Mozilla-Torino/events/ktqcpqyzgbhc/\u00a0\u2026",
            "username": "rust_torino",
            "num_likes": 11,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1118901024264089600": {
            "id": "1118901024264089600",
            "text": "Really perfect opportunity for the right person: we\u2019re looking for a Window chaos engineer: someone good at networking. Work in Rust. Remote. https://boards.greenhouse.io/gremlin/jobs/4259805002\u00a0\u2026\n\nPlease share. \nCc @rustlang",
            "username": "JadeRubick",
            "num_likes": 11,
            "num_retweets": 8,
            "num_replies": 0
        },
        "1118915062901637120": {
            "id": "1118915062901637120",
            "text": "Released 0.3.0 of Quinn, our @rustlang QUIC implementation, today! Enabled use with thread pool runtime, latest draft and initial performance numbers and much more good stuff.https://github.com/djc/quinn/releases/tag/0.3.0\u00a0\u2026",
            "username": "djco",
            "num_likes": 70,
            "num_retweets": 18,
            "num_replies": 1
        },
        "1118787000469872640": {
            "id": "1118787000469872640",
            "text": "CodeChain Dashboard is the tool we use to manage and monitor the network. It's #opensource and written in @rustlang. Check it out!\n\n- GitHub: https://github.com/CodeChain-io/codechain-dashboard\u00a0\u2026\n\n- Doc: https://docs.google.com/presentation/d/10atjJj9caoryWr9w25MjJoZfj99s-ebkUHXLUWXWzWk/edit#slide=id.p\u00a0\u2026pic.twitter.com/dfUe7m8YUD",
            "username": "codechain_io",
            "num_likes": 31,
            "num_retweets": 13,
            "num_replies": 0
        },
        "1118817933889875968": {
            "id": "1118817933889875968",
            "text": "RustLab is the only international conference in #Italy dedicated to the Rust programming language: reserve your seat today!\n\n#Developers #rustlab #rust #rustlang @rustlanghttps://www.rustlab.it/home\u00a0",
            "username": "rustlab_conf",
            "num_likes": 16,
            "num_retweets": 4,
            "num_replies": 1
        },
        "1118839042542645250": {
            "id": "1118839042542645250",
            "text": "Para matar el rato estaba pensando en hacer un chorriprograma en @rustlang (y aprender), pero para lo que tengo en mente necesitar\u00eda m\u00f3dulos en la l\u00ednea a lo que tiene @golang (desde la 1.8) o al SPI de @java. \u00bfIdeas? \u00bfSugerencias?",
            "username": "sauloalvarado",
            "num_likes": 1,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1118861989261000704": {
            "id": "1118861989261000704",
            "text": "TONIGHT at 7PM: Jonathan Pallant delivers a talk on Rust, Mozilla's new systems programming language - come and see how it's shaking up all areas of software development!\nMore info & tickets: http://www.computinghistory.org.uk/det/51020/Rust-Tutorial-with-Jonathan-Pallant-Thursday-18th-April-2019/\u00a0\u2026pic.twitter.com/Db4gpyPlAx",
            "username": "computermuseum",
            "num_likes": 24,
            "num_retweets": 6,
            "num_replies": 2
        },
        "1118452761853661185": {
            "id": "1118452761853661185",
            "text": "I wrote my first WIP #rustlang package. A Typescript paths replacer. Feedback welcome. #typescripthttps://github.com/joseluisq/rust-tspath\u00a0\u2026",
            "username": "joseluis_q",
            "num_likes": 11,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1118533701795581952": {
            "id": "1118533701795581952",
            "text": "Share introduce to #Rust tonight at Cat System Workshop, Taipei\n\nSlide: https://www.slideshare.net/AnChiLiu/introduce-to-rusta-powerful-system-language\u00a0\u2026\n#rustlang #RustTaiwanpic.twitter.com/QuKcqa0o4M",
            "username": "tigercosmos",
            "num_likes": 13,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1118568767951450112": {
            "id": "1118568767951450112",
            "text": "Does anyone know if there's a build flag that can be used to build a #specs -based library against the wasm32-unknown-unknown target? :) Asking for a friend #rustlang #gamedev",
            "username": "KevinHoffman",
            "num_likes": 9,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1118586803282251776": {
            "id": "1118586803282251776",
            "text": "And the second simplest bytecode interpreter in Rust: https://elfsternberg.com/2019/04/17/the-second-simplest-bytecode-interpreter-in-rust/\u00a0\u2026 #rustlang",
            "username": "elfsternberg",
            "num_likes": 24,
            "num_retweets": 5,
            "num_replies": 1
        },
        "1118612034332045312": {
            "id": "1118612034332045312",
            "text": "To my fellow developers, I\u2019ve open sourced a project on behalf of @Target  \n\nConsensource is a certificate registry blockchain application that aims to reduce fraud and uncertainty around certifications on products in supply chains! Written in @rustlanghttps://github.com/target/consensource\u00a0\u2026",
            "username": "adeebahmed26",
            "num_likes": 67,
            "num_retweets": 18,
            "num_replies": 2
        },
        "1118554887716052993": {
            "id": "1118554887716052993",
            "text": "#NoZeroDays (1) lexer, parser in @rustlang onhttps://repl.it/@evanxg852000/KnownVioletredDoom\u00a0\u2026",
            "username": "evanxg852000",
            "num_likes": 6,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1118540179856338944": {
            "id": "1118540179856338944",
            "text": "I love clippy @rustlangpic.twitter.com/a1KbhRFhWd",
            "username": "victorkoenders",
            "num_likes": 78,
            "num_retweets": 8,
            "num_replies": 5
        },
        "1118398791781158913": {
            "id": "1118398791781158913",
            "text": "A lot of hard work by @fafhrd91 went into getting actix family to this:\nhttps://www.techempower.com/benchmarks/#section=test&runid=d06ed950-3314-47f0-8708-137a9378ffe7\u00a0\u2026\nAnd it's not just about HTTP which is the most exciting IMO. Great Job!",
            "username": "maxgortman",
            "num_likes": 60,
            "num_retweets": 15,
            "num_replies": 1
        },
        "1118402967001096192": {
            "id": "1118402967001096192",
            "text": "Is there a way to get cargo or another tool to show me the allocations, copies, and clones for a given code path? I want to prove that a change actually does improve my code... #rustlang @rustlang ?",
            "username": "KevinHoffman",
            "num_likes": 20,
            "num_retweets": 1,
            "num_replies": 5
        },
        "1118428046283821056": {
            "id": "1118428046283821056",
            "text": "Rust-meetup on the 30th of April at 19h @MetalabVie @rustlang @ThisWeekInRust \nThis time we're talking about a register software written for ubuntuphone + qt5-creator + rust in the backend as well as an add trait implemention.https://www.meetup.com/Rust-Vienna/events/260693863/\u00a0\u2026",
            "username": "shadowdroid",
            "num_likes": 7,
            "num_retweets": 5,
            "num_replies": 1
        },
        "1118449461506785281": {
            "id": "1118449461506785281",
            "text": "Here's another proove that @cburgdorf 's content is timeless.\n\nThis article on @rustlang 's ownership model for JS developers at @thoughtram is about ~4 years old and still holds true!\n\nhttps://blog.thoughtram.io/rust/2015/05/11/rusts-ownership-model-for-javascript-developers.html\u00a0\u2026\n\nPart of that is also that Rust is committed to never break ppls code.",
            "username": "PascalPrecht",
            "num_likes": 23,
            "num_retweets": 6,
            "num_replies": 1
        },
        "1118499557988556800": {
            "id": "1118499557988556800",
            "text": "In Rust you can write scalar multiplication nicely with the vector as the right-hand side operand, though not for a generic scalar. To explain why I had some fun chasing definitions of the Rust orphan rule. @rustlang @ThisWeekInRust https://www.jstuber.net/2019/04/17/scalar-multiplication-in-rust/\u00a0\u2026",
            "username": "anystring",
            "num_likes": 16,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1118508523552272385": {
            "id": "1118508523552272385",
            "text": "We have just open-sourced a tool (written in @rustlang!) that helps us doing network-related experiments at @PTScientistshttps://github.com/PTScientists/link-simulator\u00a0\u2026",
            "username": "1101_debian",
            "num_likes": 34,
            "num_retweets": 9,
            "num_replies": 2
        },
        "1118312854808072192": {
            "id": "1118312854808072192",
            "text": "A Rusty Perspective! An important message! #rustlang #WebAssemblypic.twitter.com/l8PLhwRaWw \u2013 at Cloudflare",
            "username": "ATxTE",
            "num_likes": 9,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1118285641089814528": {
            "id": "1118285641089814528",
            "text": "I think this is the last hurdle for getting @rustlang working on @SiFive's HiFive Unleashed 64-bit @risc_v developer boardhttps://github.com/rust-lang/rust/issues/59802\u00a0\u2026",
            "username": "bascule",
            "num_likes": 35,
            "num_retweets": 5,
            "num_replies": 1
        },
        "1118274935892299776": {
            "id": "1118274935892299776",
            "text": "These Nixie tube IoT alarm clocks may be funded yet: lots of progress in a day!\n\nI should also mention there's a @rustembedded toolchain for the ESP8266 WiFi-capable SoC these, so you can use @rustlang to make them display whatever number you want https://github.com/emosenkis/esp-rs\u00a0\u2026pic.twitter.com/em77oSu4Ko",
            "username": "bascule",
            "num_likes": 10,
            "num_retweets": 2,
            "num_replies": 2
        },
        "1118273185458208768": {
            "id": "1118273185458208768",
            "text": "I have the opportunity to introduce @rustlang to my coworkers and start getting paid to write Rust. Primarily we're looking at writing a bunch of microservices. Does anyone have experience doing this in The Real World? Is Rust ready for this?",
            "username": "MikeCluck",
            "num_likes": 93,
            "num_retweets": 10,
            "num_replies": 16
        },
        "1118207144128421888": {
            "id": "1118207144128421888",
            "text": "CFP closes tonight!\n\nhttp://cfp.rustconf.com\u00a0",
            "username": "rustconf",
            "num_likes": 23,
            "num_retweets": 14,
            "num_replies": 1
        },
        "1118217686255849472": {
            "id": "1118217686255849472",
            "text": "A great feature in #rust that isn't well known is the `rust-toolchain` file,\nThis let's you specify a compiler version and then it will auto install it for the users so they won't use the wrong version!\n@rustlang",
            "username": "Elichai2",
            "num_likes": 87,
            "num_retweets": 23,
            "num_replies": 6
        },
        "1118211159285432320": {
            "id": "1118211159285432320",
            "text": "This essentially brings top-level await to Rust, which is something I've wanted in other languages for years now.\n\nIt's also generic over any backing runtime, so you can switch between Romio + Juliex and Tokio by changing a single line.\n\nVery excited for the future of async Rust!",
            "username": "yoshuawuyts",
            "num_likes": 80,
            "num_retweets": 10,
            "num_replies": 6
        },
        "1118205470106378241": {
            "id": "1118205470106378241",
            "text": "Happy to share what I've been working on for the past 3 months:\n\nRuntime, a crate to empower everyone to write async rust.\n\nhttps://blog.yoshuawuyts.com/runtime/\u00a0pic.twitter.com/i4ZoOAhWBo",
            "username": "yoshuawuyts",
            "num_likes": 368,
            "num_retweets": 106,
            "num_replies": 13
        },
        "1118194691856429056": {
            "id": "1118194691856429056",
            "text": "Hey rustaceans, i have a linking question. I'm building a lib that depends on a crate and I notice that rust is linking all the functions from the module I need rather than just the functions I need, is this necessary? Why does this happen? #rustlang @rustlang",
            "username": "squidboylan",
            "num_likes": 12,
            "num_retweets": 2,
            "num_replies": 4
        },
        "1118109763579961344": {
            "id": "1118109763579961344",
            "text": "CodeChain engineer Juhyung published an article explaining what @rustlang associated types are and how CodeChain takes advantage of them.https://medium.com/codechain/rust-associated-type-b0193c22eacd\u00a0\u2026",
            "username": "kwangyulseo",
            "num_likes": 43,
            "num_retweets": 13,
            "num_replies": 2
        },
        "1118017006643630080": {
            "id": "1118017006643630080",
            "text": "Code available here.  Please give me feedback on my Rust @rustlang, I'm a C++ guy and this is my first significant Rust project.https://github.com/DrGr4f1x/raytracing-rust\u00a0\u2026",
            "username": "DrGr4f1x",
            "num_likes": 23,
            "num_retweets": 5,
            "num_replies": 7
        },
        "1117919187362410497": {
            "id": "1117919187362410497",
            "text": "PSA: run `rustup --version` if the version is less than 1.17 run `rustup self update`. You'll only have to do this once - more recent versions self-update automatically, but if you're stuck on an older version, you need to do it manually",
            "username": "nick_r_cameron",
            "num_likes": 49,
            "num_retweets": 11,
            "num_replies": 1
        },
        "1117830408119492608": {
            "id": "1117830408119492608",
            "text": "New #rustlang blog post: http://smallcultfollowing.com/babysteps/blog/2019/04/15/more-than-coders/\u00a0\u2026 -- about the many things that go into making rustc, not just coding.",
            "username": "nikomatsakis",
            "num_likes": 98,
            "num_retweets": 27,
            "num_replies": 0
        },
        "1117857607207641096": {
            "id": "1117857607207641096",
            "text": "\u304e\u3048\u30fc DynASM for #RustLang \u3060\u30fchttps://twitter.com/termoshtt/status/1117854824689590274\u00a0\u2026",
            "username": "objectxplosive",
            "num_likes": 8,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1117898178760589312": {
            "id": "1117898178760589312",
            "text": "Have you seen the latest update? \n-a whole new macro expansion engine with really sweet additions(experimental, though)\n-HashMap and HashSet LLDB formatters\n-smarter prioritization for completion lists\nand much more. Full changelog: https://intellij-rust.github.io/2019/04/10/changelog-96.html\u00a0\u2026\n#rustlangpic.twitter.com/y2hHeENY5t",
            "username": "intellijrust",
            "num_likes": 84,
            "num_retweets": 12,
            "num_replies": 2
        },
        "1117911955996438529": {
            "id": "1117911955996438529",
            "text": "On the off chance there's someone else who likes both #rustlang and Smash, here's two rust crates I wrote for working with Smash 4/Ultimate's filetypes.\n\nMotionScript (Smash 4) - https://crates.io/crates/msc\u00a0\nnus3audio (Ultimate) - https://crates.io/crates/nus3audio\u00a0\u2026",
            "username": "jam1garner",
            "num_likes": 25,
            "num_retweets": 6,
            "num_replies": 2
        },
        "1117888876477943810": {
            "id": "1117888876477943810",
            "text": "Heads up for those who don't know about tarpaulin, like I did 20 minutes ago. #Rust code test coverage integrated with cargo: `$ cargo tarpaulin -v` https://github.com/xd009642/tarpaulin\u00a0\u2026 So useful! @rustlangpic.twitter.com/X5TPdZIw6Y",
            "username": "luisbg",
            "num_likes": 57,
            "num_retweets": 8,
            "num_replies": 3
        },
        "1117884527848742912": {
            "id": "1117884527848742912",
            "text": "It\u2019s not perfect yet but here we go: https://crates.io/crates/simd-json\u00a0\u2026 simdjson for @rustlang got a crate :D sadly simdjson is squatted so it hat do get a dash :(",
            "username": "heinz_gies",
            "num_likes": 22,
            "num_retweets": 5,
            "num_replies": 1
        },
        "1117840244827672584": {
            "id": "1117840244827672584",
            "text": "@rustlang gurus: what options are worth investigating for a fairly simple jsonapi compliant API service with high concurrency? Thruster? Thanks! #rustlang",
            "username": "StaringSkyward",
            "num_likes": 7,
            "num_retweets": 4,
            "num_replies": 6
        },
        "1117831853921140736": {
            "id": "1117831853921140736",
            "text": "Distributed and Secure Application? Come to my next @rustlang talk hosted by Zsusanna on Monday 2019-05-06 in Budapest:https://estada.ch/2019/5/6/how-to-build-a-distributed-secure-application-with-rust-budapest-meetup/\u00a0\u2026",
            "username": "dns2utf8",
            "num_likes": 20,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1117564443867648000": {
            "id": "1117564443867648000",
            "text": "#rustlang friends, what's the current state of the art for testing proc macros? it seems that it should be possible with quote! and parse_macro_input! but those don't seem pair well inside #[test] attributed fns.",
            "username": "softprops",
            "num_likes": 7,
            "num_retweets": 1,
            "num_replies": 3
        },
        "1117571349390794752": {
            "id": "1117571349390794752",
            "text": " announcing recap: a #rustlang crate for deserializing regex captures into type safe structshttps://github.com/softprops/recap\u00a0",
            "username": "softprops",
            "num_likes": 41,
            "num_retweets": 10,
            "num_replies": 2
        },
        "1117585900299530240": {
            "id": "1117585900299530240",
            "text": " published an new version of the  #rustlang @goserverless plugin for aws lambda along with a stand along lambda-rust docker image to support latest rust stable version 1.34.0\n\nhttps://github.com/softprops/serverless-rust\u00a0\u2026\nhttps://github.com/softprops/lambda-rust\u00a0\u2026",
            "username": "softprops",
            "num_likes": 19,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1117613922914328577": {
            "id": "1117613922914328577",
            "text": "Check out my error crate SNAFU (https://docs.rs/snafu\u00a0)! I've just released version 0.2.1 and posted a summary on the Rust User's Forum (https://users.rust-lang.org/t/snafu-0-2-1-released/27269/2\u00a0\u2026). Would love to hear your feedback! #rustlang",
            "username": "JakeGoulding",
            "num_likes": 6,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1117713358273351681": {
            "id": "1117713358273351681",
            "text": "I just published \"Creating a REST API with @rustlang\", it's part 3 in my \"Web Development with Rust\" series. \n\nI show how to use the upcoming \"tide\" release to create a RESTful API, explain what CORS is and how to validate inputs with serde.https://dev.to/gruberb/web-development-with-rust-03-x-create-a-rest-api-3i82\u00a0\u2026",
            "username": "byteadventures",
            "num_likes": 178,
            "num_retweets": 38,
            "num_replies": 2
        },
        "1117731338646249473": {
            "id": "1117731338646249473",
            "text": "Why @rustlang ? A 5 quote phase bookpic.twitter.com/PsSStDjMS7",
            "username": "timClicks",
            "num_likes": 38,
            "num_retweets": 2,
            "num_replies": 3
        },
        "1117771842339725313": {
            "id": "1117771842339725313",
            "text": " The all new tide is released  \n\nWhich means you can just include it in your Cargo.toml (tide = \"0.1.0\") and use it for my latest web series in @rustlang article. Will update my article accordingly! \n\nhttps://crates.io/crates/tide\u00a0",
            "username": "byteadventures",
            "num_likes": 31,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1117772837786456064": {
            "id": "1117772837786456064",
            "text": "Does any other language/tooling ecosystem have @rustlang's first-class \"code snippets in your doc comments are part of your test suite\" setup that you get out-of-the-box with cargo? Is Rust the first place that's become the norm, or is there prior art?",
            "username": "__dfreeman",
            "num_likes": 25,
            "num_retweets": 3,
            "num_replies": 5
        },
        "1117568969983057921": {
            "id": "1117568969983057921",
            "text": "what's a good start for writing games in @rustlang that doesn't involve me writing openGL code? I usually learn languages trying to make a game.",
            "username": "radgeRayden",
            "num_likes": 19,
            "num_retweets": 4,
            "num_replies": 8
        },
        "1117495411512610821": {
            "id": "1117495411512610821",
            "text": "Does anyone want to help with a Rust RFC? I feel a little anxious and would love to have some private bikeshedding before posting it.",
            "username": "Argorak",
            "num_likes": 22,
            "num_retweets": 5,
            "num_replies": 7
        },
        "1117492124067483649": {
            "id": "1117492124067483649",
            "text": "I'm interested in learning @rustlang where should I start? \nI'm interested in doing Rest API with PostgreSQL.",
            "username": "porfirio",
            "num_likes": 42,
            "num_retweets": 8,
            "num_replies": 17
        },
        "1117489884623712259": {
            "id": "1117489884623712259",
            "text": "Who should I follow if I want to learn about doing 2D Vulkan things in @rustlang?",
            "username": "rtfeldman",
            "num_likes": 29,
            "num_retweets": 6,
            "num_replies": 6
        },
        "1117477958342434816": {
            "id": "1117477958342434816",
            "text": "Just (re)opened a PR to support the @rustlang 'bytes' crate on no_std+alloc targets now that liballoc is stabilized.\n\nThis is an important stepping stone for ergonomically supporting protocol parsers/serializers like Prost on @rustembedded.https://github.com/carllerche/bytes/pull/256\u00a0\u2026",
            "username": "bascule",
            "num_likes": 56,
            "num_retweets": 5,
            "num_replies": 3
        },
        "1117235026280628224": {
            "id": "1117235026280628224",
            "text": "The PR to stabilize the @rustlang alloc crate just landed! https://github.com/rust-lang/rust/pull/59675\u00a0\u2026",
            "username": "bascule",
            "num_likes": 77,
            "num_retweets": 12,
            "num_replies": 1
        },
        "1117150583914422274": {
            "id": "1117150583914422274",
            "text": "I feel like this is the fastest way to do this, but I don't know if I'm doing something horribly wrong since I rarely use unsafe.  Help?  #rustlangpic.twitter.com/oicNohkBsv",
            "username": "literalboob",
            "num_likes": 19,
            "num_retweets": 4,
            "num_replies": 4
        },
        "1117444161529999361": {
            "id": "1117444161529999361",
            "text": "What is your recommended #Rust web framework ?\n#Rustlang",
            "username": "drawpie",
            "num_likes": 45,
            "num_retweets": 10,
            "num_replies": 14
        },
        "1117449156182925313": {
            "id": "1117449156182925313",
            "text": "wow https://rfdonnelly.github.io/crate-galaxy/\u00a0 lists all @rustlang crates as a galaxy",
            "username": "DPC_22",
            "num_likes": 39,
            "num_retweets": 19,
            "num_replies": 3
        },
        "1117438216364228609": {
            "id": "1117438216364228609",
            "text": "@rustlang Hey #rust folks! What's the best way to handle unix signals?\n\ni'm finding the nix docs rather lacking: https://docs.rs/nix/0.13.0/nix/sys/signal/index.html\u00a0\u2026\n\nor perhaps i'm just\u2026 not finding it rusty enough?\n(such as, please look at signal(3p))",
            "username": "hirojin",
            "num_likes": 8,
            "num_retweets": 3,
            "num_replies": 7
        },
        "1117232215639908352": {
            "id": "1117232215639908352",
            "text": "@Rustlang as a watershed in systems development:https://www.infoq.com/podcasts/rust-systems-programming\u00a0\u2026",
            "username": "danieljgibson",
            "num_likes": 23,
            "num_retweets": 13,
            "num_replies": 0
        },
        "1117178003920957440": {
            "id": "1117178003920957440",
            "text": "@ThisWeekInRust Hey, I just published a post about the new `std::iter::from_fn`, and how I used it at https://weblog.latte.ca/blake/tech/rust/makingiterators.html\u00a0\u2026 that might be appropriate for your audience.\n\n(It's not the greatest blog post, but I really love the feature. \u00af\\_(\u30c4)_/\u00af)",
            "username": "bwinton",
            "num_likes": 27,
            "num_retweets": 8,
            "num_replies": 0
        },
        "1117078171613061121": {
            "id": "1117078171613061121",
            "text": " Blog::next()\n\nhttps://blog.japaric.io/stack-analysis-2/\u00a0\u2026\n\n\"cargo-call-stack, part 2: getting call graph information from rustc\"\n\nWhere I describe the `-Z call-metadata` feature I have been implementing in `rustc` with the goal of improving call graph analysis tools.",
            "username": "japaricious",
            "num_likes": 27,
            "num_retweets": 11,
            "num_replies": 1
        },
        "1117115369796161536": {
            "id": "1117115369796161536",
            "text": "I'm trying to profile a crate in @rustlang. #[inline] is making stack traces harder to compare. Can I force Rust to ignore inline attributes entirely?",
            "username": "sw17ch",
            "num_likes": 5,
            "num_retweets": 1,
            "num_replies": 5
        },
        "1116825923934937089": {
            "id": "1116825923934937089",
            "text": "today i deployed a change to http://docs.rs\u00a0 that may make your life easier - if the latest version of a crate failed to build, then docs-rs/crate will redirect to the crate's info page instead of giving an empty 404 page #rustlanghttps://github.com/rust-lang/docs.rs/pull/325\u00a0\u2026",
            "username": "QuietMisdreavus",
            "num_likes": 62,
            "num_retweets": 9,
            "num_replies": 3
        },
        "1117105948139642880": {
            "id": "1117105948139642880",
            "text": "A utility for managing cargo dependencies from the command line (cargo {add,rmupgrade}). #Rustlang #Cargohttps://github.com/killercup/cargo-edit\u00a0\u2026",
            "username": "denji_on",
            "num_likes": 21,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1117106575666237440": {
            "id": "1117106575666237440",
            "text": "Question to the @rustlang community:\n\nHow do you feel about using log crate (https://doc.rust-lang.org/1.0.0/log/\u00a0) for sth. like `--verbose` flags in CLI programs, considering that it's actually controlled using `RUST_LOG=[LEVEL]`?\n\nYay or nay",
            "username": "PascalPrecht",
            "num_likes": 9,
            "num_retweets": 1,
            "num_replies": 4
        },
        "1116949075729895426": {
            "id": "1116949075729895426",
            "text": "Massive shoutouts to the authors of Serde in @rustlang, your library is amazing <3",
            "username": "Erstejahre",
            "num_likes": 139,
            "num_retweets": 7,
            "num_replies": 3
        },
        "1117002899496808448": {
            "id": "1117002899496808448",
            "text": "Always wondered how to keep your README (or other markdown files) code examples up-to-date in your @rustlang project? You might be interested by https://blog.guillaume-gomez.fr/articles/2019-04-13+Keeping+Rust+projects%27+README.md+code+examples+up-to-date\u00a0\u2026",
            "username": "imperioworld_",
            "num_likes": 42,
            "num_retweets": 12,
            "num_replies": 1
        },
        "1115617556797296640": {
            "id": "1115617556797296640",
            "text": "Next week at @skillsmatter we have a special #IoT evening with @Workshopshed @Argorak and @rossatkin \n\nIt's #free it's wonderful, #Rust, #Robotics and fun!\n\n17th April  doors open 6pm\nhttps://www.meetup.com/Linuxing-In-London/events/259506777/\u00a0\u2026\n\nThere are #sponsorship opportunities for the pizzas, please just DM mepic.twitter.com/9b9krYJGcP",
            "username": "BrianLinuxing",
            "num_likes": 14,
            "num_retweets": 11,
            "num_replies": 0
        },
        "1117051107497455616": {
            "id": "1117051107497455616",
            "text": "Anyone using Visual Studio @code for @rustlang under Windows? Which extension should I use?",
            "username": "mapastr",
            "num_likes": 15,
            "num_retweets": 4,
            "num_replies": 8
        },
        "1116734920460787717": {
            "id": "1116734920460787717",
            "text": "We're hosting the next #Rust meetup at our HQ in St Katharine Docks! @RustLdnUsers\n\nReserve your place:https://smrkts.co/2VJlP8I\u00a0",
            "username": "smarkets",
            "num_likes": 8,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1116550365376200704": {
            "id": "1116550365376200704",
            "text": "You like Rust and Serverless? give it a try on @IBMcloud using the new @rustlang @OpenWhisk container Image \nibmcloud fn action update rust-demo func.rust --docker openwhisk/actionloop-rust-v1.34 --web true \ncheck out gist for rust func.rust :https://gist.github.com/csantanapr/be8948e1cd23bdb48f2b8ba14572a007\u00a0\u2026",
            "username": "csantanapr",
            "num_likes": 29,
            "num_retweets": 15,
            "num_replies": 1
        },
        "1116643571677810690": {
            "id": "1116643571677810690",
            "text": "What does @rustlang offer programmers? Safety and control. Giving you both the tools and the confidence to write fast programs.pic.twitter.com/LtL2Y7KqI5",
            "username": "timClicks",
            "num_likes": 98,
            "num_retweets": 21,
            "num_replies": 3
        },
        "1116672333115265025": {
            "id": "1116672333115265025",
            "text": "So I've heard you can use a good type system like @rustlang s to make \"incorrect state illegal\". Does anyone have good resources on that?",
            "username": "BrewingBits",
            "num_likes": 34,
            "num_retweets": 8,
            "num_replies": 10
        },
        "1116693575838896129": {
            "id": "1116693575838896129",
            "text": "Very happy to announce @rustlang : LDN Talks April 2019 https://www.meetup.com/Rust-London-User-Group/events/260565918/\u00a0\u2026 #Meetup #London via @Meetup #rustlang",
            "username": "RustLdnUsers",
            "num_likes": 16,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1116694552499429377": {
            "id": "1116694552499429377",
            "text": "Hey there! #RustLab schedule is online! Go check it out \n#Rust #Rustlang @rustlang\n https://www.rustlab.it/agenda\u00a0pic.twitter.com/CiBFCEd4VW",
            "username": "rustlab_conf",
            "num_likes": 13,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1116489255637753857": {
            "id": "1116489255637753857",
            "text": ".@rustlang I need a stable JavaScript oriented crate for #WebAssembly development.\n\nI need something suitable for #Eclipse and #VsCode.\n\nI also need a drag and drop web page tool for clients and RAD.\n\n#javascript #HTML5 #Webdesigner #rust #ide #whonix #tor #template #mdmscahill1",
            "username": "DHorse1",
            "num_likes": 10,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1116413244548141057": {
            "id": "1116413244548141057",
            "text": "Atom 1.37 beta is going to enabling ripgrep for fuzzy finding/search. (Written in @rustlang!)https://twitter.com/AtomEditor/status/1116410392110981120\u00a0\u2026",
            "username": "Sunjay03",
            "num_likes": 85,
            "num_retweets": 10,
            "num_replies": 3
        },
        "1116398612295102464": {
            "id": "1116398612295102464",
            "text": "as of today, https://doc.rust-lang.org/\u00a0 lists Rustlings as a tool for learning Rust!https://twitter.com/rustlang/status/1116398059775234048\u00a0\u2026",
            "username": "faint_visions",
            "num_likes": 35,
            "num_retweets": 4,
            "num_replies": 1
        },
        "1116394731343314945": {
            "id": "1116394731343314945",
            "text": "So we have been running in some very frustrating lifetime issues with #rust, and would love some input. At this point we\u2019re going between us being just incompetent or @rustlang unusable for multi threaded high performance code. Basically the problem ishttps://github.com/Dylan-DPC/thread-lifetime-experiment\u00a0\u2026",
            "username": "heinz_gies",
            "num_likes": 10,
            "num_retweets": 5,
            "num_replies": 8
        },
        "1116367914897039361": {
            "id": "1116367914897039361",
            "text": "\u00a1No s\u00e9 pierdan a @spastorino en la @BuzzConf19 hablando de @rustlang! https://twitter.com/BuzzConf19/status/1116002172766957568\u00a0\u2026",
            "username": "RustLatamConf",
            "num_likes": 21,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1116360828805156869": {
            "id": "1116360828805156869",
            "text": "We're having a Meetup this coming Tuesday, April 16th! Stoked to have @ag_dubs giving a talk about WebAssembly and Rust. Hope to see you there! https://www.meetup.com/rust-atx/events/259910982/\u00a0\u2026 @ThisWeekInRust @rustlang",
            "username": "rust_atx",
            "num_likes": 19,
            "num_retweets": 8,
            "num_replies": 1
        },
        "1116183588951605248": {
            "id": "1116183588951605248",
            "text": "Rust\u3067LT\u3059\u308b\u30c1\u30e3\u30f3\u30b9\u3067\u3059\u3002\u305c\u3072\u3054\u5fdc\u52df\u304f\u3060\u3055\u3044\u3002/ We have some open speaker slots in this month's #rustlang meetup in Tokyo.https://twitter.com/dorayaki_kun/status/1116170929908772865\u00a0\u2026",
            "username": "chikoski",
            "num_likes": 11,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1116109329919295488": {
            "id": "1116109329919295488",
            "text": "Version 1.0.0 of the #Git interactive rebase tool has been released:\nhttps://github.com/MitMaro/git-interactive-rebase-tool\u00a0\u2026\n\nA lovely tool I use daily in my workflow, highly recommended! Built with @rustlang.\n\nDemo GIF by @MitMaro.pic.twitter.com/9La8gQ7rD9",
            "username": "homeworkprod",
            "num_likes": 147,
            "num_retweets": 56,
            "num_replies": 3
        },
        "1116288249348096000": {
            "id": "1116288249348096000",
            "text": "I would like to point out that their asset pipeline is 100% @rustlang https://twitter.com/KristoferRose/status/1116280122846392320\u00a0\u2026",
            "username": "j66k",
            "num_likes": 51,
            "num_retweets": 6,
            "num_replies": 1
        },
        "1116278318452625408": {
            "id": "1116278318452625408",
            "text": "Bonus: how to pick a number type in #Rustpic.twitter.com/7ByaqEHYK1",
            "username": "gmelnik",
            "num_likes": 138,
            "num_retweets": 27,
            "num_replies": 5
        },
        "1116102332574572544": {
            "id": "1116102332574572544",
            "text": "Here's How to Get Started With Rust on @Raspberry_Pi... http://bit.ly/2U1N6BC\u00a0pic.twitter.com/yENGgOPKUG",
            "username": "MakeUseOf",
            "num_likes": 46,
            "num_retweets": 12,
            "num_replies": 2
        },
        "1116096228104663040": {
            "id": "1116096228104663040",
            "text": "convention, pretty much; ::new is usually parameterless (like Vec) or with mandatory parameters (like Box), whereas ::with_information is used for constructors that take additional details (like Vec::with_capacity)",
            "username": "myrrlyn",
            "num_likes": 16,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1116096768301727744": {
            "id": "1116096768301727744",
            "text": "@ThisWeekInRust we are still looking for a @rustlang Database Engine Developer. Remote ok. Thank you!https://www.parity.io/jobs/#berlin-database-engine-developer\u00a0\u2026",
            "username": "ParityTech",
            "num_likes": 6,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1116062442667298817": {
            "id": "1116062442667298817",
            "text": "I had a great time streaming today about @rustlang, @rustwasm, and the promise of running WebAssembly outside the browser. Spent a good chunk of the stream deep in the depths of Rust's networking stack trying to get tower-grpc compiling on wasi:https://www.youtube.com/watch?v=Evc3T9Zk2pk\u00a0\u2026",
            "username": "ryan_levick",
            "num_likes": 44,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1116065761183784961": {
            "id": "1116065761183784961",
            "text": "I'm trying to get more into @rustlang, but I'm having trouble thinking of a good systems programming project to motivate learning. I'm already pretty familiar with Haskell, so something that motivates learning about things unique to Rust (like the borrow checker) would be ideal.",
            "username": "pseudo_morphism",
            "num_likes": 15,
            "num_retweets": 1,
            "num_replies": 3
        },
        "1116068549062275075": {
            "id": "1116068549062275075",
            "text": "Still enjoy learning @rustlang so here's my 2nd thing that feeds #mutt with contacts from vcf files. \nAnd just now I have found the vcard crate https://github.com/skriems/muttmates\u00a0\u2026",
            "username": "skriems",
            "num_likes": 7,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1116077459361890305": {
            "id": "1116077459361890305",
            "text": "#mayItRust Would be great if there was such a thing during the month of May. As a game jam or create something that is durable!  #rustlang @rustlang",
            "username": "fischspiele",
            "num_likes": 7,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1116037777358036993": {
            "id": "1116037777358036993",
            "text": "It's called the Functional Options pattern, as coined by @davecheney in this post: https://dave.cheney.net/2014/10/17/functional-options-for-friendly-apis\u00a0\u2026",
            "username": "KevinHoffman",
            "num_likes": 20,
            "num_retweets": 3,
            "num_replies": 3
        },
        "1116035989040922624": {
            "id": "1116035989040922624",
            "text": "In #golang when building an API, there's a common pattern of using interfaces to build up an \"options type\" which is then passed to the initializer. Is there an accepted @rustlang equivalent of this, or is it idiomatic to just create a single options struct?",
            "username": "KevinHoffman",
            "num_likes": 12,
            "num_retweets": 3,
            "num_replies": 3
        },
        "1116023766687948800": {
            "id": "1116023766687948800",
            "text": "One week left on the CFP!\n\nSubmit your talks at https://cfp.rustconf.com/\u00a0 !",
            "username": "rustconf",
            "num_likes": 21,
            "num_retweets": 10,
            "num_replies": 2
        },
        "1115614513431293952": {
            "id": "1115614513431293952",
            "text": "Here a small intro on how to use r#av1e from #rustlang and #crav1e from C.\n\nhttps://dev.to/luzero/using-rav1e-from-your-own-code-2ie0\u00a0\u2026\nhttps://blogs.gentoo.org/lu_zero/2019/04/09/using-rav1e-from-your-code/\u00a0\u2026\n\n(also, my first post on #devto)",
            "username": "lu_zero_",
            "num_likes": 12,
            "num_retweets": 9,
            "num_replies": 1
        },
        "1115792085070897152": {
            "id": "1115792085070897152",
            "text": "Is this the best way to parse this #rustlang struct from a string? The \"??\" is weirding me out, ya know?\n\nI don't think `filter_map` is the answer because it would ignore invalid data as long as enough valid f64s are trailing it.pic.twitter.com/vYiI3QXP9M",
            "username": "TooManyBees",
            "num_likes": 7,
            "num_retweets": 1,
            "num_replies": 4
        },
        "1115732969447141377": {
            "id": "1115732969447141377",
            "text": "New tutorial: @rustlang Actix-web + Magic link authenticationhttps://blog.approveapi.com/tutorials/rust-actix-web-approveapi-magic-login-link/\u00a0\u2026",
            "username": "AlexGrinman",
            "num_likes": 44,
            "num_retweets": 14,
            "num_replies": 1
        },
        "1115761249810296833": {
            "id": "1115761249810296833",
            "text": "@rustlang plus PI coolness:https://www.makeuseof.com/tag/getting-started-rust-raspberry-pi/\u00a0\u2026",
            "username": "danieljgibson",
            "num_likes": 24,
            "num_retweets": 8,
            "num_replies": 0
        },
        "1115847572227276802": {
            "id": "1115847572227276802",
            "text": "I wrote \"Speed your web apps with WebAssembly\" for @linuxformat issue 249. #rustlang @rustwasm @rustlangpic.twitter.com/phVgjQVSvs",
            "username": "mactsouk",
            "num_likes": 23,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1115883223979102216": {
            "id": "1115883223979102216",
            "text": "Is there a @rustlang crate which permits to convert from json to pdf and docx ? Allowing to use a template and/or set attributes like font size, alignment and such for formatting ? Please dm if you have rust skills yet seek inspiration.",
            "username": "io_r_us",
            "num_likes": 2,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1115908501711224838": {
            "id": "1115908501711224838",
            "text": "I've been working on some @VulkanAPI bindings for @rustlang over the past week or so, once I've got things in a working state; I'm hoping to get this released as a crate. Question is, do I include a loader?",
            "username": "JakBoulton",
            "num_likes": 16,
            "num_retweets": 3,
            "num_replies": 4
        },
        "1115911455260467200": {
            "id": "1115911455260467200",
            "text": "Happy to announce my latest @rustlang project: shorty, a URL shortener, available as a library, an http microservice, an #aws lambda, and an #azure functionhttps://github.com/ffissore/shorty\u00a0",
            "username": "cmdrline",
            "num_likes": 51,
            "num_retweets": 13,
            "num_replies": 2
        },
        "1115655754931941378": {
            "id": "1115655754931941378",
            "text": "New fun weekend project: a ray tracing engine written from scratch in @rustlang that can also run in the browser thanks to @rustwasm and #webassembly.\nEngine source: https://github.com/alesgenova/ray-tracer\u00a0\u2026\nLive demo: https://alesgenova.github.io/ray-tracer-app/\u00a0pic.twitter.com/qGXjsBcDpD",
            "username": "alesgeno",
            "num_likes": 94,
            "num_retweets": 15,
            "num_replies": 1
        },
        "1115635598528786438": {
            "id": "1115635598528786438",
            "text": "@rustlang is the most-loved language in the StackOverflow survey for the 4th year in a row. 83.5% of current users would like to continue using it -- higher than any previous years.https://insights.stackoverflow.com/survey/2019#technology-_-most-loved-dreaded-and-wanted-languages\u00a0\u2026",
            "username": "djco",
            "num_likes": 180,
            "num_retweets": 91,
            "num_replies": 2
        },
        "1115330729406287873": {
            "id": "1115330729406287873",
            "text": " crates 0.4.2 is out. This version fixes version sorting and yanked filtering. @code @rustlang https://marketplace.visualstudio.com/itemdetails?itemName=serayuzgur.crates\u00a0\u2026",
            "username": "serayuzgur",
            "num_likes": 33,
            "num_retweets": 4,
            "num_replies": 1
        },
        "1115265365926391809": {
            "id": "1115265365926391809",
            "text": "Hey fellow Rustaceans! \n\nWe moved our April event to the 30th due to organizer shortage! We will be hosting it again at @co_up. \n\nThere is still one open speaker slot, get in touch with either @ryan_levick or @byteadventures to grab it!https://www.meetup.com/Rust-Berlin/events/259293969/\u00a0\u2026",
            "username": "RustBerlin",
            "num_likes": 23,
            "num_retweets": 9,
            "num_replies": 1
        },
        "1115026542562668545": {
            "id": "1115026542562668545",
            "text": "Our journey from nightly to stable Rust: https://blog.datalust.co/our-journey-from-rust-nightly-to-stable/\u00a0\u2026 #rustlang",
            "username": "datalust_seq",
            "num_likes": 24,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1115033045487292416": {
            "id": "1115033045487292416",
            "text": " published unisecs: a #rustlang crate for working with unix time in fractional seconds  https://github.com/softprops/unisecs\u00a0\u2026 ",
            "username": "softprops",
            "num_likes": 14,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1115198059825303552": {
            "id": "1115198059825303552",
            "text": "Next part of series: writing Javascript evaluator in \n@rustlang\n is out! Today's topic: Parsing and fundamentals of evaluating #javascript.https://medium.com/@retep007/javascript-evaluator-part-2-parser-and-basic-evaluator-d306ff1aec83?sk=c8a0cbddcfe8c4c6de753500ede4e1ec\u00a0\u2026",
            "username": "retep007",
            "num_likes": 24,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1114626404698734593": {
            "id": "1114626404698734593",
            "text": "I posted a few videos covering enums in #rustlang. Here is the first onehttps://youtu.be/TBixFUJDnRI\u00a0",
            "username": "Crazcalm",
            "num_likes": 32,
            "num_retweets": 5,
            "num_replies": 1
        },
        "1114766038841864192": {
            "id": "1114766038841864192",
            "text": "Hey #rustlang, I'm currently playing with rust calls via JNA. And apparently I'm a lousy googler. Can anyone point me at resources of how to pass a *const i32 as an array back to Java? I'm stuck at the part where I access random memory ...",
            "username": "drdanielpape",
            "num_likes": 14,
            "num_retweets": 6,
            "num_replies": 6
        },
        "1114687460506607616": {
            "id": "1114687460506607616",
            "text": "hunter is a fast and lag-free file browser/manager for the terminal written in @rustlang. It uses an asychronous and multi-threaded design and all disk IO happens off the main thread in a non-blocking fashion, so that hunter will always stay responsive. https://github.com/rabite0/hunter\u00a0pic.twitter.com/tWPx9jKdPm",
            "username": "wezm",
            "num_likes": 380,
            "num_retweets": 79,
            "num_replies": 9
        },
        "1114827698998845440": {
            "id": "1114827698998845440",
            "text": "In an attempt to better familiarise myself with WASI and wasmtime, I re-wrote the excellent WASI tutorial https://bit.ly/2VuutYz\u00a0 by @Sunfishcode in pure @rustlang. You can check it out here https://bit.ly/2IiL2mp\u00a0!",
            "username": "kubkon",
            "num_likes": 50,
            "num_retweets": 15,
            "num_replies": 0
        },
        "1114649672482603008": {
            "id": "1114649672482603008",
            "text": "Published the \"pattern\" for the @rustlang Ferris hat\n\nhttp://edunham.net/2019/04/06/rustacean_hat_pattern.html\u00a0\u2026",
            "username": "QEDunham",
            "num_likes": 35,
            "num_retweets": 8,
            "num_replies": 0
        },
        "1114559571094310913": {
            "id": "1114559571094310913",
            "text": "This is getting fast :D simdjson @rustlang port vs. sere. Now over 1GB/s in the best case.pic.twitter.com/E5ej5FOIgt",
            "username": "heinz_gies",
            "num_likes": 185,
            "num_retweets": 25,
            "num_replies": 9
        },
        "1114582981413203968": {
            "id": "1114582981413203968",
            "text": "this is a @rustlang flash -> svg converter which can, when compiled to wasm, download homestuck on the fly and play it on my iphone with interaction and audio\n\ngive me just one moment while i grab my jaw from the floor (i knew about this project before too but whoa)https://twitter.com/eddyb_r/status/1114574977041338369\u00a0\u2026",
            "username": "adam_n_p",
            "num_likes": 218,
            "num_retweets": 58,
            "num_replies": 3
        },
        "1114453856971317248": {
            "id": "1114453856971317248",
            "text": "I'm trying to do some weird optimization using macros in @rustlang but don't know how to proceed (don't know if it's even feasible)... Asked a question on @StackOverflow there: https://stackoverflow.com/questions/55543094/how-to-simplify-mathematical-formulas-with-rust-macros\u00a0\u2026 Any help would be greatly appreciated.",
            "username": "omalaspinas",
            "num_likes": 16,
            "num_retweets": 6,
            "num_replies": 3
        },
        "1114473032322564096": {
            "id": "1114473032322564096",
            "text": "Exercise in @rustlang, #GraphQL and @HSL_HRT / @digitransit #API. Prints out departure times in ASCII table emulating HSL info screens at bus stops etc. https://github.com/braincow/hslstop-rt/\u00a0\u2026 #teachyourselfsomethingnewpic.twitter.com/3ocrGoEM5y",
            "username": "BrainCOW",
            "num_likes": 50,
            "num_retweets": 11,
            "num_replies": 0
        },
        "1114201709960548354": {
            "id": "1114201709960548354",
            "text": "I wrote a long article on our move from Linkerd 1.x to 2.0, from Scala to Rust/Go, and all the design decisions and lessons learned that went into rebuilding the world's first service mesh.https://www.infoq.com/articles/linkerd-v2-production-adoption\u00a0\u2026",
            "username": "wm",
            "num_likes": 258,
            "num_retweets": 95,
            "num_replies": 6
        },
        "1114203184405393409": {
            "id": "1114203184405393409",
            "text": "You can find out more about these talks, as well as our complete conference lineup at https://oxidizeconf.com/schedule/\u00a0 !",
            "username": "OxidizeConf",
            "num_likes": 4,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1114205631777521670": {
            "id": "1114205631777521670",
            "text": "We're also happy to announce  @ArmEmbedded as a sponsor of OxidizeConf!\n\nThanks to Arm for partnering with us to make the conference a reality!pic.twitter.com/JsbwsQecR3",
            "username": "OxidizeConf",
            "num_likes": 19,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1114224830549618689": {
            "id": "1114224830549618689",
            "text": "One thing I find uniquely awesome about @rustlang is Clippy.  There may be similar tools for other languages but it's the first one I've used.\n\nThe suggestions are great and even helps teach more \"rusty\" ways of doing things.\n\nSo awesome! pic.twitter.com/AkOFFd82sn",
            "username": "grumi78",
            "num_likes": 70,
            "num_retweets": 8,
            "num_replies": 2
        },
        "1114180713207795712": {
            "id": "1114180713207795712",
            "text": "Oh by the way we are stabilizing the futures API in 1.35https://github.com/rust-lang/rust/issues/59725\u00a0\u2026",
            "username": "withoutboats",
            "num_likes": 286,
            "num_retweets": 53,
            "num_replies": 14
        },
        "1114138083736166401": {
            "id": "1114138083736166401",
            "text": "Friday! Two weeks away from http://rustcon.asia\u00a0pic.twitter.com/aXFLPFNi7R",
            "username": "RustConAsia",
            "num_likes": 19,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1114156602507104256": {
            "id": "1114156602507104256",
            "text": "Hey #rustlang community! The @114EagleStrike FIRST robotics team uses Rust (https://github.com/Eaglestrike\u00a0) and they need help to get to the World Championships in Houston, TX. I think we can get them to their goal if we all chip in a bit!https://www.gofundme.com/get-eaglestrike-team-114-to-frc-worlds\u00a0\u2026",
            "username": "Carols10cents",
            "num_likes": 40,
            "num_retweets": 19,
            "num_replies": 0
        },
        "1114148519676399616": {
            "id": "1114148519676399616",
            "text": "This is pretty impressive! @redox_os running in qemu on macOS. A new OS built with some interesting concepts and purely written in @rustlangpic.twitter.com/Ml4xlMOzja",
            "username": "onatm",
            "num_likes": 123,
            "num_retweets": 18,
            "num_replies": 2
        },
        "1113928977008095232": {
            "id": "1113928977008095232",
            "text": "Hi folks, I\u2019m short-time at Dropbox looks like. If you\u2019re hiring in the Bay Area or remote for #rustlang or know someone that is hiring please do hit me up at brian@troutwine.us. I focus on performance, parallelization and infra tooling with a focus on the same. \n\nThanks, all.",
            "username": "bltroutwine",
            "num_likes": 39,
            "num_retweets": 40,
            "num_replies": 2
        },
        "1113951521748606976": {
            "id": "1113951521748606976",
            "text": "In @datalust_seq 5.1 we got our #rustlang codebase off nightly and onto stable  I wrote up a few details. There not being much effort needed on our part is a testament to how hard the community worked to make the 2018 edition so compellinghttps://blog.datalust.co/our-journey-from-rust-nightly-to-stable/\u00a0\u2026",
            "username": "KodrAus",
            "num_likes": 18,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1113987332498001921": {
            "id": "1113987332498001921",
            "text": "Looking for a #rustlang challenge? Help Rusoto, the AWS SDK for Rust, slim down to improve compilation speed and ease of changes: https://github.com/rusoto/rusoto/issues/1323\u00a0\u2026 . ",
            "username": "Motoblag",
            "num_likes": 22,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1114048923503607810": {
            "id": "1114048923503607810",
            "text": "I got a few questions lately about how to use modules in @rustlang aka methods you declared in file http://b.rs\u00a0 but want to access in http://a.rs\u00a0 or http://main.rs\u00a0. \n\nI created a compact Gist which explains it:https://gist.github.com/gruberb/f79cf46811cc42c92149f76522e14b80\u00a0\u2026",
            "username": "byteadventures",
            "num_likes": 61,
            "num_retweets": 20,
            "num_replies": 2
        },
        "1113934282265899008": {
            "id": "1113934282265899008",
            "text": "We just had to great talks about two real use-cases using @rustlang. Thanks @cabify_espana for hosting us this time. Rust is definitely creating a lot of awareness :)pic.twitter.com/GM5jZaY3h1",
            "username": "madrustaceans",
            "num_likes": 36,
            "num_retweets": 9,
            "num_replies": 2
        },
        "1113930612698689537": {
            "id": "1113930612698689537",
            "text": "OK, because I couldn't find a crate for Services like Guava in @rustlang, I just made one https://github.com/detro/srvzio\u00a0 / https://crates.io/crates/srvzio\u00a0",
            "username": "detronizator",
            "num_likes": 16,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1113931564080087040": {
            "id": "1113931564080087040",
            "text": "Today I gave a talk on how to build EFI binaries with @rustlang at @madrustaceans. Here is the @github repo of the example efi app:\nhttps://github.com/aruiz/madrust-uefi-skeleton\u00a0\u2026https://twitter.com/danigm/status/1113865827655221252\u00a0\u2026",
            "username": "acruiz",
            "num_likes": 62,
            "num_retweets": 14,
            "num_replies": 1
        },
        "1113921563496259584": {
            "id": "1113921563496259584",
            "text": " cargo-generate 0.3.0 is out! \n\nlong time* no release! we've got a release with a fix for windows binaries, some new case helpers, and some maintenance (oh hey 2018 edition!)\n\n*3mos\n\n thanks so much to epage, @jaysonsantos, epun, and @DD5HT!https://github.com/ashleygwilliams/cargo-generate/releases/tag/v0.3.0\u00a0\u2026",
            "username": "ag_dubs",
            "num_likes": 37,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1113918537142288384": {
            "id": "1113918537142288384",
            "text": " wasm-pack 0.8.1 is out! \n fail whale! we accidentally broke wasm-pack on docker- but there's a fix in this release- along with a few small niceties for folks on non-rustup setups!\n\n thanks so much to @jhakansson_ for the fix + CHANGELOG entry!https://github.com/rustwasm/wasm-pack/releases/tag/v0.8.1\u00a0\u2026",
            "username": "ag_dubs",
            "num_likes": 48,
            "num_retweets": 15,
            "num_replies": 0
        },
        "1113806055786668034": {
            "id": "1113806055786668034",
            "text": "http://github.com/vitvakatu/cubes\u00a0 - is a \"Cubes\" example from Froggy, written on top of wgpu-rs by @fumlead.\n\nhttp://github.com/gfx-rs/wgpu\u00a0 is a native WebGPU implementation based on gfx-hal.\n\nhttp://github.com/kvark/froggy\u00a0 is a prototype for Component Graph System.\n\n#rustlang #gamedev #vulkanpic.twitter.com/OEWfQr3Cci",
            "username": "rust_gamedev",
            "num_likes": 37,
            "num_retweets": 7,
            "num_replies": 1
        },
        "1113863925542551553": {
            "id": "1113863925542551553",
            "text": "After many days of research, trial, and error, I learned how to pass strings and Rust enums that contain data through the foreign function interface and into C. I describe how I did it in my latest blog post. #rustlanghttp://kmdouglass.github.io/posts/complex-data-types-and-the-rust-ffi/\u00a0\u2026",
            "username": "kmdouglass",
            "num_likes": 44,
            "num_retweets": 7,
            "num_replies": 2
        },
        "1113887301237604352": {
            "id": "1113887301237604352",
            "text": "Rust workshop for programming game HANGMAN: https://www.meetup.com/de-DE/Rust-Community-Stuttgart/events/260337649/\u00a0\u2026 #rustlang #Stuttgart beginner to intermediate level",
            "username": "thinkrapido",
            "num_likes": 34,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1113874421083774977": {
            "id": "1113874421083774977",
            "text": "So I\u2019ve been porting simdjson to @rustlang  and using serge\u2019s son-bench I\u2019m kind of hitting a near hard limit of 730MB/s. I first though it\u2019s my code (and to a degree it is) but I\u2019ve now run it on 2  machines with  different OS and CPU and it\u2019s always the same #. Any thoughts?",
            "username": "heinz_gies",
            "num_likes": 21,
            "num_retweets": 3,
            "num_replies": 5
        },
        "1113590900473696256": {
            "id": "1113590900473696256",
            "text": "@rustlang does anyone has an example how to pass messages between actors in actix? actorA -> msg -> ActorB\ndo i have to pass a reference of the actors between them? Basically I  have 1 actor who is a CoAP server and the other is basically a BTREE to be queried",
            "username": "shadowdroid",
            "num_likes": 5,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1113607089572712448": {
            "id": "1113607089572712448",
            "text": "How do you teach people who come from object-oriented languages like Java and C++ to not write object-oriented code in @rustlang?\n\nI learned Rust after learning Haskell, so I don't know what the best way to transition is. How do you teach reasoning about data rather than objects?",
            "username": "Sunjay03",
            "num_likes": 94,
            "num_retweets": 8,
            "num_replies": 28
        },
        "1113614255062962176": {
            "id": "1113614255062962176",
            "text": "Anyone have any good resources for learning functional programming with @rustlang?\n\nI knew functional programming before I learned Rust, so I'm not sure what to point Alexandra to. https://twitter.com/alex_andrasp/status/1113610511499825154\u00a0\u2026",
            "username": "Sunjay03",
            "num_likes": 6,
            "num_retweets": 2,
            "num_replies": 3
        },
        "1113738230124486657": {
            "id": "1113738230124486657",
            "text": "Another day, another @rustlang crate: Pixelate - creating up-scaled pixelated palette-based PNG images.\n\nNot (just) for fun. Going to speed up QR codes and identicon generation in Parity Signer (React Native + Rust codebase). \nhttps://github.com/maciejhirsz/pixelate\u00a0\u2026pic.twitter.com/54JQ6QazD7",
            "username": "MaciejHirsz",
            "num_likes": 48,
            "num_retweets": 5,
            "num_replies": 1
        },
        "1113744306425204736": {
            "id": "1113744306425204736",
            "text": "RustLab is the only international conference in #Italy dedicated to the Rust programming language: reserve your seat today!\n\n#Developers #rustlab #rust #rustlang @rustlanghttps://www.rustlab.it/home\u00a0",
            "username": "rustlab_conf",
            "num_likes": 11,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1113767656291807232": {
            "id": "1113767656291807232",
            "text": "In unrelated news, while searching for some Cow utils, I came across this gem, and now I want to have a usecase for it just because this is probably the best library name and description EVER!!  pic.twitter.com/MGEnNEqamd",
            "username": "RReverser",
            "num_likes": 53,
            "num_retweets": 12,
            "num_replies": 0
        },
        "1113649841693814789": {
            "id": "1113649841693814789",
            "text": "Hey @ferristweetsnow and @antoniomaiorano, started playing around with Rust however I do love working from @VisualStudio. I've submitted feedback to the team to add native Rust support. If you guys think it's a good idea please vote and spread the word https://developercommunity.visualstudio.com/idea/517130/native-rust-support.html\u00a0\u2026",
            "username": "Johno_ACSLive",
            "num_likes": 10,
            "num_retweets": 2,
            "num_replies": 2
        },
        "1113807001430237187": {
            "id": "1113807001430237187",
            "text": "Hey @rustlang-ers, any crate out there to create \"Services\" similar to Guava Services? I couldn't find anything matching from a quick search on http://crates.io\u00a0",
            "username": "detronizator",
            "num_likes": 4,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1113838344545292288": {
            "id": "1113838344545292288",
            "text": "e029: I\u2019m Out to C\u2014Using @rustlang\u2019s Foreign Function Interface (FFI) with C!\n\nLots of code samples with this one\u2014and more to come; there\u2019s bunches to say about this.\n\nhttps://newrustacean.com/show_notes/e029/\u00a0\u2026",
            "username": "newrustacean",
            "num_likes": 48,
            "num_retweets": 12,
            "num_replies": 1
        },
        "1113577943899484160": {
            "id": "1113577943899484160",
            "text": "So I couldn't figure out if you could make a @rustlang crate with a non-ascii name. TL;DR:\n\n* You can make a crate with non-ascii chars, and it will build\n* You can't use non-ascii to name a dependency (TOML error)\n* You can't publish it on http://crates.io\u00a0 (API rejected)",
            "username": "bitshiftmask",
            "num_likes": 33,
            "num_retweets": 5,
            "num_replies": 1
        },
        "1113551932218429441": {
            "id": "1113551932218429441",
            "text": "If you\u2019re around the OC on Apr 9, come hear me expound on automatically translating C into @rustlang code.http://meetu.ps/e/GzM8g/8fpf0/a\u00a0",
            "username": "rinon",
            "num_likes": 18,
            "num_retweets": 8,
            "num_replies": 2
        },
        "1113150542144868352": {
            "id": "1113150542144868352",
            "text": "This time around I'm trying to fund my work without having an employer sponsor me full time. If you or your company are interested in helping support me, please reach out",
            "username": "sgrif",
            "num_likes": 66,
            "num_retweets": 24,
            "num_replies": 4
        },
        "1113150283809525760": {
            "id": "1113150283809525760",
            "text": "Moving on from Rails, and what's nexthttps://blog.seantheprogrammer.com/moving-on-from-rails-and-whats-next\u00a0\u2026",
            "username": "sgrif",
            "num_likes": 600,
            "num_retweets": 121,
            "num_replies": 50
        },
        "1113155082432983041": {
            "id": "1113155082432983041",
            "text": "Words cannot describe how honored and proud I am to have a book I wrote shelved alongside all my other @pragprog books . Truly a bucket list moment I will never forget. #WebAssembly #rustlang #BucketListpic.twitter.com/wYvu7wFRWL",
            "username": "KevinHoffman",
            "num_likes": 179,
            "num_retweets": 22,
            "num_replies": 8
        },
        "1113407224540389377": {
            "id": "1113407224540389377",
            "text": "Xiaoguang\u2019s *Search Engine in production with Rust* will review the design choices and the lessons his team has learned from the experience in Zhihu, hope it will help rustaceans with avoiding similar mistakes they\u2019ve made. #rustlang #RustConAsiahttps://github.com/sunxiaoguang\u00a0",
            "username": "RustConAsia",
            "num_likes": 16,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1113340024165216256": {
            "id": "1113340024165216256",
            "text": "I just released tmux-thumbs! A Tmux hint picker written in @rustlang . https://github.com/fcsonline/tmux-thumbs\u00a0\u2026 Speed up your command line interactions! https://asciinema.org/a/232775?autoplay=1\u00a0\u2026",
            "username": "openfcsonline",
            "num_likes": 25,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1113407908526661633": {
            "id": "1113407908526661633",
            "text": "Here comes your reminder that the CFP for DevFest Toulouse is open and looking for more @rustlang or @rustwasm (and plenty of other stuff!)\nsubmissions from int'l speakers. Make sure to check out the perks for speakers:https://devfesttoulouse.fr/blog/cfp/\u00a0",
            "username": "simach",
            "num_likes": 14,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1113221329627410433": {
            "id": "1113221329627410433",
            "text": "It's truly amazing how terse you can make the code to compute the covariance matrix of a deforming point cloud.  Functional programming with iterators is beautiful.  Not to mention how awesome the range operator is!  Mat3x3::from(orig_samples..cur_samples)pic.twitter.com/v2JypYJQWA",
            "username": "JasonHise64",
            "num_likes": 44,
            "num_retweets": 10,
            "num_replies": 3
        },
        "1113212969649725440": {
            "id": "1113212969649725440",
            "text": "This is one of the ways you can reverse a loop in @rustlang - no changes to range expression or body, no added tests, abstraction is still zero cost. This is what code elegance looks like. pic.twitter.com/AG9ed9jyYU",
            "username": "AndreaPessino",
            "num_likes": 181,
            "num_retweets": 23,
            "num_replies": 5
        },
        "1113153870514061317": {
            "id": "1113153870514061317",
            "text": " wasm-pack 0.8.0 is out! \n\na couple of fixes and docs for non-rustup env users, and a new feature that lets you customize the names of generated files!\n\n thanks to ibaryshnikov, @alex_crichton, and @jhakansson_ who is now a co-maintainer!https://github.com/rustwasm/wasm-pack/releases/tag/v0.8.0\u00a0\u2026",
            "username": "ag_dubs",
            "num_likes": 93,
            "num_retweets": 22,
            "num_replies": 1
        },
        "1113094401054703616": {
            "id": "1113094401054703616",
            "text": "Today's Joy of Computing: strace written from scratch in @rustlang.https://joy.recurse.com/posts/183-rustrace\u00a0\u2026",
            "username": "recursecenter",
            "num_likes": 94,
            "num_retweets": 22,
            "num_replies": 0
        },
        "1113066652323676160": {
            "id": "1113066652323676160",
            "text": "I have a mild urge to write a @rustlang RFC for type-qualified variants (either as an evolution of enum or as a separate thing). Anybody interested in this at all?\n\nShort pitch: solving the problem of json::Value::String and cbor::Value::String equivalence (and a bunch of others)",
            "username": "yrashk",
            "num_likes": 14,
            "num_retweets": 3,
            "num_replies": 2
        },
        "1112889270522535937": {
            "id": "1112889270522535937",
            "text": "Introducing \"byte strings\" to Rust: a string type that is not required to be valid UTF-8.https://github.com/BurntSushi/bstr\u00a0",
            "username": "burntsushi5",
            "num_likes": 132,
            "num_retweets": 21,
            "num_replies": 9
        },
        "1112911495778787330": {
            "id": "1112911495778787330",
            "text": "small example of a #rustlang aws lambda for servicing @LaunchDarkly webhook requests that correlate feature flag changes with your @datadoghq metricshttps://github.com/meetup/launch-dogly\u00a0\u2026",
            "username": "softprops",
            "num_likes": 17,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1113032102780469249": {
            "id": "1113032102780469249",
            "text": "reminder that this is happening tomorrow #rustlanghttps://twitter.com/tshepang_dev/status/1111311637611536385\u00a0\u2026",
            "username": "tshepang_dev",
            "num_likes": 7,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1113025925409640448": {
            "id": "1113025925409640448",
            "text": "Here it is, my first post in the \"Explained\" series: \"Explained: How does async work in Rust?\"  \n\nI explore the differences between NodeJS, Go and @rustlang , and go a bit deeper into runtimes and the ecosystem.https://dev.to/gruberb/explained-how-does-async-work-in-rust-46f8\u00a0\u2026",
            "username": "byteadventures",
            "num_likes": 165,
            "num_retweets": 30,
            "num_replies": 1
        },
        "1112993994466869249": {
            "id": "1112993994466869249",
            "text": "I wrote a short blog post with my findings from writing high performance Javascript lexer in @rustlang . This blog post includes optimization techniques I used and they can be applied in most of the languages.https://medium.com/@retep007/javascript-lexing-for-high-performance-f9a800ec930d\u00a0\u2026",
            "username": "retep007",
            "num_likes": 38,
            "num_retweets": 10,
            "num_replies": 1
        },
        "1112843604941127680": {
            "id": "1112843604941127680",
            "text": "@ThisWeekInRust Facebook's looking for a @rustlang expert for our Blockchain team in the Bay Area!https://www.facebook.com/careers/jobs/294785947846414/\u00a0\u2026",
            "username": "seannyboy126",
            "num_likes": 15,
            "num_retweets": 4,
            "num_replies": 2
        },
        "1112816696136556545": {
            "id": "1112816696136556545",
            "text": "@rustlang just released my first crate https://github.com/omerbenamram/EVTX\u00a0\u2026! A parser for the Windows XML Event Log (EVTX) format. Was such a breeze to write, and the performance is ripping fast!",
            "username": "OBenamram",
            "num_likes": 62,
            "num_retweets": 19,
            "num_replies": 4
        },
        "1112792796589514753": {
            "id": "1112792796589514753",
            "text": "This is an interesting project.  It's a server-side proxy solution for configuring Redis cluster instances (written in @rustlang too). \n\nhttps://github.com/doyoubi/undermoon\u00a0\u2026\n\nLooks like the goal is to simplify scaling up clusters (adding nodes, rebalancing, etc).\n#redis",
            "username": "grumi78",
            "num_likes": 11,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1112498086113366018": {
            "id": "1112498086113366018",
            "text": "What\u2019s the best \u201cIntro to WASM\u201d resource you know of? Kinda interested in learning Rust. #rustlang #wasm",
            "username": "MelloGarrett",
            "num_likes": 17,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1112717547219177472": {
            "id": "1112717547219177472",
            "text": "For those that might want such things, there's now a #Rustlang port of the #golang @nats_io #nkeys library for reading and writing the prefix-encoded keys NATS 2.0 uses. \n\nhttps://crates.io/crates/nkeys\u00a0\n\nIt's still early and a building block for later, but I had a blast writing it",
            "username": "KevinHoffman",
            "num_likes": 19,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1112747908640604163": {
            "id": "1112747908640604163",
            "text": "I also noticed that #rustlang support for the wasi target landed over the weekend, so I wrote a quick blog post this morning on how to write a wasi program using Rust. https://hermanradtke.com/2019/04/01/wasi-example-using-rust-and-lucet.html\u00a0\u2026\n\nThis uses the same \"lucet in 5 minutes\" strategy as my last post.",
            "username": "hermanradtke",
            "num_likes": 92,
            "num_retweets": 35,
            "num_replies": 1
        },
        "1112786717583372295": {
            "id": "1112786717583372295",
            "text": "The Colorado Gold Rust 2019 CFP is now open!\n\nhttps://cfp.cogoldrust.com/events/cogoldrust-2019\u00a0\u2026\n#rustlang #COGoldRust",
            "username": "COGoldRust",
            "num_likes": 10,
            "num_retweets": 9,
            "num_replies": 0
        },
        "1112762261544816643": {
            "id": "1112762261544816643",
            "text": "I'm going live in 20-30 minutes! Will be doing some programming on stream, working on getting sprites rendering in a small project I've been working on, written in @rustlanghttp://twitch.tv/goudagames\u00a0",
            "username": "GoudaTheSwede",
            "num_likes": 6,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1112774661568380929": {
            "id": "1112774661568380929",
            "text": "BOOM #macOS (command-line) support for an awesome @rustlang program. #opensourcehttps://github.com/unlimitedbacon/stl-thumb/pull/14\u00a0\u2026",
            "username": "dominucco",
            "num_likes": 16,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1112707824948174848": {
            "id": "1112707824948174848",
            "text": "Has anyone benchmarked any representative programs with @rustlang 1.33 vs. 1.32 and seen if all the `const fn` goodness we got improved run-time performance\u2014and if so, to what extent?",
            "username": "newrustacean",
            "num_likes": 34,
            "num_retweets": 9,
            "num_replies": 0
        },
        "1112329448119066624": {
            "id": "1112329448119066624",
            "text": "\u300cHow to Mock Time in Rust Tests and Cargo Gotchas We Met\u300dhttps://buff.ly/2WsTBPA\u00a0",
            "username": "doitian",
            "num_likes": 29,
            "num_retweets": 8,
            "num_replies": 1
        },
        "1111622929148710913": {
            "id": "1111622929148710913",
            "text": "@ThisWeekInRust we are looking for a @rustlang Lead Engineer with a strong interest for Cryptography. In Paris, or possibly remote (in a similar time zone). More info here : https://cosmian.com/rust-cpp-lead-engineer/\u00a0\u2026pic.twitter.com/ThqPCzJMB7",
            "username": "CosmianOfficial",
            "num_likes": 6,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1112621184766693376": {
            "id": "1112621184766693376",
            "text": "We\u2019re #hiring ! a @rustlang Lead Engineer more than welcome. Needless to say we hope to have lots of candidates #WomenWhoCodehttps://twitter.com/CosmianOfficial/status/1111622929148710913\u00a0\u2026",
            "username": "mumuparis",
            "num_likes": 4,
            "num_retweets": 8,
            "num_replies": 0
        },
        "1112464691555651587": {
            "id": "1112464691555651587",
            "text": "Blog post: Mocking in @rustlang with conditional compilation https://klausi.github.io/rustnish/2019/03/31/mocking-in-rust-with-conditional-compilation.html\u00a0\u2026 #rustlang",
            "username": "_klausi_",
            "num_likes": 33,
            "num_retweets": 9,
            "num_replies": 0
        },
        "1112459633069711360": {
            "id": "1112459633069711360",
            "text": "A recap of our team's journey to #FOSDEM 2019 where we delivered 1 talk in the MySQL devroom and 2 talks in the @rustlang devroom.\nhttps://www.pingcap.com/blog/fosdem-2019-recap-global-technology-local-community/\u00a0\u2026\nNext..",
            "username": "PingCAP",
            "num_likes": 7,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1112097860349239299": {
            "id": "1112097860349239299",
            "text": "My #RustLatam slides for \"Friendly Ferris: developing kind compiler errors\" are available at https://estebank.github.io/rust/\u00a0",
            "username": "ekuber",
            "num_likes": 42,
            "num_retweets": 9,
            "num_replies": 1
        },
        "1112096192413028352": {
            "id": "1112096192413028352",
            "text": "I really like this definition of zero-cost abstractions that @withoutboats presented because it not only talks about the cost when using the feature, but also the potential costs even when you *aren't* using the feature. @rustlang @RustLatamConfpic.twitter.com/JuQuwjd8uX",
            "username": "Sunjay03",
            "num_likes": 79,
            "num_retweets": 12,
            "num_replies": 2
        },
        "1112094651429851137": {
            "id": "1112094651429851137",
            "text": "My copy of Programming #webassembly with @rustlang finally arrived, been looking forward to this one! cc/@KevinHoffmanpic.twitter.com/Wckq4Im1qN",
            "username": "ericglobdell",
            "num_likes": 193,
            "num_retweets": 35,
            "num_replies": 1
        },
        "1112055638463524866": {
            "id": "1112055638463524866",
            "text": "\u00a1Ahora @ekuber hablando sobre errores en @rustlang! pic.twitter.com/2HYRQv7bBo",
            "username": "RustLatamConf",
            "num_likes": 14,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1112036825361596416": {
            "id": "1112036825361596416",
            "text": "Just discovered the `cc` @rustlang crate (by reading the relevant section of the Cargo docs!). Holy smokes, this is fantastic!",
            "username": "chriskrycho",
            "num_likes": 21,
            "num_retweets": 2,
            "num_replies": 2
        },
        "1112036354949607425": {
            "id": "1112036354949607425",
            "text": "Hey #PAXEast exhibitors: anyone using @rustlang for game development? I'd be interested to chat about what your experience has been like!",
            "username": "SchuCodes",
            "num_likes": 12,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1111820135851950080": {
            "id": "1111820135851950080",
            "text": "This week's @rustlang Melbourne talk by @mowog is online \nhttps://www.youtube.com/watch?v=6Lys6mMnxq8\u00a0\u2026\n\nThanks again to @GreenSync for hosting!",
            "username": "alfiedotwtf",
            "num_likes": 14,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1111857245241950211": {
            "id": "1111857245241950211",
            "text": "@rustlang Need to develop a RTSP client that compiles into Web assembly. Can it be done?",
            "username": "gokuney",
            "num_likes": 8,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1111897416675012609": {
            "id": "1111897416675012609",
            "text": "I collected all articles, code snippets and talks about (async) @rustlang which helped me learn the language and its features.\n\nFeel free to share and contribute:https://github.com/gruberb/learning-rust\u00a0\u2026",
            "username": "byteadventures",
            "num_likes": 182,
            "num_retweets": 50,
            "num_replies": 5
        },
        "1111981138036355072": {
            "id": "1111981138036355072",
            "text": "\u00abWe need all the ideas from all the people.\u00bb \u2014 @nikomatsakis quoting @jllord at #RustLATAM\n@rustlang is not the work of any single person, but of a community coming together to accomplish something big & enduring.\n\nAnd we need all the help we can get to be able to pull this off.pic.twitter.com/NbGuysnumT",
            "username": "slsoftworks",
            "num_likes": 22,
            "num_retweets": 7,
            "num_replies": 1
        },
        "1111983422870831106": {
            "id": "1111983422870831106",
            "text": "Great talk about @rustlang history and future by @nikomatsakis at the @RustLatamConfpic.twitter.com/8qtA5t67co",
            "username": "unbalancedparen",
            "num_likes": 22,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1111811869776314370": {
            "id": "1111811869776314370",
            "text": "`dbg!` macro for debug printing and the fact it returns the value too",
            "username": "divinegod",
            "num_likes": 40,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1111779865114509312": {
            "id": "1111779865114509312",
            "text": "We are making a lot of progress on C2Rust and just this week we were able to automatically translate all of the Lua interpreter to Rust and pass the entire test suite (will blog about this soon). We are also building a scriptable refactoring tool that helps you get to safer Rust!",
            "username": "realdataking",
            "num_likes": 103,
            "num_retweets": 19,
            "num_replies": 4
        },
        "1111644184832704512": {
            "id": "1111644184832704512",
            "text": "Thanks to our silver sponsors: @ParityTech, @graphprotocol and @NEARProtocol for their support. Do you want to know more about them? They will be in the sponsors section during the conference the 30 March. https://rustlatam.org/#our_sponsors\u00a0pic.twitter.com/ckfGb28fzn",
            "username": "RustLatamConf",
            "num_likes": 12,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1111647870673920001": {
            "id": "1111647870673920001",
            "text": "I've been spending most of my day on this build issue that only happens on CI. Some help would be greatly appreciated. https://stackoverflow.com/questions/55420475/rust-app-failes-to-compile-because-cargo-manifest-dir-environment-variable-is-mi\u00a0\u2026\n@rustlang #rustlang",
            "username": "DavidPdrsn",
            "num_likes": 7,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1111315867541925889": {
            "id": "1111315867541925889",
            "text": "It's here! Meet Lucet, our latest open-source project \u2014 designed to take WebAssembly beyond the browser + build a platform for faster, safer execution on Fastly\u2019s edge cloud.https://fastly.us/2THjfhN\u00a0",
            "username": "fastly",
            "num_likes": 439,
            "num_retweets": 166,
            "num_replies": 3
        },
        "1111345805401751552": {
            "id": "1111345805401751552",
            "text": "I started learning #rustlang. To facilitate my learning, I'm working on a little portscanner: https://github.com/s3krit/portscan\u00a0 - Any feedback on horrible patterns I'm using, or how to improve would be very welcome",
            "username": "s3krit",
            "num_likes": 17,
            "num_retweets": 4,
            "num_replies": 1
        },
        "1111394852120551428": {
            "id": "1111394852120551428",
            "text": "I'm very stoked to announce the release of Smithy v0.0.2! Smithy is a #rustlang #webassembly framework for front-end development. Check it out!https://medium.com/@robert.balicki_2494/introducing-smithy-webassembly-framework-for-rust-679d8fe9c16\u00a0\u2026",
            "username": "StatisticsFTW",
            "num_likes": 84,
            "num_retweets": 29,
            "num_replies": 2
        },
        "1111435307365232641": {
            "id": "1111435307365232641",
            "text": "The phantom builder \n#programming #rustlang\nhttps://wiredforge.com/blog/phantom-builder/index.html\u00a0\u2026",
            "username": "TheWitchCave",
            "num_likes": 14,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1111442838217084929": {
            "id": "1111442838217084929",
            "text": "Super dope work @fastly is doing with #rustlang to push wasm \"to the edge\"https://www.fastly.com/blog/announcing-lucet-fastly-native-webassembly-compiler-runtime\u00a0\u2026",
            "username": "softprops",
            "num_likes": 18,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1111451168948011009": {
            "id": "1111451168948011009",
            "text": "What is a \"typical\" #rustlang dev environment? Any specific tools I should be using?",
            "username": "birchsport",
            "num_likes": 12,
            "num_retweets": 1,
            "num_replies": 14
        },
        "1111450853255327746": {
            "id": "1111450853255327746",
            "text": "What are the best #rustlang introductions? I've been on the fence about diving in. I have a 15 day vacation coming up with a lot of free time. Where should I start?",
            "username": "birchsport",
            "num_likes": 3,
            "num_retweets": 1,
            "num_replies": 8
        },
        "1111496903617732608": {
            "id": "1111496903617732608",
            "text": "A couple weeks ago I had another great phone chat with #aws employees about Rusoto. The project is being used by *hundreds* of AWS accounts, right now. #rustlang",
            "username": "Motoblag",
            "num_likes": 48,
            "num_retweets": 8,
            "num_replies": 0
        },
        "1111500140580352002": {
            "id": "1111500140580352002",
            "text": "I am evaluating all possible combinations to insert one or more structs into multiple vecs simultaneously. Can you recommend any lifesaving @rustlang crate for this type of computationally intense problem? pic.twitter.com/3PmKzhOMf2",
            "username": "bogdanarabadzhi",
            "num_likes": 5,
            "num_retweets": 2,
            "num_replies": 3
        },
        "1111585694194040832": {
            "id": "1111585694194040832",
            "text": "Feeling motivated this weekend to work on OSS? Here is an easy issue that you can work on: https://github.com/clap-rs/clap/issues/1425\u00a0\u2026. \n1) Ensure you fork from v3-master branch\n2) Leave a comment on the issue that you are working on\n3) if you need some help, feel free to ping us on discord or here",
            "username": "CliRust",
            "num_likes": 14,
            "num_retweets": 8,
            "num_replies": 2
        },
        "1111593997695373313": {
            "id": "1111593997695373313",
            "text": "In case you missed it, I have published an article about writing your first CLI tool with @rustlang last Fridayhttps://twitter.com/jveillet/status/1109138679606456321\u00a0\u2026",
            "username": "jveillet",
            "num_likes": 15,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1111610456785866752": {
            "id": "1111610456785866752",
            "text": "I've got a terrible idea and, as usual with terrible ideas, I'm starting to like it.\n\nUsing `cargo test` as a C test runner!\n\n@rustlang will drive tests in parallel, print messages and backtraces, allow you to filter them and do everything else you expect from a test runner.pic.twitter.com/5vDETnwp6A",
            "username": "RReverser",
            "num_likes": 70,
            "num_retweets": 5,
            "num_replies": 4
        },
        "1111611826956132352": {
            "id": "1111611826956132352",
            "text": "The power of @rustlang: currently writing code that runs in a CLI tool, an iOS app and a web app.",
            "username": "ryan_levick",
            "num_likes": 93,
            "num_retweets": 8,
            "num_replies": 1
        },
        "1111445862780067845": {
            "id": "1111445862780067845",
            "text": "Move along 0.7.3, uuid@0.7.4 is now outhttps://github.com/uuid-rs/uuid/releases/0.7.4\u00a0\u2026",
            "username": "kinggoesgaming",
            "num_likes": 5,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1111352089043718146": {
            "id": "1111352089043718146",
            "text": "I used to find @rustlang maps/sets annoying to work with. But today I found some nice convenience methods for making maps/sets out of other data structures! \nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=6a7de9cc59d6482d9b6d03797d38ba96\u00a0\u2026pic.twitter.com/jkmccJ0Y0G",
            "username": "adam_chal",
            "num_likes": 65,
            "num_retweets": 5,
            "num_replies": 6
        },
        "1111390385035567106": {
            "id": "1111390385035567106",
            "text": "Hay @rustlang folks, if you are a lib author and you are creating something for security and also you concerned by the performance, which version of this code would u will pick ? why ? neither ? please explain !\nThanks.pic.twitter.com/tvttDyvOrs",
            "username": "ShekoHex",
            "num_likes": 33,
            "num_retweets": 4,
            "num_replies": 15
        },
        "1111393722279907328": {
            "id": "1111393722279907328",
            "text": "What's the quickest way to clear the terminal screen (in all terminals, especially Windows) in @rustlang?",
            "username": "Argorak",
            "num_likes": 5,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1111333332665532416": {
            "id": "1111333332665532416",
            "text": "Do I know andy distributed-first companies hiring Rust programmers? Asking for a very-senior-engineering-lead-or-manager-or-really-anything friend.",
            "username": "zspencer",
            "num_likes": 39,
            "num_retweets": 16,
            "num_replies": 8
        },
        "1111330089931661312": {
            "id": "1111330089931661312",
            "text": "eva - a calculator REPL written in @rustlang! one of the few projects that didn't get aborted within 2 weeks. \n\nhttps://github.com/nerdypepper/eva\u00a0pic.twitter.com/6FUzvVVHWt",
            "username": "N3rdyP3pp3r",
            "num_likes": 66,
            "num_retweets": 8,
            "num_replies": 0
        },
        "1111304165819584512": {
            "id": "1111304165819584512",
            "text": "yeehaa! \n\nwriting @rustwasm just got more awesome! happy to release this CLI for generating, building, previewing, and publishing @cloudflare Workers! \n\ncargo install wranglerhttps://twitter.com/Cloudflare/status/1111299645546758145\u00a0\u2026",
            "username": "ag_dubs",
            "num_likes": 167,
            "num_retweets": 48,
            "num_replies": 1
        },
        "1111299645546758145": {
            "id": "1111299645546758145",
            "text": " The Wrangler CLI: Deploying Rust with WASM on Cloudflare Workers https://blog.cloudflare.com/introducing-wrangler-cli/\u00a0\u2026pic.twitter.com/JWJZGYN61H",
            "username": "Cloudflare",
            "num_likes": 126,
            "num_retweets": 33,
            "num_replies": 0
        },
        "1111306257376387072": {
            "id": "1111306257376387072",
            "text": "Primer for new Rust programmers for making quick work of borrowing & ownership tactics by using a machine-oriented mental model\n@rustlanghttps://medium.com/@knappador/why-the-machine-b9803a77fa29\u00a0\u2026",
            "username": "knappador",
            "num_likes": 114,
            "num_retweets": 40,
            "num_replies": 1
        },
        "1111247614044000256": {
            "id": "1111247614044000256",
            "text": "I just published the new charter for the docs team for @rustlang. We plan on making the process of learning and using Rust at all experience levels better through a wide and diverse set of learning materials!https://internals.rust-lang.org/t/the-new-docs-team-charter/9732\u00a0\u2026",
            "username": "ryan_levick",
            "num_likes": 123,
            "num_retweets": 29,
            "num_replies": 4
        },
        "1111264250645893121": {
            "id": "1111264250645893121",
            "text": "We're leveraging @rustlang's excellent type system and memory safety features to generate secure implementations of Noise Framework Protocols!\n\nhttp://noiseexplorer.com\u00a0https://twitter.com/symbolicsoft/status/1111255925443178496\u00a0\u2026",
            "username": "georgionic",
            "num_likes": 23,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1111093033087520768": {
            "id": "1111093033087520768",
            "text": "ripjson - A fast, lean grep for JSON files written in @rustlang:https://github.com/matthiasdiener/ripjson\u00a0\u2026",
            "username": "_mdiener",
            "num_likes": 47,
            "num_retweets": 6,
            "num_replies": 1
        },
        "1111093779145154560": {
            "id": "1111093779145154560",
            "text": "I'm looking to follow a few YouTubers who talk about @rustlang, but I can't seem to find many. \nAny recommendations?",
            "username": "matchai",
            "num_likes": 35,
            "num_retweets": 8,
            "num_replies": 11
        },
        "1111049071698022401": {
            "id": "1111049071698022401",
            "text": "I just wrote my first EFI binary.... in @rustlang!!!",
            "username": "acruiz",
            "num_likes": 65,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1111005669082181633": {
            "id": "1111005669082181633",
            "text": "Have some beginner-friendly issues on your @rustlang CLI projects? A good reason to join ushttps://github.com/rust-lang-nursery/cli-wg/issues/120\u00a0\u2026",
            "username": "CliRust",
            "num_likes": 25,
            "num_retweets": 12,
            "num_replies": 1
        },
        "1110911853771833346": {
            "id": "1110911853771833346",
            "text": "Programming WebAssembly with Rust, in print http://bit.ly/2Wjwjvm\u00a0\n#pragprogpic.twitter.com/NYiv9QNl9o",
            "username": "pragprog",
            "num_likes": 95,
            "num_retweets": 20,
            "num_replies": 1
        },
        "1110948853958750208": {
            "id": "1110948853958750208",
            "text": "BoringTun, a userspace @WireGuardVPN implementation in #Rust -https://cfl.re/2Yu91F5\u00a0",
            "username": "Cloudflare",
            "num_likes": 147,
            "num_retweets": 70,
            "num_replies": 2
        },
        "1110953012938358785": {
            "id": "1110953012938358785",
            "text": "hi @i1skn, I know you've been using #ios & @rustlang together and we're trying to test this at my workplace. Do you know something about this https://github.com/Geal/rust_on_mobile#exception-unwinding-is-apparently-incompatible-between-rust-and-objectivec-because-of-compact-unwinding\u00a0\u2026? It would be really cool if you could provide some insight.",
            "username": "robertohuertasm",
            "num_likes": 13,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1110952272064724992": {
            "id": "1110952272064724992",
            "text": "here's a silly question: has anyone written a procedural macro for @rustlang that acts as a decorator application, a la python?",
            "username": "isntitvacant",
            "num_likes": 14,
            "num_retweets": 1,
            "num_replies": 3
        },
        "1110840383536332800": {
            "id": "1110840383536332800",
            "text": "Miri available as rustup component https://www.ralfj.de/blog/2019/03/26/miri-as-rustup-component.html\u00a0\u2026",
            "username": "gcouprie",
            "num_likes": 42,
            "num_retweets": 12,
            "num_replies": 1
        },
        "1110405489903296513": {
            "id": "1110405489903296513",
            "text": "New blog post: \"Variance in Rust: An intuitive explanation\" https://ehsanmkermani.com/2019/03/16/variance-in-rust-an-intuitive-explanation/\u00a0\u2026\n@rustlang @ThisWeekInRust @read_rust",
            "username": "ehsanmok",
            "num_likes": 40,
            "num_retweets": 6,
            "num_replies": 1
        },
        "1110556889551646721": {
            "id": "1110556889551646721",
            "text": "\u00a1Afinando los \u00faltimos detalles para #RustLatam! pic.twitter.com/HbauzXWmWU",
            "username": "RustLatamConf",
            "num_likes": 38,
            "num_retweets": 8,
            "num_replies": 1
        },
        "1110889211119484931": {
            "id": "1110889211119484931",
            "text": "After our survey recently, we're happy to announce https://rust-experts.com\u00a0! Get close and direct access to a group of Rust experts as your extended brain!\n\nWith automatic pro-rating for individual subscribers!",
            "username": "FerrousSystems",
            "num_likes": 54,
            "num_retweets": 16,
            "num_replies": 0
        },
        "1110620200116936704": {
            "id": "1110620200116936704",
            "text": "I just posted \"How to build sitemap.xml for images with Rust\"\nat https://www.steadylearner.com/blog/read/How-to-build-sitemap.xml-for-images-with-Rust\u00a0\u2026\n\nYou can build sitemap.xml, sitemap.txt and sitemap for images at the same time with Rust.\n\n@newrustacean @rustlang @ThisWeekInRust @rustbeltrust @hellorustshowpic.twitter.com/k5VshTuiH5",
            "username": "steadylearner_p",
            "num_likes": 19,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1110643031244488705": {
            "id": "1110643031244488705",
            "text": "There's not much Rust-specific detail out there at the moment, but you can read https://www.hadean.com/blog/our-favourite-faqs-from-the-aether-engine-discord\u00a0\u2026 for some underpinnings (built with a lot of Rust) and https://www.hadean.com/blog/how-do-you-test-a-10000-player-deathmatch-game\u00a0\u2026 for Aether (mostly C++, some Rust) challenges. I'll see about pushing Rust content at some point!",
            "username": "aidanhs",
            "num_likes": 45,
            "num_retweets": 14,
            "num_replies": 2
        },
        "1110645643242946561": {
            "id": "1110645643242946561",
            "text": "We're seeing more game developers do some awesome things with @rustlang. Looking forward to reading more about this (and check out the video I rt'd if you haven't seen it, yet)https://twitter.com/aidanhs/status/1110643031244488705\u00a0\u2026",
            "username": "jntrnr",
            "num_likes": 34,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1110652151867588608": {
            "id": "1110652151867588608",
            "text": "Tomorrow is Rust: Scientific Computing from the @rustlang meetup at HeatSync Labs. Find the info here:http://j.mp/2VNvNFA\u00a0",
            "username": "PHXTechEvents",
            "num_likes": 6,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1110671016269889537": {
            "id": "1110671016269889537",
            "text": "Writing this was a nice little intro to @rustlang's Tokio crate - a simple SSH tarpit.https://github.com/Freaky/tarssh\u00a0",
            "username": "blaagh",
            "num_likes": 29,
            "num_retweets": 4,
            "num_replies": 2
        },
        "1110671656052244485": {
            "id": "1110671656052244485",
            "text": "Active more on mastodon than here? No issues. We got you covered. Follow https://fosstodon.org/@clirust\u00a0 on mastodon. cc @rustlang. (note: this isn't a mirror account and tweets may vary on both platforms)",
            "username": "CliRust",
            "num_likes": 14,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1110711295563743233": {
            "id": "1110711295563743233",
            "text": "Hi friends. We here at @zombodb are looking for a character that does @rustlang and would be willing to travel to El Paso, TX (*all* expenses paid!) for a multi-day training gig. \n\nOther work-for-hire engagements could also happen. \n\nPlease follow and DM (and RT!). \n\n",
            "username": "zombodb",
            "num_likes": 19,
            "num_retweets": 26,
            "num_replies": 2
        },
        "1110734976146784257": {
            "id": "1110734976146784257",
            "text": "\u30d6\u30ed\u30b0\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f\u3002\u300cRust\u3067\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u300d\nBlogged on \"Operator overloading in Rust\" #rustlang @rustlang\nhttps://masahiko-ofgp-ja-notebook.blogspot.com/2019/03/rustlang-operator-overloading.html\u00a0\u2026",
            "username": "masahiko_ofgp",
            "num_likes": 6,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1110799084099698688": {
            "id": "1110799084099698688",
            "text": "Dear Twitterverse, is there any analog to ProbLog, but in @rustlang?\nhttps://dtai.cs.kuleuven.be/problog/\u00a0",
            "username": "akochkov",
            "num_likes": 2,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1110806838008786944": {
            "id": "1110806838008786944",
            "text": "Receive updates about #Rustlab, subscribe to our Newsletter!\n#developer #rust #rustlang #software @rustlanghttps://www.rustlab.it/\u00a0",
            "username": "rustlab_conf",
            "num_likes": 9,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1110835455145041920": {
            "id": "1110835455145041920",
            "text": "I am struggling with learning @rustlang I need some pointers from people coming from mostly Python, little C and C++ background.",
            "username": "tuxish",
            "num_likes": 19,
            "num_retweets": 8,
            "num_replies": 19
        },
        "1110450242846101504": {
            "id": "1110450242846101504",
            "text": "Interested in #rustlang but not sure what tools to use? Great news, on Thursday 4th of April we will talk about tooling for Rust developers! more details:https://www.meetup.com/Rust-Wroclaw/events/259511136/\u00a0\u2026",
            "username": "RustWroclaw",
            "num_likes": 23,
            "num_retweets": 9,
            "num_replies": 0
        },
        "1110459008324915200": {
            "id": "1110459008324915200",
            "text": "We've extended the CFP for the whole week to allow for last minute submissions! Make sure to submit your proposal before April 1\n#rust #rustlang #rustlab https://www.rustlab.it/page/1398227/call-for-proposal\u00a0\u2026pic.twitter.com/cYvRFMCDoU",
            "username": "rustlab_conf",
            "num_likes": 10,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1110606661176250368": {
            "id": "1110606661176250368",
            "text": "RCIR v0.3.0 was just pushed to http://crates.io\u00a0\nhttps://crates.io/crates/rcir\u00a0\n\nIt adds new functionality and better error messages on edge cases #rustlang",
            "username": "living_syn",
            "num_likes": 3,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1110607519385350150": {
            "id": "1110607519385350150",
            "text": "The stress test worked and #rustlang was a key part of the largest real-time battle ever in terms of player numbers (that I'm aware of). Lots to do following this tech demo and we'll keep working with studios to push ourselves!https://twitter.com/pcgamer/status/1108850831540084741\u00a0\u2026",
            "username": "aidanhs",
            "num_likes": 174,
            "num_retweets": 51,
            "num_replies": 2
        },
        "1110541238183358465": {
            "id": "1110541238183358465",
            "text": "Now available to ACM Members via @Skillsoft member benefit: \"The Rust Programming Language,\" by @steveklabnik @Carols10cents. The official book on Rust written by 2 members of the Rust core team, w/feedback & contributions from 42 members of the community. http://bit.ly/2Wnd307\u00a0pic.twitter.com/O6cHospJ3R",
            "username": "acmeducation",
            "num_likes": 45,
            "num_retweets": 20,
            "num_replies": 2
        },
        "1110459421216247814": {
            "id": "1110459421216247814",
            "text": "We will have a special topic of Rust for competitive programming from @bhuztez, who will introduce us how to solve problems efficiently and correctly in a very short time, and the reasons that #Rust is a good fit for making libraries for competitive programming. #RustConAsia",
            "username": "RustConAsia",
            "num_likes": 14,
            "num_retweets": 4,
            "num_replies": 2
        },
        "1110535722900115457": {
            "id": "1110535722900115457",
            "text": "Why use @rustlang? The last talk by @spastorino, one of the organizers of #RustLatam before the conference this 29 and 30 March pic.twitter.com/yE4KjSBcK6",
            "username": "RustLatamConf",
            "num_likes": 35,
            "num_retweets": 12,
            "num_replies": 2
        },
        "1110541325215125505": {
            "id": "1110541325215125505",
            "text": "Kindle cannot render bolded code in this text? anyone else having this problem in android? @rustlangpic.twitter.com/uK8LV1B3kA",
            "username": "akarinoftime",
            "num_likes": 24,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1110304622596538368": {
            "id": "1110304622596538368",
            "text": "No #rustlang meetups in #Warsaw? Hmm... how about we fix that?",
            "username": "vkhytskyi",
            "num_likes": 41,
            "num_retweets": 6,
            "num_replies": 6
        },
        "1110166084496310272": {
            "id": "1110166084496310272",
            "text": "I have this sense that there are many \"best in class\" #rustlang libraries -- combining peak efficiency with ergonomics and safety. Which #rustlang libraries (or frameworks, even apps) do you feel passionate about? Let me know.",
            "username": "nikomatsakis",
            "num_likes": 131,
            "num_retweets": 24,
            "num_replies": 31
        },
        "1109914170126987266": {
            "id": "1109914170126987266",
            "text": "Happy rust programming experience where you optimize for an hour trying to hit target. Almost have it. Then remember to compile in release mode and get 10x goal.",
            "username": "jessegrosjean",
            "num_likes": 145,
            "num_retweets": 19,
            "num_replies": 2
        },
        "1110278229477216260": {
            "id": "1110278229477216260",
            "text": "The best resource for me (coming from Travis) was https://docs.microsoft.com/en-us/azure/devops/pipelines/migrate/from-travis?view=azure-devops\u00a0\u2026. The official docs didn't quite match my expectations which is why I'm working on a \"Pipelines If You Think Like Travis\" guide. Unfortunately it's not done...It would be great to get your specific feedback.",
            "username": "ryan_levick",
            "num_likes": 7,
            "num_retweets": 3,
            "num_replies": 2
        },
        "1110240179137249280": {
            "id": "1110240179137249280",
            "text": "Introducing the Humble Book Bundle: Coder's Bookshelf by No Starch Press! Get The Rust Programming Language, Practical SQL: A Beginner's Guide to Storytelling with Data, and more.https://www.humblebundle.com/books/coders-bookshelf-books?utm_source=twitter&utm_medium=link&utm_campaign=codersbookshelf_announce\u00a0\u2026",
            "username": "humble",
            "num_likes": 148,
            "num_retweets": 79,
            "num_replies": 6
        },
        "1110208965277827074": {
            "id": "1110208965277827074",
            "text": "Calling for int'l @rustlang speakers for DevFest Toulouse next October! I'll be representing the Rust community on the program committee, and we'd love a few Rust talks, ideally showing where Rust shines to Web/Cloud devs. We can also organize a talk at the local Rust meetup!https://twitter.com/DevFestToulouse/status/1110114513230184448\u00a0\u2026",
            "username": "simach",
            "num_likes": 26,
            "num_retweets": 14,
            "num_replies": 1
        },
        "1110199478961799168": {
            "id": "1110199478961799168",
            "text": "Hey, any companies in Berlin hiring #rustlang developers at the moment? (Actually) asking for a friend who'll be looking soon. \n\nRT appreciated! @rustlang",
            "username": "spacekookie",
            "num_likes": 37,
            "num_retweets": 34,
            "num_replies": 3
        },
        "1110218766238011392": {
            "id": "1110218766238011392",
            "text": "A summary of our last week hack-session @rustlang where we implemented a basic numeric data type :)\n\nhttps://chilimatic.hashnode.dev/rust-basics-the-add-trait-cjtoke4yh002t8hs1c61p82mz\u00a0\u2026 \n\nit's far from perfect but it was a nice experiment to understand the problems of floating points instead of just complaining about them ;D ...",
            "username": "shadowdroid",
            "num_likes": 30,
            "num_retweets": 15,
            "num_replies": 2
        },
        "1110151145261953024": {
            "id": "1110151145261953024",
            "text": "Rust LT 3\u7d42\u4e86\u3002\u79c1\u306e\u767a\u8868\u8cc7\u6599\u306f\u3053\u3061\u3089\u3067\u3059\u3002 #rust_jphttps://www.slideshare.net/mobile/YusukeYoshimoto2/rust-137863085?ref=https://rust.connpass.com/event/122377/presentation/\u00a0\u2026",
            "username": "yoshrc_public",
            "num_likes": 33,
            "num_retweets": 10,
            "num_replies": 0
        },
        "1110004380521189377": {
            "id": "1110004380521189377",
            "text": "valeriansaliou/sonic: Fast, lightweight & schema-less search backend. An alternative to Elasticsearch that runs on a few MBs of RAM. Writen in @rustlang https://github.com/valeriansaliou/sonic\u00a0\u2026pic.twitter.com/OhVNi8YNDd",
            "username": "fannheyward",
            "num_likes": 65,
            "num_retweets": 20,
            "num_replies": 1
        },
        "1110023023069790208": {
            "id": "1110023023069790208",
            "text": "dundun dundun dundun..\n\nuuid@0.7.3 has now been released :Dhttps://github.com/uuid-rs/uuid/releases/tag/0.7.3\u00a0\u2026",
            "username": "kinggoesgaming",
            "num_likes": 16,
            "num_retweets": 2,
            "num_replies": 2
        },
        "1110049444181901312": {
            "id": "1110049444181901312",
            "text": "I've written up my adventures from earlier today working out how to cross-compile a @rustlang project for FreeBSD using docker (without emulation).\n\nhttps://www.wezm.net/technical/2019/03/cross-compile-freebsd-rust-binary-with-docker/\u00a0\u2026",
            "username": "wezm",
            "num_likes": 21,
            "num_retweets": 5,
            "num_replies": 2
        },
        "1110143526778605568": {
            "id": "1110143526778605568",
            "text": "We\u2019re proud to announce that @rustlang support in @openwhisk is around the corner thanks to the contributions by @csantanapr, @sciabarracom, @Bruce_Adams, and our favorite fellow #rust hacker @rdiaz82 https://github.com/apache/incubator-openwhisk-runtime-rust\u00a0\u2026\nWorking on the doc now so you all can try it ASAP!",
            "username": "theagilemonkeys",
            "num_likes": 41,
            "num_retweets": 26,
            "num_replies": 0
        },
        "1110169800171360256": {
            "id": "1110169800171360256",
            "text": "ICYMI this weekend\u2014Bonus 14: How the Sausage Gets Made\u2014how I make the show, and why you won\u2019t find it on Google Play, Spotify, or Stitcher. AKA: \u201c@chriskrycho goes full @WinningSlowly for half of this episode because he *loves* the open web.\u201d https://newrustacean.com/show_notes/bonus/_14/\u00a0\u2026\n@rustlang",
            "username": "newrustacean",
            "num_likes": 13,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1109574265219760138": {
            "id": "1109574265219760138",
            "text": "is there a better way to export functions or force a module to be linked?",
            "username": "_manpat",
            "num_likes": 1,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1109574162341871617": {
            "id": "1109574162341871617",
            "text": "ok so it looks like rust is dropping the entire module when linking bc it's only exports. if I put an empty function in the module and call it somewhere else, all the functions in that module get exported\n\nis this intended behaviour?",
            "username": "_manpat",
            "num_likes": 4,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1109568871047069696": {
            "id": "1109568871047069696",
            "text": "can someone point me to some docs or smth on how/when rusts wasm backend exports functions?\n\nI have *one* module in my crate that just will not export functions no matter what I do and I have no idea why #rustlang",
            "username": "_manpat",
            "num_likes": 1,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1109746705560289281": {
            "id": "1109746705560289281",
            "text": "Ficon: File and folder naming convention checker written in pure rust https://github.com/iboss-ptk/ficon\u00a0 @rustlang #rustlang #softwaredevelopment",
            "username": "ibossptk",
            "num_likes": 19,
            "num_retweets": 5,
            "num_replies": 2
        },
        "1109569640403881984": {
            "id": "1109569640403881984",
            "text": "Just released v0.6.0 of my @rustlang zeroize crate. Now with custom derive support (for both the Zeroize trait and a newly added ZeroizeOnDrop) https://docs.rs/zeroize/0.6.0/zeroize/\u00a0\u2026pic.twitter.com/bitgq1m96I",
            "username": "bascule",
            "num_likes": 50,
            "num_retweets": 11,
            "num_replies": 6
        },
        "1109606004545806336": {
            "id": "1109606004545806336",
            "text": "Published my new crate: parse mysqldump xml table with derive macro https://crates.io/crates/mysqldump-quick-xml\u00a0\u2026 @rustlang got 100 mb/sec, which is good enough for my task",
            "username": "kil0rk",
            "num_likes": 7,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1109518226424295424": {
            "id": "1109518226424295424",
            "text": "If you are using the assert_cmd @rustlang crate (or even if you are not using it), we'd love some feedback https://github.com/assert-rs/assert_cmd/issues/74\u00a0\u2026 \u2026",
            "username": "CliRust",
            "num_likes": 8,
            "num_retweets": 6,
            "num_replies": 1
        },
        "1109520498558410752": {
            "id": "1109520498558410752",
            "text": "Implementing allocator-aware dynamic arrays, maps and strings in @rustlanghttp://stevenlr.com/posts/handmade-rust-3-containers/\u00a0\u2026",
            "username": "steven_lr",
            "num_likes": 46,
            "num_retweets": 10,
            "num_replies": 0
        },
        "1109495342859337728": {
            "id": "1109495342859337728",
            "text": "Just released Crabsformer  v2019.3.14 (early-preview) with support for indexing, slicing and iterating numeric vector.\n\nDocs: https://docs.rs/crabsformer/2019.3.14/crabsformer/\u00a0\u2026\nCargo: https://crates.io/crates/crabsformer\u00a0\u2026pic.twitter.com/ggxXprZVRr",
            "username": "bayualsyah",
            "num_likes": 18,
            "num_retweets": 2,
            "num_replies": 2
        },
        "1109479127881531392": {
            "id": "1109479127881531392",
            "text": "@nodejs developers: What are your biggest questions/concerns for implementing your first @rustlang web service? Would love to get your input and discuss with you!https://dev.to/gruberb/what-are-your-biggest-obstaclesquestions-for-moving-from-nodejs-to-rust-4ckm\u00a0\u2026",
            "username": "byteadventures",
            "num_likes": 98,
            "num_retweets": 29,
            "num_replies": 16
        },
        "1109315975676076032": {
            "id": "1109315975676076032",
            "text": "Tonight I had a little breakthrough with @rustlang and leveled up a bit in building a CLI+REPL in Rust using nom to parse input. For what kind of problems would having a systems-software-friendly REPL help?",
            "username": "csfinn",
            "num_likes": 19,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1109440037199011840": {
            "id": "1109440037199011840",
            "text": "hyperfine - a CLI benchmarking tool that provides statistics of a command's execution time written in @rustlang by @sharkdphttps://cli.fan/posts/hyperfine/\u00a0\u2026",
            "username": "CliRust",
            "num_likes": 48,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1109224237670322177": {
            "id": "1109224237670322177",
            "text": "A first hand account from the second annual @rustlang All Hands meeting, by @cuviper https://red.ht/2Fqd9Np\u00a0 #Rust @mozillapic.twitter.com/F3Zyqzeodn",
            "username": "rhdevelopers",
            "num_likes": 11,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1109238852521259008": {
            "id": "1109238852521259008",
            "text": "Have you been to the @rustlang meetup? The next one is on Wednesday:http://j.mp/2VNvNFA\u00a0",
            "username": "PHXTechEvents",
            "num_likes": 9,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1108775003879817217": {
            "id": "1108775003879817217",
            "text": "Let me tell you a story about why Rust is an actual game changer.",
            "username": "bodil",
            "num_likes": 948,
            "num_retweets": 349,
            "num_replies": 11
        },
        "1108786277019725824": {
            "id": "1108786277019725824",
            "text": "Wrote an unnecessarily long blog post on #rustlang and how we deal with method chaining: https://randompoison.github.io/posts/returning-self/\u00a0\u2026\n\ntl;dr: Don't return `self` at the end of a method if you're just doing so to enable method chaining!",
            "username": "randomPoison",
            "num_likes": 47,
            "num_retweets": 20,
            "num_replies": 3
        },
        "1108832951003987968": {
            "id": "1108832951003987968",
            "text": "Super happy to announce that barrel `v0.5.0` has been released! Lots of cool changes. #rustlang\n\nRead about the changes here: https://rust-db.github.io/barrel/blog/releasing-050/\u00a0\u2026\n https://crates.io/crates/barrel\u00a0 ",
            "username": "spacekookie",
            "num_likes": 24,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1109089807156822017": {
            "id": "1109089807156822017",
            "text": "IntelliJRust easily removes useless arms, or adds remaining arms automatically inside matching patterns. #rustlangpic.twitter.com/j21UCK7umF",
            "username": "intellijrust",
            "num_likes": 84,
            "num_retweets": 18,
            "num_replies": 2
        },
        "1109135317938987010": {
            "id": "1109135317938987010",
            "text": "We're reaching out--if you're interested in @CrystalLanguage, @rustlang, @ponylang, @elmlang, @elixirlang, @JuliaLanguage or anything else new and cutting edge we'd love to have you come and talk at our conference!  Our CFP is openhttps://papercall.io/dtw\u00a0",
            "username": "dettechwatch",
            "num_likes": 15,
            "num_retweets": 8,
            "num_replies": 1
        },
        "1109135842793148419": {
            "id": "1109135842793148419",
            "text": "If you're a student interested in @rustlang and @GNOME, @GTKtoolkit or @GStreamer and want to participate in this year's round of @gsoc, there are a few Rust-related ideas listed on https://wiki.gnome.org/Outreach/SummerOfCode/2019/Ideas\u00a0\u2026 (search for \"rust\").\n\nSoon, on Monday, the application period starts!",
            "username": "sdroege_",
            "num_likes": 29,
            "num_retweets": 15,
            "num_replies": 1
        },
        "1109138679606456321": {
            "id": "1109138679606456321",
            "text": " New article on demain\u00b7il\u00b7pleut: Your first CLI tool with @rustlanghttps://www.demainilpleut.fr/your-first-cli-tool-with-rust/\u00a0\u2026",
            "username": "jveillet",
            "num_likes": 29,
            "num_retweets": 11,
            "num_replies": 0
        },
        "1109124403239907328": {
            "id": "1109124403239907328",
            "text": " PSA: You don't have to use npm or a JS bundler to use wasm-pack and wasm-bindgen!\n\n(Of course, you can if you want to!)\n\nSeen some people mistakenly believe that they are required and wanted to clear the air. More docs improvements on the way too :)\n\nhttps://rustwasm.github.io/docs/wasm-bindgen/examples/without-a-bundler.html\u00a0\u2026",
            "username": "rustwasm",
            "num_likes": 73,
            "num_retweets": 20,
            "num_replies": 0
        },
        "1109125227332730880": {
            "id": "1109125227332730880",
            "text": "Our new article about @openwhisk  and @rustlang for IoT applications. A nice combination!! I'm really excited to be talking about this next week in @ServerlessDAms https://twitter.com/theagilemonkeys/status/1109118516089835520\u00a0\u2026",
            "username": "rdiaz82",
            "num_likes": 15,
            "num_retweets": 7,
            "num_replies": 1
        },
        "1108987491397353472": {
            "id": "1108987491397353472",
            "text": "This is how you can create an embedded optimizer in #rust using the #matlab interface of #OptimizationEngine (https://alphaville.github.io/optimization-engine/\u00a0\u2026) (watch the video) @rustlangpic.twitter.com/Sgbk8x0Pcb",
            "username": "isToxic",
            "num_likes": 11,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1109005899891437568": {
            "id": "1109005899891437568",
            "text": "Next episode of 5 Minute Rust is live! This time we change an imperative piece of @rustlang to a more functional style:https://www.youtube.com/watch?v=NBBIu8JkxGs\u00a0\u2026",
            "username": "ryan_levick",
            "num_likes": 74,
            "num_retweets": 19,
            "num_replies": 1
        },
        "1108808854668804097": {
            "id": "1108808854668804097",
            "text": "I just released my first official #Rust crate - a quick utility that replaces `tail -F /path/to/files/*`. It's called \"lw\" from \"Log-Watcher\" and you can install it with: `cargo install lw``. @rustlang\n\nps. It will NOT work on Linux or Windows since it uses #Kqueue :)",
            "username": "dmilith",
            "num_likes": 17,
            "num_retweets": 3,
            "num_replies": 4
        },
        "1108854445578711040": {
            "id": "1108854445578711040",
            "text": "The maintenance has been completed, and http://crates.io\u00a0 is fully operationalhttps://twitter.com/cratesiostatus/status/1108850807624163331\u00a0\u2026",
            "username": "cratesiostatus",
            "num_likes": 14,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1108850807624163331": {
            "id": "1108850807624163331",
            "text": "http://crates.io\u00a0 is being placed in read-only mode for database maintenance. We expect this to take no more than 30 minutes.http://status.crates.io/incidents/hvhbvbyzy7rd\u00a0\u2026",
            "username": "cratesiostatus",
            "num_likes": 12,
            "num_retweets": 2,
            "num_replies": 2
        },
        "1108805890990395392": {
            "id": "1108805890990395392",
            "text": "Would anyone be interested in being part of a #rustlang database WG?",
            "username": "spacekookie",
            "num_likes": 112,
            "num_retweets": 26,
            "num_replies": 50
        },
        "1108476227587919872": {
            "id": "1108476227587919872",
            "text": "IntelliJRust improved completion in action! It even picks up names out of the scope. The corresponding module gets automatically imported as soon as completion suggestion is applied. #rustlangpic.twitter.com/I27ZiasWWS",
            "username": "intellijrust",
            "num_likes": 160,
            "num_retweets": 35,
            "num_replies": 2
        },
        "1108518033067335680": {
            "id": "1108518033067335680",
            "text": "Finished #emoji commission of Ferris the Rustacean for shello at octodon dot social on Mastodon! #rust #rustlangpic.twitter.com/7DQoMx0qlL",
            "username": "Dzuque",
            "num_likes": 65,
            "num_retweets": 12,
            "num_replies": 7
        },
        "1108549045864271872": {
            "id": "1108549045864271872",
            "text": "Sugerencias sobre #WebAssembly y @rustlang por @ivandevp pic.twitter.com/MJZnzpCuXo",
            "username": "rustlang_mx",
            "num_likes": 39,
            "num_retweets": 8,
            "num_replies": 0
        },
        "1108560948212588544": {
            "id": "1108560948212588544",
            "text": "Tomorrow is the day of our inaugural @rustlang GDC Meet/Greet! 5pm in the lobby of the Grand Hyatt - depending on how many people show up we might move to the bar right upstairs. If you come and don\u2019t see handsome, strangely happy people in the lobby come up one floor!",
            "username": "AndreaPessino",
            "num_likes": 61,
            "num_retweets": 9,
            "num_replies": 2
        },
        "1108505075817857024": {
            "id": "1108505075817857024",
            "text": "Hi. This is the official twitter handle for the CLI Working Group in @rustlang. Follow me to know more about CLIs, the keep track of the different CLI crates including clap, assert_fs, and the other cool stuff we do ",
            "username": "CliRust",
            "num_likes": 64,
            "num_retweets": 18,
            "num_replies": 1
        },
        "1108510996052627456": {
            "id": "1108510996052627456",
            "text": "Rust: The Hard Parts - Part 1: References, Borrowing, and Ownership\n\ncc:@ThisWeekInRust @rustlanghttps://naftuli.wtf/2019/03/20/rust-the-hard-parts/\u00a0\u2026",
            "username": "naftulikay",
            "num_likes": 166,
            "num_retweets": 44,
            "num_replies": 1
        },
        "1108514478273060871": {
            "id": "1108514478273060871",
            "text": "Talk (slides) de \u201c\u00bfPor qu\u00e9 @rustlang? \u201c ayer en @AgileEcuador =>https://speakerdeck.com/androbtech/por-que-rust\u00a0\u2026",
            "username": "androbtech",
            "num_likes": 12,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1108543482245844992": {
            "id": "1108543482245844992",
            "text": "WASM with @rustlang in @rustlang_mx meetup  pic.twitter.com/Q1F8jzYxLV",
            "username": "phonnz",
            "num_likes": 10,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1108444934758195205": {
            "id": "1108444934758195205",
            "text": "I put some thoughts out today again....\n\n\"How to combat JavaScript fatigue with Rust\"\nMedium: https://medium.com/@gruberbastian/how-to-combat-javascript-fatigue-with-rust-5de86d2e46d6\u00a0\u2026\ndevto: https://dev.to/gruberb/how-to-combat-javascript-fatigue-with-rust-2o5l\u00a0\u2026\n\nI cover why you personally should look into @rustlang and try to integrate it in your work environment.",
            "username": "byteadventures",
            "num_likes": 88,
            "num_retweets": 24,
            "num_replies": 4
        },
        "1107827755884990464": {
            "id": "1107827755884990464",
            "text": " published a new version of serverless rust, a @goserverless plugin for #rustlang\nnow with out of the box support for invoking rust lambdas  locally for easy and fast local integration testing  https://github.com/softprops/serverless-rust/blob/master/CHANGELOG.md#-032\u00a0\u2026pic.twitter.com/exLEe6Zrku",
            "username": "softprops",
            "num_likes": 23,
            "num_retweets": 7,
            "num_replies": 1
        },
        "1107839518491578368": {
            "id": "1107839518491578368",
            "text": "OK who wants to yell about #rustlang stuff next month at our swanky new location in Denver? First-time speakers welcome and will be rewarded with home-baked cookies from @DebugStevenhttps://www.meetup.com/Rust-Boulder-Denver/events/259124388/\u00a0\u2026",
            "username": "focusaurus",
            "num_likes": 7,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1108212388229234688": {
            "id": "1108212388229234688",
            "text": "hey #rustlang folks: im writing some algorithms for rendering 3d fractals. id like them to be generic over the numeric type (f32, f64, \u2026). is there a way to get a literal into a T: Float that\u2019s easier than `let two = T::from(2).unwrap()`?",
            "username": "16kbps",
            "num_likes": 6,
            "num_retweets": 2,
            "num_replies": 2
        },
        "1108373280979849216": {
            "id": "1108373280979849216",
            "text": "What's the best effort LLVM abstraction that's currently available as a Rust crate? Looking to use ORC and don't really want to roll my own and use llvm-sys #rustlang",
            "username": "deathgreps",
            "num_likes": 5,
            "num_retweets": 3,
            "num_replies": 3
        },
        "1108410754552811520": {
            "id": "1108410754552811520",
            "text": "Just published a Rust  Crate for validating NUBAN #rustlang #nubanhttps://github.com/timolinn/nuban\u00a0",
            "username": "timolinn_",
            "num_likes": 10,
            "num_retweets": 4,
            "num_replies": 1
        },
        "1108419430596382721": {
            "id": "1108419430596382721",
            "text": "Pssst. Did you know that Godbolt supports WebAssembly inspection, with mapping back to the original code just like with native assembly? https://rust.godbolt.org/z/PZqG56\u00a0 #rustlang #wasmpic.twitter.com/F9CLp8Aerh",
            "username": "RReverser",
            "num_likes": 130,
            "num_retweets": 44,
            "num_replies": 2
        },
        "1108420056621424643": {
            "id": "1108420056621424643",
            "text": "Time for the update! Exhaustiveness inspection, improved completion, external linters and a bunch of quality of life additions! Check out the changelog and welcome to try it out. https://intellij-rust.github.io/2019/03/18/changelog-94.html\u00a0\u2026 #rustlangpic.twitter.com/uiQucN6gSq",
            "username": "intellijrust",
            "num_likes": 69,
            "num_retweets": 13,
            "num_replies": 0
        },
        "1108426116035985415": {
            "id": "1108426116035985415",
            "text": "Any #rustlang friends know how I'd go about doing something like this:\n\nhttps://github.com/itchio/capsule/blob/c2b2fc67594fafff75efcbbe088de99f57aaf083/legacy/libcapsule/src/macos/interpose.h\u00a0\u2026\n\n? /cc @gcouprie",
            "username": "fasterthanlime",
            "num_likes": 4,
            "num_retweets": 2,
            "num_replies": 2
        },
        "1108273560555061248": {
            "id": "1108273560555061248",
            "text": "Drill 0.5.0 release is here!\n\nDrill is a HTTP load testing application written in @rustlang.\n\nAdded support for ramp-up's, new range options, more HTTP methods, and better stats!\n\nhttps://github.com/fcsonline/drill\u00a0\nhttps://asciinema.org/a/164615?autoplay=1\u00a0\u2026\n\nThanks to all contributors!  #load #http #jmeter",
            "username": "openfcsonline",
            "num_likes": 87,
            "num_retweets": 24,
            "num_replies": 1
        },
        "1108344655698116609": {
            "id": "1108344655698116609",
            "text": "Hey!\n\nHere you can find a tiny message broker I wrote while my arm was ... broken \n\nIt is written in @rustlang (in a dirty way) with #zeromq\n\nIt was fun to write  https://github.com/fabienjuif/tiny-broke\u00a0\u2026\n\nDon't use it at home! I just wanted to share it!!",
            "username": "fabienjuif",
            "num_likes": 16,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1108357667339292672": {
            "id": "1108357667339292672",
            "text": "Vorner wrote a benchmark https://vorner.github.io/async-bench.html\u00a0\u2026",
            "username": "withoutboats",
            "num_likes": 13,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1108357216099319808": {
            "id": "1108357216099319808",
            "text": "I\u2019ll start: this blog post has a graph https://aturon.github.io/blog/2016/08/11/futures/\u00a0\u2026",
            "username": "withoutboats",
            "num_likes": 10,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1108356843842215938": {
            "id": "1108356843842215938",
            "text": "Rust twitter do me a favor: link me to every public benchmark of async IO related things involving Rust. Rust vs other languages, different Rust implementations. Measuring something connected to async IO",
            "username": "withoutboats",
            "num_likes": 68,
            "num_retweets": 18,
            "num_replies": 5
        },
        "1108359673420357633": {
            "id": "1108359673420357633",
            "text": "\u0412\u0441\u0435\u0445 \u0437\u043e\u0432\u0435\u043c \u043d\u0430 \u043f\u0438\u0442\u0435\u0440\u0441\u043a\u0438\u0439 #ITGM14 \u0432 \u044d\u0442\u0443 \u0441\u0443\u0431\u0431\u043e\u0442\u0443!\n\n\u041e\u0442 Rust \u0441\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u0430 \u0431\u0443\u0434\u0435\u0442 \u0441\u0442\u0435\u043d\u0434 \u0438 \u0442\u0440\u0438 \u0434\u043e\u043a\u043b\u0430\u0434\u0430:\n\n* \u0424\u0435\u0434\u043e\u0440 \u041b\u043e\u0433\u0430\u0447\u0435\u0432: \"Rust \u0438 WASM\"\n* \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041c\u0435\u0449\u0435\u0440\u044f\u043a\u043e\u0432: \"\u041c\u0430\u043a\u0440\u043e\u0441\u044b \u0432 Rust\"\n* \u0410\u043d\u0434\u0440\u0435\u0439 \u0421\u0442\u0440\u043e\u043a\u043e\u0432, \u041c\u0438\u0445\u0430\u0438\u043b \u0427\u0435\u0448\u043a\u043e\u0432: \"Embedded Rust\"\n\nhttp://meetup.com/spbrust/events/259926829\u00a0\u2026\n#RustLang #PiterUnited",
            "username": "ozkriff_ru",
            "num_likes": 16,
            "num_retweets": 4,
            "num_replies": 3
        },
        "1108040629534248961": {
            "id": "1108040629534248961",
            "text": "TBH: I had expected the beginner workshop to sell out first, but it seems interest in embedded @rustlang is... professional and advanced?https://twitter.com/OxidizeConf/status/1108039765666996225\u00a0\u2026",
            "username": "Argorak",
            "num_likes": 22,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1107933188612124672": {
            "id": "1107933188612124672",
            "text": "My second article \"Web Programming in @rustlang \u2014 02/x: Deploy your first App\" is now also on http://dev.to\u00a0:https://dev.to/gruberb/web-programming-in-rust-02x-deploy-your-first-app-1k05\u00a0\u2026",
            "username": "byteadventures",
            "num_likes": 88,
            "num_retweets": 20,
            "num_replies": 1
        },
        "1107952338004860928": {
            "id": "1107952338004860928",
            "text": "Next Cambridge @rustlang meetup is on its way, join us to learn more about the concurrency model in Rust in this hands on Workshop.https://www.meetup.com/Cambridge-Rust-Meetup/events/259845244/\u00a0\u2026",
            "username": "IstarEldritch",
            "num_likes": 16,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1107685658414510081": {
            "id": "1107685658414510081",
            "text": "One of the things I love about the @rustlang community is the many examples on getting started from the book to even this like this Rust Cookbook covering many day to day examples https://rust-lang-nursery.github.io/rust-cookbook/\u00a0",
            "username": "mattpodwysocki",
            "num_likes": 28,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1107693455797563392": {
            "id": "1107693455797563392",
            "text": "There's a ton of work to be done and I'm very excited about it: announcing the @rustlang Governance Working Group.https://internals.rust-lang.org/t/governance-working-group-announcement/9637/\u00a0\u2026",
            "username": "Argorak",
            "num_likes": 60,
            "num_retweets": 13,
            "num_replies": 3
        },
        "1107660519069097986": {
            "id": "1107660519069097986",
            "text": "*cough* Hello? Is this on? We might have some pretty exciting news very soon...",
            "username": "RustBridge",
            "num_likes": 68,
            "num_retweets": 7,
            "num_replies": 2
        },
        "1107655428022906880": {
            "id": "1107655428022906880",
            "text": "Here it is \n\nPart 2 of x of how to do web programming in @rustlang, especially for @nodejs developers. \"Rust for the Web\u200a\u2014\u200a02/x: Deploy your first App\"https://medium.com/@gruberbastian/rust-for-the-web-02-x-deploy-your-first-app-51d1ed69cbe3\u00a0\u2026",
            "username": "byteadventures",
            "num_likes": 92,
            "num_retweets": 24,
            "num_replies": 1
        },
        "1107662063168614400": {
            "id": "1107662063168614400",
            "text": "@rustwasm I created a real time pitch detector to experiment with @rustlang and #webassembly. It was a fun and surprisingly smooth experience!\nLive demo: https://alesgenova.github.io/pitch-detection-app/\u00a0\u2026\nLibrary source: https://github.com/alesgenova/pitch-detection\u00a0\u2026pic.twitter.com/WAnx1Q3YQP",
            "username": "alesgeno",
            "num_likes": 65,
            "num_retweets": 20,
            "num_replies": 1
        },
        "1107676602576588801": {
            "id": "1107676602576588801",
            "text": "Anyone wants to write a book on testing @rustlang...",
            "username": "Argorak",
            "num_likes": 39,
            "num_retweets": 6,
            "num_replies": 6
        },
        "1107350612079980549": {
            "id": "1107350612079980549",
            "text": " My newest #rustlang project \n\nhmmm: Hidden Markov Models in Rust \u2014 https://paulkernfeld.com/2019/03/17/hmmm.html\u00a0\u2026",
            "username": "occupy_paul_st",
            "num_likes": 39,
            "num_retweets": 9,
            "num_replies": 0
        },
        "1107557935352373248": {
            "id": "1107557935352373248",
            "text": "cargo-instruments, https://github.com/cmyr/cargo-instruments\u00a0\u2026.\n\nEasily generate Instruments traces for your Rust crate.\n\nInstruments is the `perf` of macOS.\n\n#rustlang #profiling #macospic.twitter.com/CpKLKpzHg6",
            "username": "mnt_io",
            "num_likes": 81,
            "num_retweets": 17,
            "num_replies": 2
        },
        "1107571105026453504": {
            "id": "1107571105026453504",
            "text": "I wrote an article about using the svd2rust peripheral API's to program #embedded hardware interrupts with @rustlang and @rustembedded:https://flowdsp.io/blog/stm32f3-01-interrupts/\u00a0\u2026",
            "username": "antvangelder",
            "num_likes": 45,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1107522697091661825": {
            "id": "1107522697091661825",
            "text": "I'm presenting at !!Con this year, on how to build your own virtual machine with /dev/kvm and @rustlang! @bangbangcon",
            "username": "josh_triplett",
            "num_likes": 153,
            "num_retweets": 18,
            "num_replies": 2
        },
        "1107612070411993089": {
            "id": "1107612070411993089",
            "text": "My article on @rustlang and JavaScript interop using wasm-bindgen is live!https://opensource.com/article/19/3/calling-rust-javascript\u00a0\u2026",
            "username": "ryan_levick",
            "num_likes": 40,
            "num_retweets": 9,
            "num_replies": 0
        },
        "1107323831889338368": {
            "id": "1107323831889338368",
            "text": "Hey @rustlang there is the need for a simple PR on serde. I proposed it, but I don't have the time myself. Anybody, feel free to jump on it: https://github.com/serde-rs/serde/issues/1496\u00a0\u2026 ",
            "username": "siscia_",
            "num_likes": 8,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1107010056896180224": {
            "id": "1107010056896180224",
            "text": "Is there any example out there of using Pin to make a simple self-referential struct? #rustlang Cc @ManishEarth",
            "username": "khuey_",
            "num_likes": 7,
            "num_retweets": 2,
            "num_replies": 3
        },
        "1107041397889212418": {
            "id": "1107041397889212418",
            "text": "Hi, I published a new version of typed-html with the previously discussed support for the Dodrio renderer. https://github.com/bodil/typed-html/releases/tag/0.2.0\u00a0\u2026 Highlights:pic.twitter.com/1S1XGOcqPH",
            "username": "bodil",
            "num_likes": 232,
            "num_retweets": 43,
            "num_replies": 7
        },
        "1107094744402817024": {
            "id": "1107094744402817024",
            "text": "Just released Crabsformer  v2019.3.10 (early-preview) with support for {Add,Sub,Mul}Assign traits.\n\nCargo: https://crates.io/crates/crabsformer\u00a0\u2026\nDocs: https://docs.rs/crabsformer/2019.3.11/crabsformer/\u00a0\u2026 @rustlangpic.twitter.com/GKvs0M1T3h",
            "username": "bayualsyah",
            "num_likes": 20,
            "num_retweets": 4,
            "num_replies": 1
        },
        "1107034633093464064": {
            "id": "1107034633093464064",
            "text": "Second part of our live-coding quest to implement a user-land TCP stack in @rustlang is now up at https://www.youtube.com/watch?v=OCpt1I0MWXE\u00a0\u2026! This time we focused on the crate's external interface, and in particular how we could get as close as possible to std::net::Tcp* and std::io::Read/Write.",
            "username": "Jonhoo",
            "num_likes": 84,
            "num_retweets": 10,
            "num_replies": 2
        },
        "1107036084805005313": {
            "id": "1107036084805005313",
            "text": "Do you need HTML templates in a @rustlang project?  I just released version 0.6.2 or Ructe, Rust Compiled Templates, in which I hope to have improved documentation.  Feedback is appreciated! https://docs.rs/ructe/0.6.2/ructe/\u00a0\u2026",
            "username": "rasmus_kaj",
            "num_likes": 29,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1107003623723032576": {
            "id": "1107003623723032576",
            "text": "Finally published my first @code extension! A simple little thing to add syntax highlighting to @rustlang object notation. Check it out: https://marketplace.visualstudio.com/items?itemName=a5huynh.vscode-ron#overview\u00a0\u2026",
            "username": "a5huynh",
            "num_likes": 23,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1106945149735702530": {
            "id": "1106945149735702530",
            "text": "Published a simple client crate that wraps around OpenSSL PSK negotiation, very keen to get feedback on the code and suggestions for improvement! https://crates.io/crates/psk-client\u00a0\u2026 @rustlang #rust",
            "username": "joe_brailsford",
            "num_likes": 13,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1106963192813625346": {
            "id": "1106963192813625346",
            "text": "I wrote a thing about high-performance machine learning in @rustlang!\n\nHonestly I found it surprising how few resources exist regarding SIMD, BLAS, and Lapack, considering both their history and how critical they are to ML\n\nhttps://www.erikpartridge.com/2019-03/rust-ml-simd-blas-lapack\u00a0\u2026",
            "username": "erikinapeartree",
            "num_likes": 93,
            "num_retweets": 17,
            "num_replies": 3
        },
        "1106879872243249153": {
            "id": "1106879872243249153",
            "text": "Over the past few days I worked a bit on the @godotengine @rustlang bindings. \n\nInstead of a DSL you can now use a derive- and procedural-macro to expose structs and methods to Godot. \n#GodotEngine #rust #gamedevpic.twitter.com/FMU1sUnloa",
            "username": "karroffel",
            "num_likes": 166,
            "num_retweets": 41,
            "num_replies": 6
        },
        "1106624135680221185": {
            "id": "1106624135680221185",
            "text": "You have time until March 25 to submit an abstract to the first edition of RustLab that will be held in #Florence on June, Friday 28 and Saturday 29, 2019.\n#callforproposal #cfp #rustlab #rust #rustlang @rustlanghttps://www.papercall.io/rustlab2019\u00a0",
            "username": "rustlab_conf",
            "num_likes": 10,
            "num_retweets": 5,
            "num_replies": 1
        },
        "1106636985471549443": {
            "id": "1106636985471549443",
            "text": " crates 0.4.0 is out! Now all fetch operations are over github api ( due to http://crates.io\u00a0  policies ). Be careful or to many requests can get limit exceeded. @code @rustlang\nhttps://marketplace.visualstudio.com/items?itemName=serayuzgur.crates\u00a0\u2026",
            "username": "serayuzgur",
            "num_likes": 27,
            "num_retweets": 5,
            "num_replies": 1
        },
        "1106652126346993665": {
            "id": "1106652126346993665",
            "text": "Hey Twitter, do you know somebody in Oceania doing @rustlang or @golang who're also giving talks at tech conferences? #followerpower",
            "username": "m_holtermann",
            "num_likes": 9,
            "num_retweets": 5,
            "num_replies": 5
        },
        "1106681368136826880": {
            "id": "1106681368136826880",
            "text": "We are excited to announce Colorado Gold Rust, a @rustlang conference in Denver, Colorado happening September 20th & 21st, 2019. We hope y\u2019all are ready for some Rowdy Rust in the Wild West!\n\nhttps://cogoldrust.com/\u00a0pic.twitter.com/8hH1PRxccT",
            "username": "COGoldRust",
            "num_likes": 94,
            "num_retweets": 38,
            "num_replies": 4
        },
        "1106575249171247114": {
            "id": "1106575249171247114",
            "text": "now at around 600-1000 req/s - and survived first \"breaking-news\" event.\nadding redis in front, and moving mongo from single instance to cluster, reduced the cpu even more :D - avg. response time: 3-7ms  - no mem leak, no data race, thx @rustlang,  using rocket-rs btw",
            "username": "hjanuschka",
            "num_likes": 46,
            "num_retweets": 8,
            "num_replies": 2
        },
        "1106480443342417920": {
            "id": "1106480443342417920",
            "text": "Well that's embarrassing, the no_std feature I had in https://crates.io/crates/trait_enum\u00a0\u2026 wasn't actually working for a couple of months. I released 0.3.0, can someone give it a spin and see if it works for them? @rustlang",
            "username": "victorkoenders",
            "num_likes": 7,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1106516979219869698": {
            "id": "1106516979219869698",
            "text": "@AzureFunctions support for @rustlang is coming... https://twitter.com/peterhuene/status/1094402883301195777\u00a0\u2026",
            "username": "manuel_patrone",
            "num_likes": 40,
            "num_retweets": 7,
            "num_replies": 4
        },
        "1106358161420763136": {
            "id": "1106358161420763136",
            "text": "And, by good, I mean something that beginners could be referred to as a practical guide on when and why to use these with PhantomData, without having to go into the theory.",
            "username": "RReverser",
            "num_likes": 24,
            "num_retweets": 2,
            "num_replies": 5
        },
        "1106357847695257602": {
            "id": "1106357847695257602",
            "text": "So far it looks like there are two types of @rustlang developers:\n1. Those who don't understand covariance / contravariance.\n2. Those who literally have PhDs in programming languages theory.\n\nDoes *anyone* have a good, practical explainer for both terms from Rust point of view?",
            "username": "RReverser",
            "num_likes": 232,
            "num_retweets": 24,
            "num_replies": 16
        },
        "1106303917455896576": {
            "id": "1106303917455896576",
            "text": "After a long wait and a great effort by @marcusklaas and others, pulldown-cmark 0.3.0 is released! Read about it at https://fullyfaithful.eu/pulldown-cmark/\u00a0",
            "username": "raphlinus",
            "num_likes": 35,
            "num_retweets": 11,
            "num_replies": 1
        },
        "1106273871307509760": {
            "id": "1106273871307509760",
            "text": "Almost time! Next week, Thu, 21 at 5 pm, in the lobby of the Grand Hyatt in SF is the first ever #GDC GameDev Rust @rustlang meet/chat! 40 people now planning to attend \u2013 so it\u2019ll probably be chaos  but will be fun. Anyone interested is welcome!\n\nhttps://twitter.com/AndreaPessino/lists/rustmeetatgdc\u00a0\u2026",
            "username": "AndreaPessino",
            "num_likes": 32,
            "num_retweets": 5,
            "num_replies": 1
        },
        "1106298635258490880": {
            "id": "1106298635258490880",
            "text": "Does anyone know about or want to learn about color blending functions? The @rustlang vek crate could use your contribution! This is a great opportunity to write some Rust if you've been looking for a reason!https://github.com/yoanlcq/vek/issues/22\u00a0\u2026",
            "username": "Sunjay03",
            "num_likes": 20,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1106238920046444545": {
            "id": "1106238920046444545",
            "text": "Excited to share something I've been working on: a fast, bump-allocated virtual dom library built with Rust and Wasm :)https://hacks.mozilla.org/2019/03/fast-bump-allocated-virtual-doms-with-rust-and-wasm/\u00a0\u2026",
            "username": "fitzgen",
            "num_likes": 419,
            "num_retweets": 123,
            "num_replies": 10
        },
        "1106242114315276289": {
            "id": "1106242114315276289",
            "text": "Dodrio: A fast virtual DOM library written in Rust->wasm \n\nMy @ReactEurope 2017 talk was about how this was possible (based on convos with @luke_wagner)\n\nNow the amazing @fitzgen & co. have made it a reality! https://hacks.mozilla.org/2019/03/fast-bump-allocated-virtual-doms-with-rust-and-wasm/\u00a0\u2026",
            "username": "linclark",
            "num_likes": 461,
            "num_retweets": 120,
            "num_replies": 11
        },
        "1106228501500383237": {
            "id": "1106228501500383237",
            "text": "We're introducing the embedded #OptimizationEngine (OpEn) https://buff.ly/2u1dz7X\u00a0\u2026 written in pure #rust. OpEn is Fast, Embeddable and Accurate.\n\n@rustlang @rustembeddedpic.twitter.com/Sb0VhsWrdI",
            "username": "isToxic",
            "num_likes": 17,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1106261110775115776": {
            "id": "1106261110775115776",
            "text": "Fortanix, one of the exibitors on #RSAC2019, which was held last week in San Francisco, made #RustEDP, its development platform for secure enclaves available, free, and open source. The platform is based on the @rustlang.\n#RuntimeEncryption #RustEDPhttps://www.lemagit.fr/actualites/252459193/Fortanix-veut-faciliter-le-developpement-dapplications-pour-Intel-SGX\u00a0\u2026",
            "username": "fortanix",
            "num_likes": 4,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1105282494973255680": {
            "id": "1105282494973255680",
            "text": "I started getting requests for the next \"Implementing TCP in @rustlang\" immediately after I posted the first one, so no time to waste! Let's do part 2/n this Saturday at 4pm UTC (noon EST) \u2014 https://everytimezone.com/s/a539fecc\u00a0. Come fiddle with one of the Internet's core protocols with me :D",
            "username": "Jonhoo",
            "num_likes": 65,
            "num_retweets": 8,
            "num_replies": 1
        },
        "1106263443739475969": {
            "id": "1106263443739475969",
            "text": "I needed a competent graph library for @purple_protocol so I wrote one from scratch in the past few days. Today I open sourced it for @rustlang. Looking for contributors to help continue its development!\nhttps://crates.io/crates/graphlib\u00a0",
            "username": "octavonce",
            "num_likes": 26,
            "num_retweets": 8,
            "num_replies": 2
        },
        "1106116863044534272": {
            "id": "1106116863044534272",
            "text": "The new episode of \"Scientific computing: a #rustlang adventure\" is out: https://www.lpalmieri.com/posts/2019-03-12-scientific-computing-a-rust-adventure-part-1-zero-cost-abstractions/\u00a0\u2026\nThis time we touch zero-cost abstractions, using generics and traits to generalise what we showed for vectors in the opening post :)",
            "username": "algo_luca",
            "num_likes": 36,
            "num_retweets": 12,
            "num_replies": 1
        },
        "1106078295047761920": {
            "id": "1106078295047761920",
            "text": "@ABarroso @rustlang how do I get involved with the rust community here in Nigeria. Dont mind starting one if need be. Currently an organizer at Gdgbenin.",
            "username": "Orighoj1",
            "num_likes": 10,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1106088327126634496": {
            "id": "1106088327126634496",
            "text": "#OptimizationEngine (OpEn) is a solver for nonconvex optimization problems which can be interfaced using UDP Sockets https://buff.ly/2u4ZPJg\u00a0 --- it can be consumed from any programming language. Written 100% in #rust.pic.twitter.com/mqJxTdUOi4",
            "username": "isToxic",
            "num_likes": 22,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1105962586808320000": {
            "id": "1105962586808320000",
            "text": "now it actually *is* tonight --- SF Rust folks, come learn about the newly-released tokio-trace-core 0.1!https://twitter.com/BuoyantIO/status/1105525579703414784\u00a0\u2026",
            "username": "mycoliza",
            "num_likes": 34,
            "num_retweets": 5,
            "num_replies": 2
        },
        "1105910686956294146": {
            "id": "1105910686956294146",
            "text": " Blog::next()\n\n\"Implementing a static stack usage analysis tool\"\n\nIf you have seen my recent tweets about `cargo-call-stack` and have been wondering how it works this blog post is for you!https://blog.japaric.io/stack-analysis/\u00a0",
            "username": "japaricious",
            "num_likes": 39,
            "num_retweets": 12,
            "num_replies": 0
        },
        "1105944119744987136": {
            "id": "1105944119744987136",
            "text": "We've made some changes to how index updates happen in http://crates.io\u00a0. If you're publishing multiple crates from a script, you may need to make changes. See https://internals.rust-lang.org/t/changes-to-how-crates-io-handles-index-updates/9608\u00a0\u2026 for details.",
            "username": "cratesiostatus",
            "num_likes": 16,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1105873620809760768": {
            "id": "1105873620809760768",
            "text": "Just split cargo-flamegraph into 2 tools:\ncargo-flamegraph: same great #rustlang-aware profiling\nflamegraph: now the easiest way to generate flamegraphs for anything else without perl or pipes <3\n\nAlso added a bit of a profiling guide in the README :]https://github.com/ferrous-systems/cargo-flamegraph\u00a0\u2026",
            "username": "sadisticsystems",
            "num_likes": 62,
            "num_retweets": 18,
            "num_replies": 0
        },
        "1105941816933842946": {
            "id": "1105941816933842946",
            "text": "Thank you @moretea_nl for organizing my next talk about  parallel programming with @rustlanghttps://www.meetup.com/Rust-Amsterdam/events/259729119/\u00a0\u2026",
            "username": "dns2utf8",
            "num_likes": 8,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1105701881509175296": {
            "id": "1105701881509175296",
            "text": "A new release of Rusoto, an #AWS SDK for #rustlang, is almost done cooking! Adding a new region, fixing some bugs, extending the rusoto_mock crate, adding four services and the ability to source credentials from an external process, like official SDKs! ",
            "username": "Motoblag",
            "num_likes": 66,
            "num_retweets": 15,
            "num_replies": 1
        },
        "1105846993488957440": {
            "id": "1105846993488957440",
            "text": "@OfferZen Wondering if anyone has the data on employers using @rustlang in South Africa. Must say big ups on being able to filter by tech stack. Additionally any articles on employment by tech stack? #offerzen #techsouthafrica #siliconcape #rustlang #tech",
            "username": "crypticg00se",
            "num_likes": 4,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1105768615545004034": {
            "id": "1105768615545004034",
            "text": "New blog post: A Coding Retreat and Getting Embedded @rustlang Running on a TI SensorTag\n\nhttps://www.wezm.net/technical/2019/03/sensortag-embedded-rust-coding-retreat/\u00a0\u2026pic.twitter.com/xxwtdEZM9j",
            "username": "wezm",
            "num_likes": 49,
            "num_retweets": 11,
            "num_replies": 1
        },
        "1105784218393694208": {
            "id": "1105784218393694208",
            "text": "TIL you can specify precision in a variable inside format strings in @rustlangpic.twitter.com/Fd3GjFDYZt",
            "username": "DPC_22",
            "num_likes": 55,
            "num_retweets": 3,
            "num_replies": 2
        },
        "1105796558782689281": {
            "id": "1105796558782689281",
            "text": "I can't figure out how to handle Paths without resorting to nesting hell in this @rustlang snippet:https://pastebin.com/jP6bwqe7\u00a0",
            "username": "acruiz",
            "num_likes": 3,
            "num_retweets": 1,
            "num_replies": 4
        },
        "1105806959301873665": {
            "id": "1105806959301873665",
            "text": "We\u2019re going to have a great meetup next week with a talk about writing ray tracers in Rust! Hope to see you there http://meetu.ps/e/GrX0G/2Rt07/a\u00a0 @rustlang @ThisWeekInRust",
            "username": "rust_atx",
            "num_likes": 24,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1105574155024384000": {
            "id": "1105574155024384000",
            "text": "Read 'Remote Development and Debugging of #Rust with CLion' written by @mzavershynskyi \n\nHere \u2192 https://near.ai/a4b23\u00a0 [BLOG]\n\n#RustLang #FutureIsNEARpic.twitter.com/ENLYaegFN1",
            "username": "NEARProtocol",
            "num_likes": 28,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1105572516037312513": {
            "id": "1105572516037312513",
            "text": "Any #Cambridge @rustlang enthusiasts out there? Let us know what you'd like to see at the next @Meetup by filling in our short survey at https://rubenpaz215931.typeform.com/to/PgqCu8\u00a0. Thanks from me and organiser @IstarEldritch! Pic maybe related ;)pic.twitter.com/LS54NQO5Rw",
            "username": "jam_waffles",
            "num_likes": 18,
            "num_retweets": 5,
            "num_replies": 1
        },
        "1105529920719998977": {
            "id": "1105529920719998977",
            "text": " Let's Build Gloo Together \n\nThis is a call for participation on Gloo, the modular toolkit for building Rust and Wasm libraries and apps that we planned in our 2019 roadmap https://rustwasm.github.io/2019/03/12/lets-build-gloo-together.html\u00a0\u2026",
            "username": "rustwasm",
            "num_likes": 133,
            "num_retweets": 41,
            "num_replies": 1
        },
        "1105535924820209664": {
            "id": "1105535924820209664",
            "text": "Really looking forward to working on security + @rustlang things together! The best part of my job is working with experts in fields I'm not an expert in and finding ways to collaborate. https://twitter.com/shehackspurple/status/1105534959475789824\u00a0\u2026",
            "username": "ryan_levick",
            "num_likes": 26,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1105414352264445953": {
            "id": "1105414352264445953",
            "text": "cargo flamegraph now supports macs, #illumos and the BSDs! Thanks to @heinz_gies for cranking out dtrace stack collapse functionality in the Inferno #rustlang flamegraph generator, and to @Jonhoo for support and getting it released quickly!https://github.com/ferrous-systems/cargo-flamegraph\u00a0\u2026",
            "username": "sadisticsystems",
            "num_likes": 56,
            "num_retweets": 21,
            "num_replies": 3
        },
        "1105491151321268225": {
            "id": "1105491151321268225",
            "text": "#rustlang Twitter, what are some of your favorite audio/sound/music rust projects?",
            "username": "devilaether",
            "num_likes": 19,
            "num_retweets": 4,
            "num_replies": 7
        },
        "1105496183349366784": {
            "id": "1105496183349366784",
            "text": "I could really use some help mentoring others during my workshop at @RustLatamConf! If you're interested, please reach out! No game dev experience required! @rustlang #rustlanghttps://twitter.com/Sunjay03/status/1105494829339983873\u00a0\u2026",
            "username": "Sunjay03",
            "num_likes": 10,
            "num_retweets": 5,
            "num_replies": 2
        },
        "1105455019959058433": {
            "id": "1105455019959058433",
            "text": "Got the @Adafruit NeoTrellis M4\u2019s keypad working via @rustembedded using the \u2018keypad\u2019 crate https://github.com/atsamd-rs/atsamd/pull/43\u00a0\u2026pic.twitter.com/OwXQLblcgd",
            "username": "bascule",
            "num_likes": 39,
            "num_retweets": 8,
            "num_replies": 0
        },
        "1105509520959246341": {
            "id": "1105509520959246341",
            "text": "In the first of three blog posts helping developers build secret contracts with our upcoming Discovery release, @apalepu23 walks you through a standalone Rust program, environment setup, and why @rustlang is a preferred and powerful choice of language!https://forum.enigma.co/t/getting-started-with-discovery-the-rust-programming-language/651\u00a0\u2026",
            "username": "EnigmaMPC",
            "num_likes": 63,
            "num_retweets": 28,
            "num_replies": 1
        },
        "1105508117532426240": {
            "id": "1105508117532426240",
            "text": "Hanging out in the #UEFI forum webinar this morning. Glad to see @rustlang on the list of ways we can improve security in the firmware world. The @tianocore community will keep moving this effort forward. @josh_triplett @jessfrazpic.twitter.com/LYzP1ql8hZ",
            "username": "stephano",
            "num_likes": 32,
            "num_retweets": 4,
            "num_replies": 2
        },
        "1105489623365632000": {
            "id": "1105489623365632000",
            "text": "We're introducing the embedded Optimization Engine (OpEn) https://alphaville.github.io/optimization-engine/\u00a0\u2026 written in #Rust @rustlang @rustembedded. OpEn is Fast, Embeddable and Accurate.pic.twitter.com/IvDhri9UaD",
            "username": "isToxic",
            "num_likes": 38,
            "num_retweets": 9,
            "num_replies": 0
        },
        "1105485980910395397": {
            "id": "1105485980910395397",
            "text": "Going to go live in 50 minutes for some @rustlang streaming!https://www.twitch.tv/ryanlevick\u00a0",
            "username": "ryan_levick",
            "num_likes": 21,
            "num_retweets": 8,
            "num_replies": 1
        },
        "1105430334798262272": {
            "id": "1105430334798262272",
            "text": "Just checking if I'm getting it right: @rustlang supporting `where String: From<A>` (concrete left-hand) is actually consistent, as e.g. in `impl<T, A> Trait for T where T: From<A>`, T is a concrete type as the logic statement is \"for all types T\"?",
            "username": "Argorak",
            "num_likes": 7,
            "num_retweets": 2,
            "num_replies": 3
        },
        "1105470544525307906": {
            "id": "1105470544525307906",
            "text": "To celebrate our speakers, we'll be offering a 20% flash sale off all full price conference and workshop tickets for the next week!\n\nUse the order code \"SPEAKER-FLASH-SALE\" or click the link below to order your tickets now!\n\nThis offer expires March 19th!\n\nhttps://ti.to/asquera-event-ug/oxidize-2019/discount/SPEAKER-FLASH-SALE\u00a0\u2026",
            "username": "OxidizeConf",
            "num_likes": 8,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1105468486619357184": {
            "id": "1105468486619357184",
            "text": "We've selected the speakers for OxidizeConf! We have a wonderful collection of talks about #embedded @rustlang, and we can't wait to share them with you!\n\nWe'll be announcing them on twitter this week, and we'll have the full list on our website next Tuesday!\n\nOne more thing...pic.twitter.com/R88w0OC0M7",
            "username": "OxidizeConf",
            "num_likes": 22,
            "num_retweets": 10,
            "num_replies": 1
        },
        "1105261476175073280": {
            "id": "1105261476175073280",
            "text": "ok my @rustlang tic tac toe ml bot is kinda working. sure it fails in a panic randomly but hey progress is progress!https://github.com/deebloo/brain-games-rust/tree/master/src\u00a0\u2026",
            "username": "dee_bloo",
            "num_likes": 14,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1105246127954317313": {
            "id": "1105246127954317313",
            "text": "What is the best place, I mean square one, to start with WASM using @rustlang?",
            "username": "IMacronaut",
            "num_likes": 24,
            "num_retweets": 3,
            "num_replies": 5
        },
        "1105218818891083782": {
            "id": "1105218818891083782",
            "text": "Vote for the @rustsecurecode working group's logo! See the linked GitHub issue to vote /cc @rustlang\nhttps://github.com/rust-secure-code/wg/issues/1#issuecomment-471732538\u00a0\u2026pic.twitter.com/76ui8keDJh",
            "username": "rustsecurecode",
            "num_likes": 39,
            "num_retweets": 13,
            "num_replies": 6
        },
        "1105200089956524032": {
            "id": "1105200089956524032",
            "text": "This has been *years* in the making. So excited to finally see it land!",
            "username": "yoshuawuyts",
            "num_likes": 14,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1105199951183777792": {
            "id": "1105199951183777792",
            "text": "YESSSSSSS!\n\nTHE FUTURES STABILIZATION RFC HAS BEEN MERGED!https://github.com/rust-lang/rfcs/pull/2592\u00a0\u2026",
            "username": "yoshuawuyts",
            "num_likes": 172,
            "num_retweets": 39,
            "num_replies": 1
        },
        "1105194449930539008": {
            "id": "1105194449930539008",
            "text": "The @rustlang #Seattle meetup is hosting Monthly meetup tomorrow. Sign up here:http://bit.ly/2M6xZVb\u00a0",
            "username": "SEA_TechEvents",
            "num_likes": 11,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1105194526128390144": {
            "id": "1105194526128390144",
            "text": "I just published \"edgy\" -- a program to apply the Sobel operator to a given image/directory of images using @rustlang to detect edges.https://github.com/dangreco/edgy\u00a0",
            "username": "medangreco",
            "num_likes": 21,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1105177888377135104": {
            "id": "1105177888377135104",
            "text": "been hearing more about @rustlang and want to get your feet wet? @apalepu23 is an excellent guide!https://twitter.com/EnigmaMPC/status/1105176550440427521\u00a0\u2026",
            "username": "AAAinsley",
            "num_likes": 15,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1105180224281559043": {
            "id": "1105180224281559043",
            "text": "We are delighted to be accepted into this round of @outreachy. We're offering a range of projects with C, @rustlang, lua and #python. Deadline for completed application is April 2, 2019\n\nFor all projects, including ours, see:https://www.outreachy.org/apply/project-selection/#open-projects\u00a0\u2026",
            "username": "Suricata_IDS",
            "num_likes": 19,
            "num_retweets": 9,
            "num_replies": 0
        },
        "1105157012340432897": {
            "id": "1105157012340432897",
            "text": "Introducing @now/rust. Deploy serverless @rustlang functions with Now.\n\nhttps://zeit.co/blog/introducing-now-rust\u00a0\u2026pic.twitter.com/sj29Ya37fs",
            "username": "zeithq",
            "num_likes": 657,
            "num_retweets": 203,
            "num_replies": 12
        },
        "1105156310058917891": {
            "id": "1105156310058917891",
            "text": "If you want to watch my PyCon India talk last year about where I wish Python would go, there is a recording now: https://youtu.be/-4fzFKihmJw\u00a0 slides here:  https://speakerdeck.com/mitsuhiko/a-future-python\u00a0\u2026 \u2014 also covers a lot about what we can learn from @rustlang",
            "username": "mitsuhiko",
            "num_likes": 111,
            "num_retweets": 25,
            "num_replies": 4
        },
        "1105140795424862208": {
            "id": "1105140795424862208",
            "text": "Programming in @rustlang is fun! I've been working recently on a new crate called Interact https://github.com/interact-rs/interact\u00a0\u2026, which provides interactive online introspection of program state.",
            "username": "DanAloni",
            "num_likes": 23,
            "num_retweets": 8,
            "num_replies": 0
        },
        "1105113282061443072": {
            "id": "1105113282061443072",
            "text": "I'll be streaming some more @rustlang tomorrow (12th of March) at 17:00 CET/11:00 EST/16:00 UTC. I'll first be focusing on some issues in piet and druid (2D grapics libs) and if there's time, going back to my Game Boy emulator.https://twitch.tv/ryanlevick\u00a0",
            "username": "ryan_levick",
            "num_likes": 14,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1104967979140231169": {
            "id": "1104967979140231169",
            "text": "It finally works! Bare metal @rustlang running on a TI SimpleLink CC2650 based SensorTag \u2014 my long weekend project. /cc @rustembeddedpic.twitter.com/8yP3rN3wM8",
            "username": "wezm",
            "num_likes": 177,
            "num_retweets": 19,
            "num_replies": 6
        },
        "1105009366070185984": {
            "id": "1105009366070185984",
            "text": "Version 0.4.0 of our finalfrontier @rustlang crate now stores word embeddings in the finalfusion format after training. This means that the trained embeddings can be used with rust2vec. We removed functionality already provided by the rust2vec crate.https://github.com/danieldk/finalfrontier/releases/tag/v0.4.0\u00a0\u2026",
            "username": "danieldekok",
            "num_likes": 11,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1105052179092721664": {
            "id": "1105052179092721664",
            "text": " It is that time again! Meetup coming up! \n\nThis month some of us will be showcasing and talking about their @rustlang projects. Come and learn about the wonderful things we are building with Rust. \n\nSee you on the 30th. \n\nRSVP  https://bit.ly/2SXY6PM\u00a0pic.twitter.com/dPhUUV7wgf",
            "username": "RustNairobi",
            "num_likes": 25,
            "num_retweets": 10,
            "num_replies": 0
        },
        "1105062505313984512": {
            "id": "1105062505313984512",
            "text": "Send your proposal! You have time until March 25 to submit an abstract to the first edition of RustLab that will be held in #Florence on June, Friday 28 and Saturday 29, 2019. \n\n#Developers #callforproposal #cfp #rustlab #rust #rustlang @rustlanghttps://www.papercall.io/rustlab2019\u00a0",
            "username": "rustlab_conf",
            "num_likes": 9,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1105092009608577024": {
            "id": "1105092009608577024",
            "text": "Building the virtualization stack of the future with rust-vmm (written in @rustlang) by @SgAndreea | https://red.ht/2VKjiL1\u00a0pic.twitter.com/sFr3NIMB1T",
            "username": "opensourceway",
            "num_likes": 76,
            "num_retweets": 35,
            "num_replies": 1
        },
        "1104831327218647040": {
            "id": "1104831327218647040",
            "text": "Just published an small release for my CoreMIDI Rust library that allows to pre-allocate PacketBuffer's of a predefined capacity https://crates.io/crates/coremidi\u00a0",
            "username": "chris_zen",
            "num_likes": 16,
            "num_retweets": 8,
            "num_replies": 0
        },
        "1104851422191996929": {
            "id": "1104851422191996929",
            "text": "The brief @rustlang banter today with @jonmasters reminded me to share this: My talk titled \"A microkernel written in Rust: Porting the UNIX-like Redox OS to Arm v8.0\" was selected for the recently held FOSDEM 2019. Check these out! https://youtu.be/qpazyDkuqLw\u00a0 https://fosdem.org/2019/schedule/event/microkernel_written_in_rust/\u00a0\u2026",
            "username": "throbbin_robbin",
            "num_likes": 52,
            "num_retweets": 11,
            "num_replies": 0
        },
        "1104820102250274816": {
            "id": "1104820102250274816",
            "text": "Someone in #reddit said it is impossible, so I obviously challenged my self to implement a list in @rustlang, and I survived to tell my story: https://oribenshir.github.io/afternoon_rusting/blog/basic-list\u00a0\u2026\n#rustlang #afternoon_rusting",
            "username": "oribenshir",
            "num_likes": 46,
            "num_retweets": 9,
            "num_replies": 2
        },
        "1104778731141382144": {
            "id": "1104778731141382144",
            "text": "Hey @rustlang frens I am speaking about an intro to #rustlang in a month!! If you want to giveaway some freebies/swags/stickers or anything so I can share with the attendees please contact me. Will of course credit you  please RT https://twitter.com/MSCraftsman/status/1104727855466917888\u00a0\u2026",
            "username": "rahulthakoor",
            "num_likes": 21,
            "num_retweets": 5,
            "num_replies": 2
        },
        "1104566331599405056": {
            "id": "1104566331599405056",
            "text": "Is there any study on @rustlang performance consistency as compared to garbage collected languages?",
            "username": "mjb2kmn",
            "num_likes": 24,
            "num_retweets": 9,
            "num_replies": 4
        },
        "1104697298813177856": {
            "id": "1104697298813177856",
            "text": "Here it is  \n\nPart 1 of X of how to get started with web programming in @rustlang, especially for @nodejs developers.https://medium.com/@gruberbastian/intro-to-web-programming-in-rust-for-nodejs-developers-1a9c048c4de1\u00a0\u2026",
            "username": "byteadventures",
            "num_likes": 237,
            "num_retweets": 67,
            "num_replies": 7
        },
        "1104721099181432832": {
            "id": "1104721099181432832",
            "text": "I'm lagging a little behind on personal updates, so here's one: I'm joining @rustlang core as an \"observer\", with intention to join. Incredibly happy to start working with the folks there.\n\nAlso, @ManishEarth joins fully.https://internals.rust-lang.org/t/new-members-for-the-rust-core-team/9575\u00a0\u2026",
            "username": "Argorak",
            "num_likes": 144,
            "num_retweets": 12,
            "num_replies": 7
        },
        "1104736008631959554": {
            "id": "1104736008631959554",
            "text": "Okay, wet/grumpy dog and youtube live stream issues resolved, going live here in a few minutes for some #embedded @rustlang work!https://www.youtube.com/watch?v=U2rC24XGtTk\u00a0\u2026",
            "username": "bitshiftmask",
            "num_likes": 6,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1104601184646488064": {
            "id": "1104601184646488064",
            "text": "I'm thinking of explaining some basics and then going on writing some simple project together, explaining Just-in-Time. But I'd love to have suggestions for project ideas.",
            "username": "GolDDranks",
            "num_likes": 1,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1104600915942633472": {
            "id": "1104600915942633472",
            "text": "I'm going to do a 1:1 tutoring session with a #Rustlang beginner. (Hello world level, Java background) Any ideas what to do?",
            "username": "GolDDranks",
            "num_likes": 15,
            "num_retweets": 3,
            "num_replies": 6
        },
        "1104452738400821249": {
            "id": "1104452738400821249",
            "text": "Any @rustlang lovers out there know how I can speed up this compile time? First time is a fresh build, second time is a single line change. I this the cause is having tests in a binary application. Code can be seen here: http://github.com/cactusdev/cereus\u00a0\u2026pic.twitter.com/qsdA0L9Z1J",
            "username": "Innectic_",
            "num_likes": 19,
            "num_retweets": 4,
            "num_replies": 5
        },
        "1104466926720483328": {
            "id": "1104466926720483328",
            "text": "Anyone out there using @emacs to edit @rustlang code? Is racer (autocomplete) working for external crates? I'm having a hell of a time trying to work out if it's a bug in the emacs package or a problem with my environment",
            "username": "shanekilkelly",
            "num_likes": 6,
            "num_retweets": 2,
            "num_replies": 4
        },
        "1104037368930189313": {
            "id": "1104037368930189313",
            "text": "++ `php-ext-wasm`\n\nThis PR https://github.com/wasmerio/php-ext-wasm/pull/5\u00a0\u2026 is a rewrite to replace the WebAssembly runtime `wasmi` by @wasmerio.\n\nEarly result: Speed up of 28x ! (benchmarked with the n-body algorithm)\n\nStay tuned, more to come .\n\n#php #webassembly #wasm #rustlang #wasmerpic.twitter.com/Wpl9AbkUvF",
            "username": "mnt_io",
            "num_likes": 47,
            "num_retweets": 10,
            "num_replies": 0
        },
        "1104131511274618880": {
            "id": "1104131511274618880",
            "text": "First #rustlang lang team working group sync meeting announced:\nhttps://internals.rust-lang.org/t/lang-team-working-group-sync-meetings/9573/2?u=nikomatsakis\u00a0\u2026 Let's see how this goes =)",
            "username": "nikomatsakis",
            "num_likes": 17,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1104282964467187712": {
            "id": "1104282964467187712",
            "text": "Thanks to @softprops' great work, Rusoto is more up to date with botocore and we have 28 new #AWS services to add.  I'm planning on cutting a new Rusoto release and we can crank out those new services afterwards. #rustlang",
            "username": "Motoblag",
            "num_likes": 13,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1104334051723407360": {
            "id": "1104334051723407360",
            "text": "People who watch my #embedded #rustlang Internet of Streams project, what should I do next?\n\nhttps://www.youtube.com/playlist?list=PLX44HkctSkTewrL9frlUz0yeKLKecebT1\u00a0\u2026",
            "username": "bitshiftmask",
            "num_likes": 4,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1104417950239543298": {
            "id": "1104417950239543298",
            "text": "#rustlang I'm trying to use auto vectorization when possible, but LLVM uses 128bit registers on a hot path, slowing down real code. It uses 256 bit registers for collecting an f32 iterator. Only forcing width globally works. Compiling with avx2 and native cpu. Anyone know why?",
            "username": "s_m_mcguire",
            "num_likes": 10,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1104447773515137025": {
            "id": "1104447773515137025",
            "text": "Finally got running @rustlang (@rustembedded) on the @NXP FRDM-K64F, took some pain but a great result #embedded #rustlang",
            "username": "youmike",
            "num_likes": 33,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1104433265279201281": {
            "id": "1104433265279201281",
            "text": "If you give a @debian developer a board game for Christmas, two months later they'll have written @rustlang bindings to the Boost Graph Library and filed multiple bugs about better offline support in Cargo. I approve of the depth of this yak-shaving stack: https://diziet.dreamwidth.org/1626.html\u00a0",
            "username": "geofft",
            "num_likes": 72,
            "num_retweets": 14,
            "num_replies": 0
        },
        "1104158154567217152": {
            "id": "1104158154567217152",
            "text": "Draft of skribo (low level text layout) requirements: https://github.com/linebender/skribo/pull/2\u00a0\u2026 . If you think you will be using text layout in your Rust code, feel free to comment!",
            "username": "raphlinus",
            "num_likes": 30,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1104415349288517632": {
            "id": "1104415349288517632",
            "text": "Doing a meet-in-the-middle attack on discrete log is taking too many minutes with num-bigint. Should I try out rust-gmp next? rug? Or something else? @rustlang",
            "username": "mikong",
            "num_likes": 7,
            "num_retweets": 1,
            "num_replies": 4
        },
        "1104425786323468288": {
            "id": "1104425786323468288",
            "text": "A writeup of resizing images with @rustlang on AWS Lambda:https://matsimitsu.com/blog/2019-03-09-resize-images-from-s3-with-aws-lambda-and-rust/\u00a0\u2026",
            "username": "Matsimitsu",
            "num_likes": 51,
            "num_retweets": 13,
            "num_replies": 0
        },
        "1104408843243716610": {
            "id": "1104408843243716610",
            "text": "I just finished the initial implementation of my first \"real\" @rustlang crate.\n\nI even had to use some unsafe blocks (for the C FFI). Now I feel naughty.\n\nhttps://github.com/ironthree/cccolutils-rs\u00a0\u2026\n\nComments are welcome ",
            "username": "decathorpe",
            "num_likes": 12,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1104238651532369925": {
            "id": "1104238651532369925",
            "text": "@rustlang Have you heard about WASP? It's a \"...LISP programming language for extremely performant and concise web assembly modules.\"\n\nHow COOL is that?\n\nFind out more at https://github.com/wasplang/wasp\u00a0.\nI even wrote an article on it :)https://medium.com/@nbaltunian/wasp-a-lisp-dialect-for-performant-concise-web-assembly-modules-29f5f7282b6a\u00a0\u2026",
            "username": "iAm__Noah",
            "num_likes": 24,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1104238937856307201": {
            "id": "1104238937856307201",
            "text": "Has anyone written any MVC libraries for @rustlang terminal applications?",
            "username": "hdevalence",
            "num_likes": 18,
            "num_retweets": 3,
            "num_replies": 4
        },
        "1104248620264513537": {
            "id": "1104248620264513537",
            "text": "Productive flight back from @devnexus.\n\nGot a Rust function running in #AWS Lambda using SAM CLI, steps documented: https://gist.github.com/arun-gupta/52112e11712a4adc6c25674ff3b18ccb\u00a0\u2026\n\nLooking forward to show this at @VoxxedBucharest \n\n// @sanathkr_ @rustlangpic.twitter.com/lYGXp3qoxw",
            "username": "arungupta",
            "num_likes": 28,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1104386106974453761": {
            "id": "1104386106974453761",
            "text": "On my way to @Sunjay03's workshop on Game Development in Rust! https://www.meetup.com/Rust-KW/events/259335419/\u00a0\u2026 @rustlang #rustlang",
            "username": "mikeyhew",
            "num_likes": 23,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1104209565040762885": {
            "id": "1104209565040762885",
            "text": "How is there no structural-diff/deep-diff @rustlang library on crates-io yet? I'm doing a semantic compare of serde-YAML-serialized tree-like structures, and I'd like to give out something a bit more useful than a text diff when it doesn't match.",
            "username": "CAD97_",
            "num_likes": 18,
            "num_retweets": 3,
            "num_replies": 2
        },
        "1104132397103284226": {
            "id": "1104132397103284226",
            "text": "We're starting out the @rustlang working group sync meetings with the unsafe guidelines working group!https://internals.rust-lang.org/t/lang-team-working-group-sync-meetings/9573/2?u=nikomatsakis\u00a0\u2026",
            "username": "rust_unsafe",
            "num_likes": 33,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1104098205015322624": {
            "id": "1104098205015322624",
            "text": "Here's the video recording of my talk earlier this week, talking about how @RMS\n is using @rustlang and @ApacheArrowhttps://www.youtube.com/watch?v=iQcOW2fVX2c\u00a0\u2026",
            "username": "andygrove73",
            "num_likes": 31,
            "num_retweets": 8,
            "num_replies": 2
        },
        "1104118892954337285": {
            "id": "1104118892954337285",
            "text": "fselect (command-line utility for finding files with SQL syntax) has been updated! Now with colors, #mercurial support, and more. Written in @rustlang #rustlanghttps://github.com/jhspetersson/fselect\u00a0\u2026",
            "username": "xenozoid",
            "num_likes": 37,
            "num_retweets": 12,
            "num_replies": 1
        },
        "1104041663788388352": {
            "id": "1104041663788388352",
            "text": "Just published my first @rustlang crate https://crates.io/crates/cargo-trim\u00a0\u2026. Crate for cleaning cargo cache. Support orphan and old clean for both registry and git cache and lot of other functionality. Project repo: https://github.com/iamsauravsharma/cargo-trim\u00a0\u2026.",
            "username": "IAmSauravSharma",
            "num_likes": 15,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1103726632068513792": {
            "id": "1103726632068513792",
            "text": "Anyone more versed in #rustlang care to weigh in? These all look like good suggestions to me but I'm still kind of new at the Rust game.https://github.com/spacejam/elements-of-rust\u00a0\u2026",
            "username": "MikeCluck",
            "num_likes": 18,
            "num_retweets": 4,
            "num_replies": 2
        },
        "1103769297439125514": {
            "id": "1103769297439125514",
            "text": "Just whipped up a little \"cargo flamegraph\" command built on top of @Jonhoo's Inferno library! It's quite convenient for profiling #rustlang projects, or anything else on linux, with macos support just a dtrace collapse function in Inferno away!https://github.com/ferrous-systems/cargo-flamegraph\u00a0\u2026",
            "username": "sadisticsystems",
            "num_likes": 74,
            "num_retweets": 16,
            "num_replies": 3
        },
        "1103864925280063488": {
            "id": "1103864925280063488",
            "text": "Setting up a ClusterFuzz for #rustlang fuzz testing status:https://blog.troutwine.us/2019/03/08/bughunt-getting-clusterfuzz-setup/\u00a0\u2026",
            "username": "bltroutwine",
            "num_likes": 9,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1103783865397710850": {
            "id": "1103783865397710850",
            "text": "Blog post by @ryanleesipes/@mozthunderbird, among other topics, on #SequoiaPGP & #prettyEasyprivacy -- following talks with Volker Birk (@blog_fdik_org) at #FOSDEM.\n\nhttps://blog.mozilla.org/thunderbird/2019/03/fosdem-2019-and-deltachat/\u00a0\u2026\n\n/@SequoiaPGP @rustlang @wauland @ISOCSwitzerland\n#PrivacyByDefault #MassEncryptionpic.twitter.com/clT6EIWbHP",
            "username": "pEpFoundation",
            "num_likes": 9,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1103789176124784641": {
            "id": "1103789176124784641",
            "text": "@rustlang We will have a meetup about Rust at Grenoble France. Details here:https://www.meetup.com/FLOSS-Grenoble/events/259118704/\u00a0\u2026",
            "username": "Uggla_",
            "num_likes": 14,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1103802189112270849": {
            "id": "1103802189112270849",
            "text": "Handy @rustlang tip: today VSCode updated itself, and I got that RLS error where it gets confused about the channel to use and fails. If you have the problem, add to your settings.json: \"http://rust-client.channel\u00a0\": \"stable\" (or \u201cnightly\u201d ), restart VSCode and all should be good.",
            "username": "AndreaPessino",
            "num_likes": 43,
            "num_retweets": 4,
            "num_replies": 1
        },
        "1103950734054383617": {
            "id": "1103950734054383617",
            "text": "Using Rocket: How do you do a client HTTP request to another machine within a request handler? @rustlang",
            "username": "CecileTonglet",
            "num_likes": 9,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1103777412108701697": {
            "id": "1103777412108701697",
            "text": "I decided to run another  #WebAssembly experiment. \nThis time, I decided to go with  Rust #Rustlang to generate the #Wasm to tap into the power of @rustwasm. \nI was blown away by what I found! \nRead about the journey to supercharge #JavaScript here:\nhttps://jlik.me/fdr\u00a0pic.twitter.com/GLO63An83p",
            "username": "jeremylikness",
            "num_likes": 61,
            "num_retweets": 10,
            "num_replies": 2
        },
        "1104024081194799105": {
            "id": "1104024081194799105",
            "text": "We did a small write up on our experience with @rustlang during Google's #hashcode coding competition: \"How productive is Rust?\"https://medium.com/@woutergeraedts/how-productive-is-rust-e2260db28f09\u00a0\u2026",
            "username": "jonkers_erik",
            "num_likes": 82,
            "num_retweets": 21,
            "num_replies": 3
        },
        "1103757515928461313": {
            "id": "1103757515928461313",
            "text": "Made a list and added the current expected attendees to the inaugural #RustMeetAtGDC (those on Twitter, at least ). Anyone else interested in @rustlang that would like to participate please just add yourself. It's is going to be WILD! \nhttps://twitter.com/AndreaPessino/lists/rustmeetatgdc\u00a0\u2026",
            "username": "AndreaPessino",
            "num_likes": 26,
            "num_retweets": 7,
            "num_replies": 3
        },
        "1103503419237494784": {
            "id": "1103503419237494784",
            "text": "Finally published my #rustlang crate bitvec v0.10.0. I expect to make this snapshot the 1.0 release if I don't find anything to fix\n\nI have more functionality to add \u2013 serde support, for one \u2013 but the crate feels done enough to cut a 1.0 and really recommend it for production use",
            "username": "myrrlyn",
            "num_likes": 39,
            "num_retweets": 5,
            "num_replies": 2
        },
        "1103633266870009858": {
            "id": "1103633266870009858",
            "text": "Did you know IntelliJRust lets you use handy Cargo check annotator? Just enable it, and you're all set! #rustlangpic.twitter.com/WYYXyW5Azn",
            "username": "intellijrust",
            "num_likes": 74,
            "num_retweets": 25,
            "num_replies": 0
        },
        "1103721981298528256": {
            "id": "1103721981298528256",
            "text": "npm weekly 187: go on-call with the wombats, why npm & @rustlang make a perfect pair, plus the @emberjs community survey:\n\nhttps://buff.ly/2u3xfrT\u00a0pic.twitter.com/iIB31snwms",
            "username": "npmjs",
            "num_likes": 8,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1103610335473197063": {
            "id": "1103610335473197063",
            "text": "Nice example of the small changes needed to introduce rayon into a project to start using all CPU cores.https://medium.com/@cfsamson/from-48s-to-5s-optimizing-a-350-line-pathtracer-in-rust-191ab4a1a412\u00a0\u2026",
            "username": "wezm",
            "num_likes": 197,
            "num_retweets": 52,
            "num_replies": 4
        },
        "1103305337262821377": {
            "id": "1103305337262821377",
            "text": "And, for those interested, there will be #rustlang in the stack driving the stress test.https://twitter.com/CCPGames/status/1103304236308279303\u00a0\u2026",
            "username": "aidanhs",
            "num_likes": 47,
            "num_retweets": 7,
            "num_replies": 1
        },
        "1103620721765478400": {
            "id": "1103620721765478400",
            "text": "Happy to present the first video in my \"5 Minute Rust\" series which will explore @rustlang in 5 minute chunks. Thanks to @pat_shaughnessy for the inspiration!https://www.youtube.com/watch?v=WRn_IfK5kDM\u00a0\u2026",
            "username": "ryan_levick",
            "num_likes": 132,
            "num_retweets": 37,
            "num_replies": 11
        },
        "1103631039665266688": {
            "id": "1103631039665266688",
            "text": " Reminder!\n\nIf you see something cool in #embedded @rustlang, mention us with @rustembedded, and we're happy to retweet for visibility!\n\nIf it's a cool library, also add it to https://github.com/rust-embedded/awesome-embedded-rust\u00a0\u2026\n\nIf it's a cool hardware project, add it tohttps://github.com/rust-embedded/showcase/\u00a0\u2026",
            "username": "rustembedded",
            "num_likes": 20,
            "num_retweets": 16,
            "num_replies": 1
        },
        "1103319615541858304": {
            "id": "1103319615541858304",
            "text": "RustLab is the only international conference in #Italy dedicated to the Rust programming language: reserve your seat today!\n\n#Developers #rustlab #rust #rustlang @rustlang https://www.rustlab.it/home\u00a0pic.twitter.com/r93Ki7dXWB",
            "username": "rustlab_conf",
            "num_likes": 18,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1103342364540760064": {
            "id": "1103342364540760064",
            "text": "I just published Making #mdBooks work offline  https://buff.ly/2NLyg0L\u00a0\nThere is also a sample repo \nhttps://buff.ly/2VHxbJX\u00a0\nBeing able to read  mdBooks offline or without consuming much mobile data can be helpful for many  @rustlangpic.twitter.com/FkAZfsywud",
            "username": "rahulthakoor",
            "num_likes": 17,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1103325114773487620": {
            "id": "1103325114773487620",
            "text": "Anfang Februar fand bei @MozillaBerlin das Rust All-Hands statt.\nHier ein kleiner Artikel dazu: https://blog.mozilla.org/berlin/rust-all-hands-2019/\u00a0\u2026\n#rustallhands",
            "username": "badboy_",
            "num_likes": 12,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1103416332786302977": {
            "id": "1103416332786302977",
            "text": " The 16th #embedded @rustlang Working Group Newsletter is out!\n\nThis week highlights: Not yet awesome embedded Rust, Rust on the nRF9160, the Internet of Streams and several project updates from the community\n\nhttps://rust-embedded.github.io/blog/newsletter-16/\u00a0\u2026",
            "username": "rustembedded",
            "num_likes": 33,
            "num_retweets": 16,
            "num_replies": 1
        },
        "1103107708423671811": {
            "id": "1103107708423671811",
            "text": "Anyone been looking for a @rustlang project to hack on? @ApacheArrow for native Rust is growing fast! https://github.com/apache/arrow/tree/master/rust\u00a0\u2026 #rustlang",
            "username": "wesmckinn",
            "num_likes": 158,
            "num_retweets": 44,
            "num_replies": 5
        },
        "1103115564015386625": {
            "id": "1103115564015386625",
            "text": "\"Oxide: the essence of @rustlang\", by @aatxe, Patterson, @nikomatsakis and Ahmed.https://twitter.com/ArjunGuha/status/1103087732610486272\u00a0\u2026",
            "username": "asajeffrey",
            "num_likes": 28,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1103118775203872768": {
            "id": "1103118775203872768",
            "text": "I just published my first @rustlang code that contains AVX/SSE code paths. The performance is highly variable across platforms, and I'm not sure if that's to be expected or if my SIMD code can be optimized more, but I'm pleased it works.https://github.com/TooManyBees/lab\u00a0",
            "username": "TooManyBees",
            "num_likes": 18,
            "num_retweets": 2,
            "num_replies": 2
        },
        "1100499645401366535": {
            "id": "1100499645401366535",
            "text": "Here's some snow using @rustlang and WebAssembly (@rustwasm)! Thank you @aerotwist for the wonderful tutorial! \nCode --> https://github.com/renjithgr/wasm-make-some-snow\u00a0\u2026 \nDemo --> https://zen-liskov-772f98.netlify.com/\u00a0\n#wasm #webassembly #rust",
            "username": "HelloRenj",
            "num_likes": 32,
            "num_retweets": 5,
            "num_replies": 3
        },
        "1102990672771121158": {
            "id": "1102990672771121158",
            "text": "Are there @rustlang communities in Ghana, Nigeria, Cameroon, Egypt, Malawi, Zambia, Zimbabwe, Botswana, Rwanda, Tanzania, Uganda, Ethiopia, Sudan, Eriteria, Angola, Namibia, Lesotho, South Africa or any other countries in Africa? Please reach out ASAP.",
            "username": "RustNairobi",
            "num_likes": 36,
            "num_retweets": 20,
            "num_replies": 9
        },
        "1102483162133942275": {
            "id": "1102483162133942275",
            "text": "Big thanks to @frondeus for his talk on \"implementing your own programming language in Rust\". Great news is that slides and sources are available: https://gitlab.com/frondeus/meetup-2019.02\u00a0\u2026\n#rustlangpic.twitter.com/bhDFx9n39Z",
            "username": "RustWroclaw",
            "num_likes": 110,
            "num_retweets": 30,
            "num_replies": 3
        },
        "1102892625139519489": {
            "id": "1102892625139519489",
            "text": "Reminder that I'm streaming about my Game Boy emulator in @rustlang today https://twitter.com/ryan_levick/status/1102137419137196033\u00a0\u2026",
            "username": "ryan_levick",
            "num_likes": 38,
            "num_retweets": 5,
            "num_replies": 1
        },
        "1102612218460471297": {
            "id": "1102612218460471297",
            "text": "IntelliJRust has learned to understand code inside doctests! This includes highlighting, Go to definition, quick fixes, completion, etc. BTW check out completion working with a name out of the scope and importing the needed module automatically! #rustlangpic.twitter.com/LdcNZhXqjt",
            "username": "intellijrust",
            "num_likes": 227,
            "num_retweets": 48,
            "num_replies": 7
        },
        "1102651056058712064": {
            "id": "1102651056058712064",
            "text": "Hello @rustlang @rustwasm! How can I cast something like a const array like [1, 2, 3] to a JsValue? I'm having a E0308: expected &wasm_bindgen::JsValue found `&[u32; 1]`\n#rustlang #webassembly #wasm",
            "username": "xernobyl",
            "num_likes": 4,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1102804679887593472": {
            "id": "1102804679887593472",
            "text": "Just released a new version of nus3audio (Smash Ultimate music archive modding tool) rewritten from the ground up in #rustlang, with new features including a visual mode based on git's --patch system\nhttps://github.com/jam1garner/nus3audio-rs/releases/latest\u00a0\u2026pic.twitter.com/RbhFO8IJEy",
            "username": "jam1garner",
            "num_likes": 28,
            "num_retweets": 4,
            "num_replies": 2
        },
        "1102687398343921664": {
            "id": "1102687398343921664",
            "text": "Rendez vous le 27 Mars pour le meetup #rustlang chez @TeadsInnovation avec @lightplay8 pour une pr\u00e9sentation du Reverse Proxy HTTP Sozu https://www.sozu.io\u00a0 et une introduction \u00e0 la crate serde par @dcastelltort .\nhttps://www.meetup.com/Montpellier-Rust-Meetup/events/259484392/\u00a0\u2026\n@rustlang @MtpTechHub @clever_cloud",
            "username": "MtpRust",
            "num_likes": 23,
            "num_retweets": 16,
            "num_replies": 0
        },
        "1102734233229905921": {
            "id": "1102734233229905921",
            "text": "SAN FRANCISCO ( #RSAC2019, booth 4518), March 4, 2019 \u2013 Fortanix, the #RuntimeEncryption\u00ae company, launched its Enclave Development Platform #RustEDP today at the #RSAC19. EDP provides a native @rustlang -based SDK to write #IntelSGX secure enclaves.https://journalofcyberpolicy.com/2019/03/04/fortanix-launches-native-rust-based-software-development-kit-intel-sgx-applications/\u00a0\u2026",
            "username": "fortanix",
            "num_likes": 3,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1102789887458193408": {
            "id": "1102789887458193408",
            "text": "Blinking some LEDs with \u2066\u2066@bascule\u2069\u2019s \u2066@rustlang\u2069 code, running on an \u2066@adafruit\u2069 NeoTrellis M4 housed in a custom aluminum enclosure built by \u2066@doridoidea\u2069.\n\nNow I\u2019ve gotta figure out how to lower the brightness...pic.twitter.com/zp5XkvbwjM",
            "username": "dwrensha",
            "num_likes": 70,
            "num_retweets": 15,
            "num_replies": 5
        },
        "1102563235075686401": {
            "id": "1102563235075686401",
            "text": "Reminder: workshop in the Kitchener-Waterloo, ON area this weekend! It's titled \"Introduction to game development in Rust\" and it's going to be so much fun!  \n\nPlease RSVP to get a spot:\nhttps://www.meetup.com/Rust-KW/events/259335419/\u00a0\u2026\n@rustlang @rust_gamedev @ThisWeekInRust #rustlang #gamedevpic.twitter.com/QyZ45xauct",
            "username": "Sunjay03",
            "num_likes": 14,
            "num_retweets": 13,
            "num_replies": 0
        },
        "1102566112523370497": {
            "id": "1102566112523370497",
            "text": "I'm not sure what I want to talk about for this month's blog post.\n\nWhat's something in @rustlang you wish you had better explained to you?",
            "username": "mgattozzi",
            "num_likes": 21,
            "num_retweets": 2,
            "num_replies": 7
        },
        "1102570603024994304": {
            "id": "1102570603024994304",
            "text": "@rustlang users and @michaelfairley  this cargo-expand tool is very nicehttps://github.com/dtolnay/cargo-expand\u00a0\u2026",
            "username": "jackmott42",
            "num_likes": 10,
            "num_retweets": 3,
            "num_replies": 2
        },
        "1102586090488299522": {
            "id": "1102586090488299522",
            "text": "#rustlang @rustlang \n\n\u300aThe Tao of Rust\u300b\uff08 Figure 1\uff09 is a Chinese book I wrote about Rust programming, it Already published in China . Figure 2 is the first draft translation of the book catalogue, Are you interested in reading it?\n\nhttps://github.com/ZhangHanDong/tao-of-rust-codes/blob/master/tao_of_rust_english.md\u00a0\u2026pic.twitter.com/itPyJXCxmA",
            "username": "blackanger",
            "num_likes": 45,
            "num_retweets": 9,
            "num_replies": 3
        },
        "1102604846711128066": {
            "id": "1102604846711128066",
            "text": "Ma\u00f1ana estar\u00e9 en la Universidad de Sevilla hablando sobre @rustlang, a las 12:00. Ven a verme si quieres conocer un lenguaje de programaci\u00f3n fantabuloso.https://twitter.com/sugus_etsii/status/1101900259045838848\u00a0\u2026",
            "username": "danigm",
            "num_likes": 16,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1102603707584315393": {
            "id": "1102603707584315393",
            "text": "I wrote (and drew!) a piece about implementation details of the engine behind @Cloudflare Firewall Rules. Take kids away from screens - it involves manual parsing, dynamic dispatch and other techniques usually frowned upon https://blog.cloudflare.com/building-fast-interpreters-in-rust/\u00a0\u2026",
            "username": "RReverser",
            "num_likes": 234,
            "num_retweets": 56,
            "num_replies": 3
        },
        "1102605254611345408": {
            "id": "1102605254611345408",
            "text": "The engine is open-source now in case you want to take a look and shake your heads at some @rustlang code!https://github.com/cloudflare/wirefilter\u00a0\u2026",
            "username": "RReverser",
            "num_likes": 40,
            "num_retweets": 10,
            "num_replies": 3
        },
        "1102275637606338562": {
            "id": "1102275637606338562",
            "text": " Excited to announce the second release (v0.1.1) of `cargo-call-stack`!\n\nhttps://crates.io/crates/cargo-call-stack/0.1.1\u00a0\u2026\n\n`cargo-call-stack` is a static, whole program stack analysis tool, and in this second release it went from \"It works ... sometimes\" to \"this is awesome!\"\n\nHere's what new:\n\n1/8https://twitter.com/japaricious/status/1069569802241486850\u00a0\u2026",
            "username": "japaricious",
            "num_likes": 67,
            "num_retweets": 21,
            "num_replies": 1
        },
        "1102563850115837952": {
            "id": "1102563850115837952",
            "text": "We've also got a meetup TOMORROW in the Kitchener-Waterloo, ON area where we'll be talking about \"Martians, old cpus and the borrow checker + Rust 2018\"\n\nCome out and mingle/meet with people in the KW Rust community! @rustlang #rustlang @ThisWeekInRusthttps://www.meetup.com/Rust-KW/events/259334630/\u00a0\u2026",
            "username": "Sunjay03",
            "num_likes": 7,
            "num_retweets": 6,
            "num_replies": 0
        },
        "1102616182895661057": {
            "id": "1102616182895661057",
            "text": "It\u2019s official! Rust Belt Rust 2019 will be taking place in Dayton, Ohio on\nOctober 18 & 19! Save the date and stay tuned for more details! https://www.rust-belt-rust.com/\u00a0 #rustlang",
            "username": "rustbeltrust",
            "num_likes": 57,
            "num_retweets": 27,
            "num_replies": 1
        },
        "1102137419137196033": {
            "id": "1102137419137196033",
            "text": "I'll be streaming about my Game Boy emulator in @rustlang on Tuesday (5th Mar) at 17:00 CET/11:00 EST/16:00 UTC. https://twitch.tv/ryanlevick\u00a0 Going to try to roughly stick to Tuesdays",
            "username": "ryan_levick",
            "num_likes": 51,
            "num_retweets": 11,
            "num_replies": 2
        },
        "1101788050856857601": {
            "id": "1101788050856857601",
            "text": "Has anyone else seen an issue with logarithms misbehaving in armv6 builds of @rustlang",
            "username": "plugwash",
            "num_likes": 2,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1101790742220034048": {
            "id": "1101790742220034048",
            "text": "Let's learn @rustlang\nhttps://medium.com/sean3z/building-a-restful-crud-api-with-rust-1867308352d8\u00a0\u2026pic.twitter.com/TM1XhKiZYQ",
            "username": "dgrammatiko",
            "num_likes": 131,
            "num_retweets": 37,
            "num_replies": 1
        },
        "1101810328004890624": {
            "id": "1101810328004890624",
            "text": "Quick post about optional parameters in @rustlang with `Option<T>` and `From<T>`:\n\nhttp://willspeak.me/2019/03/02/optional.html\u00a0\u2026",
            "username": "willspeak",
            "num_likes": 33,
            "num_retweets": 3,
            "num_replies": 2
        },
        "1101828145391517696": {
            "id": "1101828145391517696",
            "text": "Going to try to consistently stream about @rustlang and also about @Azure. What would you like to see?",
            "username": "ryan_levick",
            "num_likes": 13,
            "num_retweets": 5,
            "num_replies": 2
        },
        "1101832817841975296": {
            "id": "1101832817841975296",
            "text": "Do you have problems running @rustlang in valgrind on MacOS? Try this @Docker image https://hub.docker.com/r/retep007/rust-valgrind\u00a0\u2026 that I've created to get around the valgrind problems on MacOS",
            "username": "retep007",
            "num_likes": 14,
            "num_retweets": 5,
            "num_replies": 2
        },
        "1101937497553149952": {
            "id": "1101937497553149952",
            "text": "Thank you all for positive feedback!\n@RustWroclaw is amazing community.\n\nAs I promised - my slides and code example in @rustlang\nI recommend looking at git history, each commit is one step from slides.https://gitlab.com/frondeus/meetup-2019.02\u00a0\u2026",
            "username": "frondeus",
            "num_likes": 12,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1101818131482398720": {
            "id": "1101818131482398720",
            "text": "A blog post proposing new channels for Rust's standard libraryhttps://stjepang.github.io/2019/03/02/new-channels.html\u00a0\u2026",
            "username": "stjepang",
            "num_likes": 204,
            "num_retweets": 65,
            "num_replies": 11
        },
        "1101591018686869506": {
            "id": "1101591018686869506",
            "text": "New #rustlang blog post: async-await status report http://smallcultfollowing.com/babysteps/blog/2019/03/01/async-await-status-report/\u00a0\u2026",
            "username": "nikomatsakis",
            "num_likes": 174,
            "num_retweets": 44,
            "num_replies": 4
        },
        "1101590368838139905": {
            "id": "1101590368838139905",
            "text": "Check out the trailer video for my book. Many thanks to @graemeknows for his amazing video editing talents.\n\nhttps://www.youtube.com/watch?v=0IdY2bi67pA\u00a0\u2026\n#rustlang #WebAssembly @rustlang",
            "username": "KevinHoffman",
            "num_likes": 26,
            "num_retweets": 3,
            "num_replies": 2
        },
        "1101499186569199616": {
            "id": "1101499186569199616",
            "text": "I'm going to try out my new Twitch set up and be streaming for about an hour at 17:00 CET/16:00 UTC where I move some @rustlang projects from Travis to Azure Pipelines.https://www.twitch.tv/ryanlevick\u00a0",
            "username": "ryan_levick",
            "num_likes": 24,
            "num_retweets": 2,
            "num_replies": 5
        },
        "1101500327373627395": {
            "id": "1101500327373627395",
            "text": "Rust newbie question... Is this the idiomatic way of finding a String object in a Vec<String>? Am I missing something obvious? https://gist.github.com/patshaughnessy/3252e2e718445d991499e5cd08e1949c\u00a0\u2026 #rustlang @rustlang",
            "username": "pat_shaughnessy",
            "num_likes": 8,
            "num_retweets": 2,
            "num_replies": 5
        },
        "1101530650757287936": {
            "id": "1101530650757287936",
            "text": "Google obviously knows, what I might be interested in... \nJavaFX meets the Rust programming language.\n\n@java #Java #JavaFX #rustlang #rust @rustlanghttps://astonbitecode.github.io/blog/post/rust-javafx/\u00a0\u2026",
            "username": "DystopianSnow",
            "num_likes": 37,
            "num_retweets": 7,
            "num_replies": 1
        },
        "1101526765481148423": {
            "id": "1101526765481148423",
            "text": "I wrote \"Text Processing in @rustlang\" for @linuxjournal March 2019 issue. #rustlang #textpic.twitter.com/1kg4FJwVaB",
            "username": "mactsouk",
            "num_likes": 77,
            "num_retweets": 17,
            "num_replies": 0
        },
        "1101550133798293504": {
            "id": "1101550133798293504",
            "text": "24hr update: This thing is solid as a rock. \n\nJust look at how flat those lines are. Mmmmm delicious.pic.twitter.com/ZayxWpxSeY",
            "username": "rossipedia",
            "num_likes": 137,
            "num_retweets": 16,
            "num_replies": 5
        },
        "1101266107178967040": {
            "id": "1101266107178967040",
            "text": "This is one of the hottest graphs I've ever seen. Rewrote a @nodejs API in @rustlang. Pretty much an exact port. It gets roughly ~180 requests per second.\n\nSee if you can spot when I deployed it:pic.twitter.com/epyXXDcBEu",
            "username": "rossipedia",
            "num_likes": 775,
            "num_retweets": 249,
            "num_replies": 20
        },
        "1100984610312220675": {
            "id": "1100984610312220675",
            "text": "I can't find an obvious #rustlang stream replacement filter... i.e. something which implements std::io::Read, wraps something else that implements std::io::Read, and passes on the underlying value, replacing (including across read boundaries) some byte pattern... Does this exist?",
            "username": "illicitonion",
            "num_likes": 4,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1101238329096486913": {
            "id": "1101238329096486913",
            "text": "C uses a bunch of techniques for hardening (PIC, stack guards, ASAN, etc). Are there any good guides on how to apply those to #rustlang ?",
            "username": "chvest",
            "num_likes": 12,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1101214071959904256": {
            "id": "1101214071959904256",
            "text": "Our CFP closes this weekend, please, submit!!!!\n\nhttp://CFP.rustcon.asia\u00a0\n\nCc @rustlang @RustFest @mozTechCFPs @rustbeltrust @RustLatamConf <3",
            "username": "RustConAsia",
            "num_likes": 10,
            "num_retweets": 10,
            "num_replies": 1
        },
        "1101240220194926593": {
            "id": "1101240220194926593",
            "text": "Love writing tests and want to contribute to a @rustlang project? There's a ton of good first issues in this meta-issue for our port of flamegraph at https://github.com/jonhoo/inferno/issues/63\u00a0\u2026. Each entry also links to the relevant source line and the code coverage report, and I'm happy to mentor!",
            "username": "Jonhoo",
            "num_likes": 76,
            "num_retweets": 23,
            "num_replies": 2
        },
        "1101193848804397056": {
            "id": "1101193848804397056",
            "text": "Very excited to announce that I am doing a game development workshop for the Rust KW community! Come make a fun & interactive Rust project with us next weekend! It's going to be a blast! @rustlang #rustlang \n\nRSVP to get a spot: http://meetu.ps/e/Gsn3B/vZw5q/f\u00a0pic.twitter.com/mtiXTICBU1",
            "username": "Sunjay03",
            "num_likes": 49,
            "num_retweets": 16,
            "num_replies": 3
        },
        "1101127169374183424": {
            "id": "1101127169374183424",
            "text": " Bonus 13: I Still Make Silly Mistakes\u2014A story about parsing command-line arguments manually in @rustlang and some thoughts on \u201crookie mistakes.\u201d\n\nhttps://newrustacean.com/show_notes/bonus/_13/\u00a0\u2026",
            "username": "newrustacean",
            "num_likes": 26,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1101133644196917253": {
            "id": "1101133644196917253",
            "text": "Hi Anthony! You can actually run Rust on Glitch right now. Rust is installed and there are some projects using it that you can Remix, although they're not very findable (https://glitch.com/~rust-web-server\u00a0\u2026 is one example).",
            "username": "cori",
            "num_likes": 5,
            "num_retweets": 2,
            "num_replies": 2
        },
        "1101150101995700225": {
            "id": "1101150101995700225",
            "text": "Talk about closing on a high note! @avadacatavra in the closing blogpost of our Rust series explores the blazing fast, parallelized CSS-engine of #FirefoxQuantum (hailing from @ServoDev) and the real-world benefits of rewriting stuff in @rustlang! https://hacks.mozilla.org/2019/02/rewriting-a-browser-component-in-rust/\u00a0\u2026",
            "username": "mozhacks",
            "num_likes": 34,
            "num_retweets": 9,
            "num_replies": 0
        },
        "1101153297048719360": {
            "id": "1101153297048719360",
            "text": "What would happen if we could take a time machine and write the CSS component in @rustlang from the start?\n\nNearly 75% of the security related bugs would have been prevented by default https://hacks.mozilla.org/2019/02/rewriting-a-browser-component-in-rust/\u00a0\u2026",
            "username": "avadacatavra",
            "num_likes": 216,
            "num_retweets": 80,
            "num_replies": 4
        },
        "1100889936322912256": {
            "id": "1100889936322912256",
            "text": "Announcing the start of skribo, a new Rust crate to implement low level text formatting:https://raphlinus.github.io/rust/skribo/text/2019/02/27/text-layout-kickoff.html\u00a0\u2026",
            "username": "raphlinus",
            "num_likes": 117,
            "num_retweets": 23,
            "num_replies": 6
        },
        "1100881813717831683": {
            "id": "1100881813717831683",
            "text": "Installation script for @rustlang on PowerPC (ppc64le) RHEL/CentOS 7 (rustup does not work on these systems):https://gist.github.com/matthiasdiener/335fefd33be707c532a919a2971d6b86\u00a0\u2026",
            "username": "_mdiener",
            "num_likes": 10,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1100489592027770880": {
            "id": "1100489592027770880",
            "text": "Tokio is part of Google Summer of Code https://summerofcode.withgoogle.com/organizations/5982287680765952/\u00a0\u2026 #rustlang",
            "username": "tokio_rs",
            "num_likes": 117,
            "num_retweets": 28,
            "num_replies": 0
        },
        "1100852685014745094": {
            "id": "1100852685014745094",
            "text": "I made another @rustlang thing. Ramhorns is like Mustache, but almost 10x faster.\n\nhttps://github.com/maciejhirsz/ramhorns\u00a0\u2026pic.twitter.com/akJAeaQ1cP",
            "username": "MaciejHirsz",
            "num_likes": 137,
            "num_retweets": 24,
            "num_replies": 5
        },
        "1100791415561469952": {
            "id": "1100791415561469952",
            "text": "I have released rust_gpiozero v0.2.0 . Get started easily with @rustlang and #RaspberryPi. Some highlights:\nBlink leds without blocking main thread and adjust brightness\n Work with servo motors and adjust motor speed\n\u301c Work with software PWM\n\nhttps://buff.ly/2GPjJjF\u00a0pic.twitter.com/2yf4Qqy1BY",
            "username": "rahulthakoor",
            "num_likes": 78,
            "num_retweets": 24,
            "num_replies": 5
        },
        "1100824879719362560": {
            "id": "1100824879719362560",
            "text": "Should I use RocksDB for persistence or something else? ( @rustlang ) #lazytwitter",
            "username": "indutny",
            "num_likes": 16,
            "num_retweets": 1,
            "num_replies": 7
        },
        "1100685211317227520": {
            "id": "1100685211317227520",
            "text": "Vous \u00eates dans la r\u00e9gion toulousaine et vous avez un sujet \u00e0 propos de @rustlang et/ou son \u00e9cosyst\u00e8me et bien il ne faut surtout pas h\u00e9siter \u00e0 le proposer !https://github.com/Rust-Toulouse/CFP\u00a0\u2026",
            "username": "dplaindoux",
            "num_likes": 10,
            "num_retweets": 13,
            "num_replies": 1
        },
        "1100692471917490177": {
            "id": "1100692471917490177",
            "text": "Next Brno (CZ) @rustlang meetup: 14/3/2019 at 6pm. Get more info here: https://rust-brno.github.io/\u00a0",
            "username": "MartinSehnoutka",
            "num_likes": 3,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1100702247225151489": {
            "id": "1100702247225151489",
            "text": "[Blog] #AmazonS3 is a storage solution used by pretty much everyone these days. Pondering how to upload any file on Amazon S3 using #Rust? Head here - https://bit.ly/2ThbbrQ\u00a0\n#rustprogramminglanguage #rustlangpic.twitter.com/y63Ut2ouK5",
            "username": "Knolspeak",
            "num_likes": 16,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1100498357162782723": {
            "id": "1100498357162782723",
            "text": "I will be at GDC this year, thought I'd check if peeps working with or curious about @rustlang would like to get together for a chat. As anyone here will attest I can sing the Rust tune like a Broadway musical. Would love to exchange experience and plans for world domination.",
            "username": "AndreaPessino",
            "num_likes": 92,
            "num_retweets": 11,
            "num_replies": 15
        },
        "1099944047152689152": {
            "id": "1099944047152689152",
            "text": "Mozilla is looking to contract with someone to help bring Rust to UWP and Hololens. If you have UWP expertise and want to help bring Rust to that platform, let me know!https://twitter.com/ryan_levick/status/1099787257362501637\u00a0\u2026",
            "username": "ryan_levick",
            "num_likes": 132,
            "num_retweets": 68,
            "num_replies": 12
        },
        "1100514673449852928": {
            "id": "1100514673449852928",
            "text": "We're looking for a @rustlang summer intern at @brave for an exciting opportunity to work on a Rust based ad block library for inclusion in our Chromium based browser.  \u00a0https://www.reddit.com/r/rust/comments/av50om/rustrelated_summer_internship_at_brave_software/\u00a0\u2026",
            "username": "brianbondy",
            "num_likes": 67,
            "num_retweets": 31,
            "num_replies": 3
        },
        "1100507825070055424": {
            "id": "1100507825070055424",
            "text": "we redesigned the rust website \"learn\" section to include rustlings! https://www.rust-lang.org/learn\u00a0pic.twitter.com/sevJA72g8h",
            "username": "faint_visions",
            "num_likes": 82,
            "num_retweets": 17,
            "num_replies": 1
        },
        "1100290885865127936": {
            "id": "1100290885865127936",
            "text": "Someone made a wrapper for the Logitech LCD SDK in @rustlang, because of course someone did, and I have rarely been more excited to play around with something.pic.twitter.com/EkrysaWuGu",
            "username": "sverrejohann",
            "num_likes": 54,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1100334305362960384": {
            "id": "1100334305362960384",
            "text": "New #rust blog up on our site! Bid adieu to #tarpaulin, #html reports are here for RUST. Read here - http://bit.ly/2EwGPcK\u00a0 #rustprogramming #rustlang @ThisWeekInRust @rustlang",
            "username": "Knolspeak",
            "num_likes": 8,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1100398115163492352": {
            "id": "1100398115163492352",
            "text": "Deployed my first @rustlang function on #AWS Lambda\n\nDetailed blog by @sapessi https://aws.amazon.com/blogs/opensource/rust-runtime-for-aws-lambda/\u00a0\u2026\n\nQuick steps: https://gist.github.com/arun-gupta/52112e11712a4adc6c25674ff3b18ccb\u00a0\u2026\n\nCreate custom runtimes: https://docs.aws.amazon.com/lambda/latest/dg/runtimes-custom.html\u00a0\u2026pic.twitter.com/HFxdz47mhl",
            "username": "arungupta",
            "num_likes": 44,
            "num_retweets": 13,
            "num_replies": 0
        },
        "1100400351264600064": {
            "id": "1100400351264600064",
            "text": "Rust on the Microchip SAMD51 on the Adafruit Metro M4 Express Board #Rust #RustLang #Adafruit @rustlang @rustembedded @bascule @MicrochipMakeshttps://adafru.it/E8X\u00a0",
            "username": "adafruit",
            "num_likes": 39,
            "num_retweets": 13,
            "num_replies": 1
        },
        "1100413019379556352": {
            "id": "1100413019379556352",
            "text": "This is something I\u2019d not imagined I\u2019d be asking but can we see more @rustlang + WASM talks at Node.js conferences?\n\nWould really love to see more collaboration and pollination of ideas between our respective communities and ecosystems ",
            "username": "bitandbang",
            "num_likes": 33,
            "num_retweets": 6,
            "num_replies": 1
        },
        "1100086806509441025": {
            "id": "1100086806509441025",
            "text": "Other interesting bits:\n\n- I'm using a minimal JSON library (it supports #[derive]) optimized for size. My examples are 1.3 KB smaller when using it instead of serde\n\n- When optimized with heavy inlining (-O3) the IPv4 and IPv6 examples contain zero (!) panicking branches\n\n2/3",
            "username": "japaricious",
            "num_likes": 19,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1100086808463978496": {
            "id": "1100086808463978496",
            "text": "- Logging uses e.g. only about 1 KB of Flash for ~70 log messages that are ~26 chars long thanks to the magic of https://github.com/japaric/stlog\u00a0 !\n\n- It took me 9 months to find time to work on this again. It will probably be months before I get some more time to work on it again\n\n3/3",
            "username": "japaricious",
            "num_likes": 14,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1100086803955150848": {
            "id": "1100086803955150848",
            "text": "Woot! I finally had time to clean up and release the code of this @rustembedded demo:\n\nhttps://github.com/japaric/jnet/tree/master/firmware\u00a0\u2026\n\nBinary sizes (-Oz):\n\nIPv4/ether 9 KiB\nIPv6/ether 12.2 KiB\n6LoWPAN 15.2 KiB\n\nAll apps include a CoAP server, JSON (de)serialization, logging and respond to `ping`!\n\n1/3https://twitter.com/japaricious/status/999165910744272896\u00a0\u2026",
            "username": "japaricious",
            "num_likes": 83,
            "num_retweets": 16,
            "num_replies": 1
        },
        "1099823101825683457": {
            "id": "1099823101825683457",
            "text": " published a new release of dynomite, a higher level #DynamoDB interface for #rustlang focusing on productivity, now with builtin retries for building robust applications  https://github.com/softprops/dynomite/blob/master/CHANGELOG.md#021\u00a0\u2026pic.twitter.com/KKtgVXi6Y9",
            "username": "softprops",
            "num_likes": 43,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1099841423434752000": {
            "id": "1099841423434752000",
            "text": "just discovered the \"vendored\" feature flag for #rustlang's openssl crate https://docs.rs/openssl/0.10.18/openssl/#vendored\u00a0\u2026",
            "username": "softprops",
            "num_likes": 7,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1099925145785942016": {
            "id": "1099925145785942016",
            "text": "TIL: turbofish is a thing  @rustlang",
            "username": "hjanuschka",
            "num_likes": 15,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1099972269777059840": {
            "id": "1099972269777059840",
            "text": "Second episode of the series \u201cRust Simplified\u201d is out! Episode 2 - Functions, Traits, and Type Information. https://6ftdan.com/allyourdev/2019/02/25/rust-simplified-ep-2-functions-traits-and-type-information/\u00a0\u2026 #programming #rust #educational #videoseries @rustlangpic.twitter.com/EhuKvMiq3Q",
            "username": "All_Your_Dev",
            "num_likes": 55,
            "num_retweets": 17,
            "num_replies": 1
        },
        "1100005729925251072": {
            "id": "1100005729925251072",
            "text": "Anyone who has developed (part of) apps for iOS in @rustlang? What's your experience? Are there even libraries for using the Apple networking APIs easily? I learned today that POSIX networking is discouraged.",
            "username": "faernn",
            "num_likes": 22,
            "num_retweets": 5,
            "num_replies": 4
        },
        "1100009214376849408": {
            "id": "1100009214376849408",
            "text": "Fellow tech people: hypothetically, would you be interested in a drop-in-replacement (same license, too) rewrite of #OpenSSH to #rustlang, or #Ada2012, or maybe #Haskell? If so, is this something you'd consider supporting via crowd funding? Many thanks! ",
            "username": "TechnicalRah",
            "num_likes": 12,
            "num_retweets": 2,
            "num_replies": 5
        },
        "1100035289995710464": {
            "id": "1100035289995710464",
            "text": "Bad news for the stanford bunny! A new version of the tri-mesh #rustlang crate https://crates.io/crates/tri-mesh\u00a0 is out which includes a simple morph tool example.\n\n#3D #GeometryProcessing #geometrypic.twitter.com/W3i6gYhid8",
            "username": "AsgerNyman",
            "num_likes": 44,
            "num_retweets": 7,
            "num_replies": 1
        },
        "1099844983480143872": {
            "id": "1099844983480143872",
            "text": "@rustlang in the machine (in this case, a SAMD51 microcontroller on the @Adafruit Metro M4) https://github.com/atsamd-rs/atsamd/pull/31#issuecomment-466836126\u00a0\u2026pic.twitter.com/v7zbs1nA5F",
            "username": "bascule",
            "num_likes": 59,
            "num_retweets": 15,
            "num_replies": 4
        },
        "1099876874723971073": {
            "id": "1099876874723971073",
            "text": "how do you set the vscode @rustlang extension to not underline a function in green when it is unused?",
            "username": "jackmott42",
            "num_likes": 7,
            "num_retweets": 5,
            "num_replies": 3
        },
        "1099896622052401152": {
            "id": "1099896622052401152",
            "text": "Today, I released my crate onigiri 0.1.12. This time I deleted/changed a little wasted part. And I made doc-comment more visible :) #rustlang @rustlang https://crates.io/crates/onigiri\u00a0",
            "username": "masahiko_ofgp",
            "num_likes": 4,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1099818773652127745": {
            "id": "1099818773652127745",
            "text": "I've released version 0.3 of agnes (https://github.com/jblondin/agnes\u00a0), a data preprocessing / aggregation library for @rustlang! It's still super early in development, but I feel like it's starting to have some potential as a useful crate for data wrangling",
            "username": "jblondin",
            "num_likes": 33,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1099820162839207937": {
            "id": "1099820162839207937",
            "text": "Here\u2019s another nice @rustlang iterator trick: if you have an iterator which yields items of type Result<T, E>, you can collect them into a Result<Vec<T>, E>. I.e. you get either Ok(Vec<T>) if if everything is Ok, or an Err(E) if any item is an error.",
            "username": "zargony",
            "num_likes": 30,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1099743573283622917": {
            "id": "1099743573283622917",
            "text": "Colleagues at work asked me to give an intro to @rustlang workshop which we recorded. It's based on the similar material by @Jonhoo. Let me know what you think!https://youtu.be/DWNyZXUC1u4\u00a0",
            "username": "ryan_levick",
            "num_likes": 87,
            "num_retweets": 26,
            "num_replies": 1
        },
        "1099752587128037376": {
            "id": "1099752587128037376",
            "text": "Some good tips on @rustlang error handling in this thread :)https://twitter.com/HeavyPackets/status/1099748156600918016\u00a0\u2026",
            "username": "jntrnr",
            "num_likes": 21,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1099773464590934021": {
            "id": "1099773464590934021",
            "text": "Craziest @rustlang trick that I learned recently \u2014 if you have an Iterator, which yields Result<T> each time, you can use Iterator::flatten to get only Ok(T) values from it: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=1a430a0e71934f93cc6910beece63818\u00a0\u2026",
            "username": "svartalf",
            "num_likes": 66,
            "num_retweets": 5,
            "num_replies": 2
        },
        "1099450510573228033": {
            "id": "1099450510573228033",
            "text": "Bad news: I am currently stuck in an airport with an unending delay.\nGood news: I uploaded the first stream video of working on my Wireless Sensor Node platform in @rustembedded.\n\nInterested in #embedded, #rustlang, or #IoT? Check it out:https://www.youtube.com/watch?v=S0VI70nY6Vo\u00a0\u2026",
            "username": "bitshiftmask",
            "num_likes": 38,
            "num_retweets": 9,
            "num_replies": 1
        },
        "1099547210226647040": {
            "id": "1099547210226647040",
            "text": "After a marathon 18 months of design and discussion we're closing in on a path towards structured logging in the #rustlang log crate! Please jump in and leave a comment if you feel like there's something important that's not coveredhttps://github.com/rust-lang-nursery/log/pull/296#issuecomment-466736539\u00a0\u2026",
            "username": "KodrAus",
            "num_likes": 93,
            "num_retweets": 24,
            "num_replies": 0
        },
        "1099505777453088773": {
            "id": "1099505777453088773",
            "text": "March's @Rustlang Melbourne meetup is up \n\nThanks @mowog and @GreenSynchttps://www.meetup.com/Rust-Melbourne/events/259230502\u00a0\u2026",
            "username": "alfiedotwtf",
            "num_likes": 9,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1099540900689125376": {
            "id": "1099540900689125376",
            "text": "TIL about @rustlang:\ncargo -Z minimal-versions\n\nthe good: you can see if the lower bounds of your dependencies are actually correct\n\nthe bad: no one does this, so most paths of even the very latest dependencies (even high profile ones such as rayon) lead to Rust <1.0 code.",
            "username": "CryZe107",
            "num_likes": 49,
            "num_retweets": 10,
            "num_replies": 2
        },
        "1099615622722404352": {
            "id": "1099615622722404352",
            "text": "Is anyone having this issues with @rustlang @rustwasm in chrome: using JsFuture::from(promise) makes the browser crash while firefox handles it without any troubles :/",
            "username": "IcanDivideBy0",
            "num_likes": 11,
            "num_retweets": 2,
            "num_replies": 2
        },
        "1099630086809153536": {
            "id": "1099630086809153536",
            "text": "Mon seul regret pour ce premier @DevfestBdM c'est d'avoir rat\u00e9 ce talk \"#WebAssembly et @rustlang\" par @triskeon qui est tomb\u00e9 en m\u00eame temps que notre talk sur Vue.js !! Damned. Des slides seront dispo ?https://twitter.com/FunkyPiwy/status/1098892120075706368\u00a0\u2026",
            "username": "ogadaki",
            "num_likes": 9,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1099489531835891715": {
            "id": "1099489531835891715",
            "text": "The first part of our @rustlang TCP implementation journey is now up at https://www.youtube.com/watch?v=bzja9fQWzdA\u00a0\u2026. Definitely some way left to go, but we got to the point where we can perform a TCP handshake with a \"normal\" client and then shut down the connection cleanly :D Stay tuned for more!",
            "username": "Jonhoo",
            "num_likes": 85,
            "num_retweets": 8,
            "num_replies": 1
        },
        "1099082696956018688": {
            "id": "1099082696956018688",
            "text": " local  #rustlang folks, it's that time again. Come out and enjoy the company of @sscdotopen and your other #rustnyc friends the first week of March at MeetupHQhttps://www.meetup.com/Rust-NYC/events/258983629/\u00a0\u2026",
            "username": "softprops",
            "num_likes": 6,
            "num_retweets": 4,
            "num_replies": 1
        },
        "1099122820347383809": {
            "id": "1099122820347383809",
            "text": "My first real Rust crate! \n\nInfer - Small crate to infer file and MIME type by checking the magic numbers signature.\n\nhttps://github.com/bojand/infer\u00a0\n\nWould appreciate review and constructive feedback! \n#rust #rustlang",
            "username": "bojantweets",
            "num_likes": 41,
            "num_retweets": 3,
            "num_replies": 2
        },
        "1099126342002585602": {
            "id": "1099126342002585602",
            "text": "ayyyy finally published my first couple of #rustlang crates.  a simple bindgen wrapper and the start of a wrapper around it, both for an api that ships with an off highway vehicle controller.  https://crates.io/crates/owa4x\u00a0",
            "username": "garmoth",
            "num_likes": 8,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1099169012116787200": {
            "id": "1099169012116787200",
            "text": "#rustlang peeps, I'm making a client for an HTTP API (w/ reqwest). For unit tests, I want a fake that I can control. I created a trait w/ the reqwest::Client fns I need (get, etc..), & implemented them for my fake. How do I tell Rust reqwest::Client already implements this trait?",
            "username": "yarmiganosca",
            "num_likes": 8,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1099324344096952321": {
            "id": "1099324344096952321",
            "text": "what is the best ide for #rustlang?",
            "username": "lukaszsawickiwx",
            "num_likes": 10,
            "num_retweets": 3,
            "num_replies": 24
        },
        "1099363015869284353": {
            "id": "1099363015869284353",
            "text": "Got my @rustlang embedded \u201chello world\u201d working... pic.twitter.com/kGiENvLBid",
            "username": "gcollazo",
            "num_likes": 160,
            "num_retweets": 20,
            "num_replies": 3
        },
        "1099233223932956672": {
            "id": "1099233223932956672",
            "text": "i'm working on organizing the SF @rustlang meetup for mid-march, and we need another speaker!\n\ntalks will be ~30 minutes long and i expect they'll be recorded.\n\ndo you know anyone with a great tale of rustic adventure? have you been hacking on something really fun and silly?",
            "username": "adam_n_p",
            "num_likes": 13,
            "num_retweets": 4,
            "num_replies": 2
        },
        "1099069423535734784": {
            "id": "1099069423535734784",
            "text": "New blog post, talking about the planned changes to how the #rustlang lang team operates: http://smallcultfollowing.com/babysteps/blog/2019/02/22/rust-lang-team-working-groups/\u00a0\u2026",
            "username": "nikomatsakis",
            "num_likes": 66,
            "num_retweets": 24,
            "num_replies": 0
        },
        "1099015160214228992": {
            "id": "1099015160214228992",
            "text": "we use Pipelines CI for http://docs.rs\u00a0. for a while we even had an automated deploy step when something got merged into master, but that config fell out of date when we switched servers and we never took it outhttps://github.com/rust-lang/docs.rs/blob/master/azure-pipelines.yml\u00a0\u2026",
            "username": "QuietMisdreavus",
            "num_likes": 11,
            "num_retweets": 2,
            "num_replies": 0
        },
        "1099007933503995905": {
            "id": "1099007933503995905",
            "text": "Here is a rust-lang example Pipeline if you want one:https://github.com/graphql-rust/juniper\u00a0\u2026",
            "username": "martinwoodward",
            "num_likes": 19,
            "num_retweets": 4,
            "num_replies": 1
        },
        "1099009843967471617": {
            "id": "1099009843967471617",
            "text": "We\u2019re proud to announce we\u2019ve got @rustlang @rustembedded running on the new Cortex-M33 powered @NordicTweets nRF9160 LTE SiP \u2013 bringing Rust\u2019s combination of performance, security and productivity to a whole new class of low-power connected devices.",
            "username": "42Technology",
            "num_likes": 78,
            "num_retweets": 16,
            "num_replies": 4
        },
        "1099009844915392512": {
            "id": "1099009844915392512",
            "text": "This LED blinking example is written in pure @rustlang @rustembedded and will chain load from @nordictweet\u2019s \u2018secure-boot\u2019 bootloader. Watch this space for Rust bindings to their LTE/socket library pic.twitter.com/PVX9s1VKvH",
            "username": "42Technology",
            "num_likes": 41,
            "num_retweets": 2,
            "num_replies": 2
        },
        "1098996877674967040": {
            "id": "1098996877674967040",
            "text": "Has anyone used @AzureDevOps (Pipelines CI) with @rustlang before? I'd be interested in giving it a shot with @tokio_rs, but I have no idea how to use it (and I didn't RTFM...)",
            "username": "carllerche",
            "num_likes": 10,
            "num_retweets": 4,
            "num_replies": 6
        },
        "1098999041080332288": {
            "id": "1098999041080332288",
            "text": "The new 0.13.0 release of the GStreamer @rustlang bindings is out now. Get it while it's hot!\n\nThis release again features many additions, API improvements and bugfixes. Check the release notes for details.\n\nhttps://gstreamer.freedesktop.org/news/#2019-02-22T15:00:00Z\u00a0\u2026",
            "username": "gstreamer",
            "num_likes": 26,
            "num_retweets": 10,
            "num_replies": 0
        },
        "1098802492865826816": {
            "id": "1098802492865826816",
            "text": "Next @rustlang Melbourne is going to be fun. If you can host, please DM me (March 25th)",
            "username": "alfiedotwtf",
            "num_likes": 8,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1098803314903240706": {
            "id": "1098803314903240706",
            "text": " e028: Meet My Associates\u2014Associated items in @rustlang: functions and methods, constants, types, and (very briefly; I\u2019ll cover them in detail when they stabilize!) Generic Associated Types (GATs).\n\n https://newrustacean.com/show_notes/e028/\u00a0\u2026",
            "username": "newrustacean",
            "num_likes": 17,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1098872841154584578": {
            "id": "1098872841154584578",
            "text": "Pour accompagner les d\u00e9veloppeurs dans leurs usages du langage #Rustlang , l\u2019ANSSI propose un nouveau \u00ab Guide pour d\u00e9velopper des applications s\u00e9curis\u00e9es en Rust \u00bb  #VendrediLecture \nParticipez avec nos \u00e9quipes \u00e0 la cr\u00e9ation de ce document !\nhttps://www.ssi.gouv.fr/actualite/participez-a-la-creation-du-nouveau-guide-pour-developper-des-applications-securisees-en-rust-de-lanssi/\u00a0\u2026pic.twitter.com/W7VzkLvbJY",
            "username": "ANSSI_FR",
            "num_likes": 94,
            "num_retweets": 51,
            "num_replies": 2
        },
        "1098903598514073600": {
            "id": "1098903598514073600",
            "text": "Are you keen to work professionally with @rustlang ? We (@CoBloXLab) are looking to expand our team so that we can #connectalltheblockchains!\nhttps://tenx.workable.com/jobs/689268\u00a0\n@ThisWeekInRust",
            "username": "oetzn",
            "num_likes": 11,
            "num_retweets": 4,
            "num_replies": 1
        },
        "1098922373951250437": {
            "id": "1098922373951250437",
            "text": "Version 1.1.0 of the @rustlang extension for @AzureDevOps is out!\n\nWhat's new:\n- Version 1.0.3 introduced a critical issue when a command has multiple options. Fixed \n- Working folder that contains Cargo.toml (usefull for monorepo )\n\nEnjoy!\n\nhttps://github.com/spontoreau/rust-azure-devops\u00a0\u2026",
            "username": "spontoreau",
            "num_likes": 15,
            "num_retweets": 12,
            "num_replies": 0
        },
        "1098938459056734208": {
            "id": "1098938459056734208",
            "text": "Do any @rustlang peeps know what the craic is with #ironframework? Last I heard it was no longer being maintained, but that seems to have changed? Is it safe to rely upon? #rustlang #arewewebyet",
            "username": "benbrunto",
            "num_likes": 5,
            "num_retweets": 2,
            "num_replies": 4
        },
        "1098733756515405824": {
            "id": "1098733756515405824",
            "text": "Ever wanted to talk to a warm crowd in the heart of the Chinese capital about your favorite hacking? Now you can! Less than 7 days to submit to our CFP!\n\nhttp://cfp.rustcon.asia/\u00a0\n\nCc @rustlang",
            "username": "RustConAsia",
            "num_likes": 12,
            "num_retweets": 8,
            "num_replies": 0
        },
        "1098686175303401472": {
            "id": "1098686175303401472",
            "text": "Instantly  made me think of @rustlanghttps://twitter.com/FredStroem/status/1098317222034968581\u00a0\u2026",
            "username": "i_ostafi",
            "num_likes": 49,
            "num_retweets": 5,
            "num_replies": 1
        },
        "1098074947669426176": {
            "id": "1098074947669426176",
            "text": "Used serde_json for the first time. WOW! Built my struct, pointed it to a string and BAM - all parsed. #rust #rustlang Amazing that doing something like this in a systems programming language is this easy",
            "username": "EliBenPorat",
            "num_likes": 44,
            "num_retweets": 3,
            "num_replies": 2
        },
        "1098323559984885760": {
            "id": "1098323559984885760",
            "text": "Just discovered @exercism_io and enrolled in the @exercism_rust track. Learn (or improve) your programming skills among 48 languages, with real human mentors. Wow, just wow ! #learning #mentors #rust",
            "username": "stiiifff",
            "num_likes": 21,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1098252068006055936": {
            "id": "1098252068006055936",
            "text": "A pattern I've been enjoying in #rustlang is disabling mutability for \"finalized\" configuration, even in mutable owned copies of a thing, preventing misuse. Done by wrapping it in a newtype with a private inner value that implements Deref but not DerefMut:\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=55e3a630e9b91dd8d8da987914d308ee\u00a0\u2026",
            "username": "sadisticsystems",
            "num_likes": 27,
            "num_retweets": 4,
            "num_replies": 1
        },
        "1098324115729989632": {
            "id": "1098324115729989632",
            "text": "Maybe someone in the #rustlang universe can help. I'm trying to reduce duplication between two struct implementations. With other languages, I'd use inheritance to handle this but I'm not sure how to approach it in Rust. Here's an example of the problemhttps://gist.github.com/MCluck90/994ec624aab5e18e4ee16b48da131f16\u00a0\u2026",
            "username": "MikeCluck",
            "num_likes": 11,
            "num_retweets": 2,
            "num_replies": 5
        },
        "1098360731681148928": {
            "id": "1098360731681148928",
            "text": "Part of the reason this took so long to get out is this is a total rewrite. What was once 90% Bash and 10% Python is now 100% @rustlang!\n\nh/t to @oxhacks & @clint_harris for field testing, and @Sinistersnare for his #rustlang tipz.\n\nhttps://arusahni.github.io/git-req/\u00a0",
            "username": "IAmAru",
            "num_likes": 27,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1098526171162124288": {
            "id": "1098526171162124288",
            "text": "My first blog is live, it's about #rustlang, my experiences so far.https://www.linkedin.com/feed/update/urn:li:activity:6504289161971798017\u00a0\u2026",
            "username": "GKlijs",
            "num_likes": 13,
            "num_retweets": 2,
            "num_replies": 1
        },
        "1098607535324569601": {
            "id": "1098607535324569601",
            "text": "New GDB formatters in IntelliJRust for @clion_ide !\n#rustlangpic.twitter.com/RlNJGbo6NQ",
            "username": "intellijrust",
            "num_likes": 119,
            "num_retweets": 20,
            "num_replies": 2
        },
        "1098589736392904706": {
            "id": "1098589736392904706",
            "text": "one of the loveliest things about @rustlang is, that you often google something thinking \"someone must have done that handy thing in an elegant way already\" and then ... you find in the std. Today: iter::empty()\n\nhttps://doc.rust-lang.org/std/iter/fn.empty.html\u00a0\u2026",
            "username": "gnunicornBen",
            "num_likes": 33,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1098448793417084928": {
            "id": "1098448793417084928",
            "text": "Man, @rustlang is just phenomenal.  I do a lot of data modeling from CSV files and rust + rust-csv + rayon = \n\nProcessed 205,206,117 rows of complex CSV data while doing a lot of aggregation in < 30 seconds, and I didn't even optimize anything yet!pic.twitter.com/k3wbqc6FOy",
            "username": "grumi78",
            "num_likes": 182,
            "num_retweets": 42,
            "num_replies": 6
        },
        "1098315361437474816": {
            "id": "1098315361437474816",
            "text": "Updates about my work on native-Rust GUI, text layout, splines, markdown parsing, and more:https://raphlinus.github.io/personal/2019/02/20/more-small-updates.html\u00a0\u2026",
            "username": "raphlinus",
            "num_likes": 126,
            "num_retweets": 28,
            "num_replies": 5
        },
        "1098238020531163138": {
            "id": "1098238020531163138",
            "text": "Time to implement the TCP protocol in @rustlang! We'll do it at 5pm UTC (noon EST) on https://www.youtube.com/c/JonGjengset/live\u00a0\u2026 and https://www.twitch.tv/jonfrg\u00a0 as always: https://everytimezone.com/zones/18ca9694\u00a0. I recommend giving https://tools.ietf.org/html/rfc1180\u00a0 a read if you're new to TCP.",
            "username": "Jonhoo",
            "num_likes": 106,
            "num_retweets": 22,
            "num_replies": 6
        },
        "1098247989938802688": {
            "id": "1098247989938802688",
            "text": "Version 0.11.0 of the rppal @rustlang crate for the Raspberry Pi is now available! This update adds software-based PWM for all GPIO pins, support for the Compute Module 3+ and embedded-hal trait implementations for all supported peripherals. https://crates.io/crates/rppal\u00a0",
            "username": "golemparts",
            "num_likes": 35,
            "num_retweets": 8,
            "num_replies": 1
        },
        "1098248437559115776": {
            "id": "1098248437559115776",
            "text": "Are there any admin interface for Rocket (or not for Rocket) in @rustlang?",
            "username": "CecileTonglet",
            "num_likes": 4,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1098243585294643201": {
            "id": "1098243585294643201",
            "text": "Our Call for Proposals is now open!\n\nhttps://cfp.rustconf.com\u00a0\n#rustlang #rustconf",
            "username": "rustconf",
            "num_likes": 56,
            "num_retweets": 52,
            "num_replies": 1
        },
        "1098074095214882818": {
            "id": "1098074095214882818",
            "text": "We are very proud to announce RustCon Asia 2019, happening April 20th to 23rd in Beijing, China, it will span four days, including 1.5 days of talks and 2 days of workshops. Thanks to @Cryptape and @PingCAP for making it happen! #rustcon #asia #rust https://rustcon.asia/blog/hello-asia/\u00a0\u2026",
            "username": "RustConAsia",
            "num_likes": 66,
            "num_retweets": 27,
            "num_replies": 3
        },
        "1098080953828851719": {
            "id": "1098080953828851719",
            "text": "I have shared \"My experience with Rust programming language\" http://subhojit777.in/rust-language-experience\u00a0\u2026 @rustlang",
            "username": "_subhojit_paul",
            "num_likes": 29,
            "num_retweets": 8,
            "num_replies": 1
        },
        "1098120846550405120": {
            "id": "1098120846550405120",
            "text": "Does anyone in the @rustlang community want to contribute to the fastest rust template engine? Check out our new crate Yarte!!\nhttps://github.com/rust-iendo/yarte\u00a0\u2026",
            "username": "r_iendo",
            "num_likes": 23,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1098147406598819841": {
            "id": "1098147406598819841",
            "text": "I may say with pride that @thoughtworks just got their first tool powered by @rustlang :https://github.com/thoughtworks/expend-rs\u00a0\u2026",
            "username": "theelbasian",
            "num_likes": 22,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1098190774460735488": {
            "id": "1098190774460735488",
            "text": "I haven't seen it until now, but @rustlang MIRI is available in the playground (Tools -> MIRI) and detects undefined behaviour in this code snippet.\n\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2015&gist=d15868687f79072688a0d0dd1e053721\u00a0\u2026",
            "username": "Argorak",
            "num_likes": 10,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1098218372469268480": {
            "id": "1098218372469268480",
            "text": " The 15th #embedded @rustlang Working Group Newsletter is out!\n\n Find out what happened at the Rust all hands on the embedded front. Also news about the embedded showcase, 64-bit RISCV support and more!\n\nhttps://rust-embedded.github.io/blog/newsletter-15/\u00a0\u2026",
            "username": "rustembedded",
            "num_likes": 41,
            "num_retweets": 21,
            "num_replies": 1
        },
        "1098189728497762304": {
            "id": "1098189728497762304",
            "text": "Check out what we've been up to at Embark! Beyond writing a lot of new stuff in @rustlang (more about that later, promise)https://twitter.com/EmbarkStudios/status/1098178978341404674\u00a0\u2026",
            "username": "repi",
            "num_likes": 266,
            "num_retweets": 33,
            "num_replies": 20
        },
        "1097952168533872641": {
            "id": "1097952168533872641",
            "text": "Release 1.0.0 for \"Escalator,\" a simple privilege-escalation and exec-in-place binary for certain specific use-cases.\n\nMine is in Docker, USER needs to be non-root, ENTRYPOINT needs to exec as root and as PID 1 to execute systemd, works beautifully!https://github.com/naftulikay/escalator/releases/tag/v1.0.0\u00a0\u2026",
            "username": "naftulikay",
            "num_likes": 17,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1097967258079559680": {
            "id": "1097967258079559680",
            "text": "I just wrote a tiny CLI in @rustlang that automatically updates a dynamic DNS record for an @OVH domain (DynHost). Bonus: ARMv6 cross-compilation \n https://github.com/willdurand/dynhost\u00a0\u2026pic.twitter.com/8bUtxLR3zV",
            "username": "couac",
            "num_likes": 25,
            "num_retweets": 7,
            "num_replies": 3
        },
        "1097096561748779010": {
            "id": "1097096561748779010",
            "text": "Lyon, the #rustlang path tessellation crate, in 2018. https://nical.github.io/posts/lyon-2018.html\u00a0\u2026",
            "username": "nicalsilva",
            "num_likes": 35,
            "num_retweets": 7,
            "num_replies": 3
        },
        "1097133526439415809": {
            "id": "1097133526439415809",
            "text": "New blog post: One hundred Rust PRs later https://phansch.net/2019/02/18/onehundred-rust-prs/\u00a0\u2026  #rustlang",
            "username": "philhansch",
            "num_likes": 22,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1097152933106515970": {
            "id": "1097152933106515970",
            "text": "Wrote a small post about visualizing the flowgraph debug output, and how to do it with cargo-inspect #rustlang . Nothing revolutionary, just thought it might be interesting to some people.https://jonathansteyfkens.com/posts/visualizing-rust.html\u00a0\u2026",
            "username": "Jonathansty",
            "num_likes": 16,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1097348423123128321": {
            "id": "1097348423123128321",
            "text": "An underappreciated (imo) #rustlang feature is the struct update syntax: https://doc.rust-lang.org/nightly/book/ch05-01-defining-structs.html#creating-instances-from-other-instances-with-struct-update-syntax\u00a0\u2026\n\nSuper useful when you want *mostly* default fields on a struct, but you want to set explicit values for one or two",
            "username": "randomPoison",
            "num_likes": 42,
            "num_retweets": 5,
            "num_replies": 2
        },
        "1097801126211022848": {
            "id": "1097801126211022848",
            "text": "Fellow #rustlang users: can anybody explain exactly why doesn't this compile? https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=011be2c366fa405402944cbf12a84235\u00a0\u2026\n\nThank you <3",
            "username": "yrashk",
            "num_likes": 4,
            "num_retweets": 1,
            "num_replies": 3
        },
        "1095637709903810560": {
            "id": "1095637709903810560",
            "text": "Layer for load balancer with dynamic configuration loading written in #rusthttps://buff.ly/2WYRCmZ\u00a0",
            "username": "ifraixedes",
            "num_likes": 9,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1097635202610982912": {
            "id": "1097635202610982912",
            "text": "Do you <3 @rustlang ? We do :3\n\nWe just added support for indexing the amazing advisory @RustSec !\nFire up a #Vulnerability #Management #Rust watcher today:\nhttps://watchers.firosolutions.com\u00a0",
            "username": "FiroSolutions",
            "num_likes": 18,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1097775406852304896": {
            "id": "1097775406852304896",
            "text": "Yes @rustlang events are spreading globally! After the first South-American Rust conference, Asia gets their own conf!\n Rustcon Asia in Beijing, coming this April 20-23!\nCFP is open!  https://rustcon.asia/\u00a0",
            "username": "slsoftworks",
            "num_likes": 50,
            "num_retweets": 21,
            "num_replies": 3
        },
        "1097326549353680897": {
            "id": "1097326549353680897",
            "text": "We are planning to look into it! (If you know of a memory-intensive @rustlang benchmark, that'd help!)",
            "username": "emeryberger",
            "num_likes": 21,
            "num_retweets": 3,
            "num_replies": 5
        },
        "1097315207859253248": {
            "id": "1097315207859253248",
            "text": "I have an idea in @rustlang where I want to model my entire app as a set of composed Futures that resolve/complete when the app is finished / shut down.\n\nIs that the \"right\" way of doing things for an app that will include an API server as well as DB IO and periodic tasks?",
            "username": "rossipedia",
            "num_likes": 3,
            "num_retweets": 1,
            "num_replies": 4
        },
        "1097411491978973186": {
            "id": "1097411491978973186",
            "text": "You can live without #Exceptions, If you are using #rust https://blog.knoldus.com/you-can-live-without-exceptions-if-you-are-using-rust/\u00a0\u2026 @rustlang @ThisWeekInRust @read_rust @newrustacean @RustBridge @rustconf @RustStatus @RustFest",
            "username": "ayushmishra2005",
            "num_likes": 15,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1097420583250395136": {
            "id": "1097420583250395136",
            "text": "There\u2019s still a couple of spaces to join our free Rust Hack & Learn #cambridgemeetup on 21 February 6.30-9pm. If you\u2019re a #rust #programmer with a side project you\u2019ve always wanted to jump into, why not join us?https://buff.ly/2RTxsfC\u00a0",
            "username": "repositiveio",
            "num_likes": 12,
            "num_retweets": 9,
            "num_replies": 1
        },
        "1097447664147419136": {
            "id": "1097447664147419136",
            "text": "Going to do another @rustlang livestream today at ~4pm CET https://www.twitch.tv/yoshuawuyts\u00a0.\n\nIt's been a while since I last streamed; and also haven't been coding as much lately. Figured we could combine both!",
            "username": "yoshuawuyts",
            "num_likes": 14,
            "num_retweets": 1,
            "num_replies": 1
        },
        "1097457867643330561": {
            "id": "1097457867643330561",
            "text": "Btw, @itchio, I've sent a request to add @rustlang to https://itch.io/game-development/frameworks\u00a0\u2026 tools list. It'd be cool to have a https://itch.io/games/made-with-rust\u00a0\u2026 page :)",
            "username": "ozkriff",
            "num_likes": 11,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1097470398277402624": {
            "id": "1097470398277402624",
            "text": "Fourth blog in my series of blogs about @Scala developer experience with @rustlang . This post talks about Algebraic Data Type support in Rust and Scala. http://blog.madhukaraphatak.com/rust-scala-part-4/\u00a0\u2026 #rust #scala #programming",
            "username": "madhukaraphatak",
            "num_likes": 16,
            "num_retweets": 8,
            "num_replies": 0
        },
        "1097252064747577344": {
            "id": "1097252064747577344",
            "text": "Any @rustlang / musl / docker experts - not sure where I'm going wrong https://stackoverflow.com/questions/54738013/rust-musl-docker-image-cannot-find-cargo\u00a0\u2026 #rustlang",
            "username": "opensourcegeekz",
            "num_likes": 12,
            "num_retweets": 7,
            "num_replies": 2
        },
        "1097252481942183936": {
            "id": "1097252481942183936",
            "text": "I found it! @rustlangpic.twitter.com/HtJmUvGOid",
            "username": "josh_triplett",
            "num_likes": 67,
            "num_retweets": 8,
            "num_replies": 2
        },
        "1097219234285961216": {
            "id": "1097219234285961216",
            "text": "A group submitted a hackathon project for a @NuCypher bounty using our NuFHE library (TFHE on GPU).\n\nVery impressed with it. They use @rustlang to compile to EWASM and then interpret it to compute fully homomorphic logic gates. They used it to detect genetic mutations. Way cool!",
            "username": "__Tux",
            "num_likes": 49,
            "num_retweets": 15,
            "num_replies": 2
        },
        "1097189927983427584": {
            "id": "1097189927983427584",
            "text": "I created a monster: https://github.com/indutny/tokio-lock/blob/master/src/lib.rs\u00a0\u2026\n\n...in @rustlang and @tokio_rs",
            "username": "indutny",
            "num_likes": 24,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1097151811549609984": {
            "id": "1097151811549609984",
            "text": "A weekend of pain condensed into a blog post: Cross compiling @rustlang programs from Linux to macOS https://wapl.es/rust/2019/02/17/rust-cross-compile-linux-to-macos.html\u00a0\u2026",
            "username": "jam_waffles",
            "num_likes": 45,
            "num_retweets": 13,
            "num_replies": 1
        },
        "1097139912636284928": {
            "id": "1097139912636284928",
            "text": "The team of lovely people that made Link are looking for backend engineers to help break down barriers for music makers. \n\nCome work with @abletondev in Berlin. Mainly @golang, @Docker and @kubernetesio, but exposure to @rustlang, C++ and @swiftlang too.\n\nhttps://www.ableton.com/en/jobs/apply/105339/\u00a0\u2026pic.twitter.com/BIVVHqqfFz",
            "username": "nburdy",
            "num_likes": 59,
            "num_retweets": 17,
            "num_replies": 1
        },
        "1097133927561457664": {
            "id": "1097133927561457664",
            "text": "Note: If the error comes from one of our derives, please make sure you're using a nightly compiler with the `unstable` feature enabled, as we've put a lot of work into making those better (using nightly only features)",
            "username": "dieselframework",
            "num_likes": 3,
            "num_retweets": 1,
            "num_replies": 0
        },
        "1097133459909226497": {
            "id": "1097133459909226497",
            "text": "We're taking another look at improving our compiler errors. Have you gotten a poor error message while using Diesel? Please leave a comment on https://github.com/diesel-rs/diesel/issues/151#issuecomment-464460416\u00a0\u2026 so we can look into improving it this year",
            "username": "dieselframework",
            "num_likes": 30,
            "num_retweets": 16,
            "num_replies": 1
        },
        "1096867574141181952": {
            "id": "1096867574141181952",
            "text": "Just published my second #rust crate! lazy_format! allows you to format things lazily. It captures its arguments into an opaque struct, allowing you to build up complex format objects without intermediary allocation. https://crates.io/crates/lazy_format\u00a0\u2026 @rustlang @ThisWeekInRust #rustlang",
            "username": "Lucretiel",
            "num_likes": 33,
            "num_retweets": 10,
            "num_replies": 2
        },
        "1096878246384357382": {
            "id": "1096878246384357382",
            "text": "alright Rust friends, I need your help. I put my experiments in this repository: https://github.com/Geal/nomfun\u00a0\nPlease optimize it and help me prove that it can get as fast as nom. If it works, we\u2019ll have an awesome new design for nom, easier to use, debug, etc :)",
            "username": "gcouprie",
            "num_likes": 24,
            "num_retweets": 11,
            "num_replies": 3
        },
        "1097099524504354817": {
            "id": "1097099524504354817",
            "text": "Just noticed how easy it is to search @rustlang packages with @DuckDuckGopic.twitter.com/MFQ6wBqFXS",
            "username": "SergeyGalich",
            "num_likes": 121,
            "num_retweets": 18,
            "num_replies": 5
        },
        "1096504457314136072": {
            "id": "1096504457314136072",
            "text": "I have finished implementing \"Ray Tracing in One Weekend\" by @Peter_shirley in @rustlang.  This post documents some of my struggles in changing my mindsets from C++ to Rust's memory ownership model.\n\nhttps://rushtonality.com/2019/02/15/my-tour-of-rust-day-4-ray-tracing-part-2/\u00a0\u2026\n#rust #rustlang #raytracing #learntocode",
            "username": "rushtonality",
            "num_likes": 82,
            "num_retweets": 16,
            "num_replies": 3
        },
        "1096652788594024449": {
            "id": "1096652788594024449",
            "text": "Roses are red,\nviolets are blue.\nI think @glitch and @rustlang\nshould be friends, don't you?\n\nhttps://hello-rust-actix.glitch.me/\u00a0",
            "username": "karlmdavis",
            "num_likes": 23,
            "num_retweets": 4,
            "num_replies": 2
        },
        "1096782736528949248": {
            "id": "1096782736528949248",
            "text": "alright, there's definitely a perf regression in last rust stable, when testing on https://github.com/rust-bakery/parser_benchmarks/blob/master/http/nom-http/src/main.rs\u00a0\u2026\n@rustlang any idea what happened on the perf side between 1.31 and 1.32?pic.twitter.com/EWPSLqxniw",
            "username": "gcouprie",
            "num_likes": 11,
            "num_retweets": 4,
            "num_replies": 1
        },
        "1096787008045891584": {
            "id": "1096787008045891584",
            "text": "Released a small @rustlang helper crate: https://crates.io/crates/tokio_interval_buffer\u00a0\u2026\nProvides an buffer that can be used to buffer a tokio stream and emit the values at a regular interval.",
            "username": "victorkoenders",
            "num_likes": 10,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1096805400853258240": {
            "id": "1096805400853258240",
            "text": "I don't think typed HTML in @rustlang should make me as happy as it does. This is extremely my shit.pic.twitter.com/NnWOGSQATO",
            "username": "sudoreboot",
            "num_likes": 238,
            "num_retweets": 35,
            "num_replies": 12
        },
        "1096759645039984640": {
            "id": "1096759645039984640",
            "text": "Curious to follow along with the #rustlang compiler team meetings? We have a publicly subscribable calendar now:https://internals.rust-lang.org/t/rust-compiler-team-public-calendar/9456\u00a0\u2026",
            "username": "nikomatsakis",
            "num_likes": 38,
            "num_retweets": 14,
            "num_replies": 0
        },
        "1096829576309850114": {
            "id": "1096829576309850114",
            "text": "I wanted @andrestaltz xstream library, but for @rustlang. So I made it myself https://docs.rs/froop/0.1.0/froop/index.html\u00a0\u2026",
            "username": "algstn",
            "num_likes": 26,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1096445907531456512": {
            "id": "1096445907531456512",
            "text": "What is the best chat service for @rustlang ? For a newbie like me?",
            "username": "detronizator",
            "num_likes": 5,
            "num_retweets": 1,
            "num_replies": 4
        },
        "1096450171460702208": {
            "id": "1096450171460702208",
            "text": "\u00a1El pr\u00f3ximo mi\u00e9rcoles nos vemos en nuestra reuni\u00f3n mensual! En esta ocasi\u00f3n hablaremos de uno de los temas m\u00e1s interesantes dentro de @rustlang: el modelo de propiedad http://meetu.ps/e/GpQfD/w3VZL/d\u00a0",
            "username": "rustlang_mx",
            "num_likes": 7,
            "num_retweets": 4,
            "num_replies": 0
        },
        "1096423003808825345": {
            "id": "1096423003808825345",
            "text": "I wrote a high-level overview of why I think @rustlang is _the_ language that will unlock the potential of WebAssembly. https://opensource.com/article/19/2/why-use-rust-webassembly\u00a0\u2026pic.twitter.com/Pw94yGdLG1",
            "username": "ryan_levick",
            "num_likes": 70,
            "num_retweets": 13,
            "num_replies": 3
        },
        "1095977366684225536": {
            "id": "1095977366684225536",
            "text": "I start blogging about Rust Programming Language, and the first post is just published. Feedback is welcome. Thanks. \nhttps://odetorust.com/a-brief-introduction-to-rust/\u00a0\u2026\n#rustlang #Rust",
            "username": "thannyinyi",
            "num_likes": 36,
            "num_retweets": 13,
            "num_replies": 5
        },
        "1095992641857175552": {
            "id": "1095992641857175552",
            "text": "Documentation is the key in every project. So come to our @rustlang meetup Monday, February 18th in Z\u00fcrich.  We are very excited to have Beth Aitman give a practical guide to making good documentation in Rust (and other programming languages)!https://www.meetup.com/Rust-Zurich/events/257893384/\u00a0\u2026",
            "username": "dns2utf8",
            "num_likes": 15,
            "num_retweets": 3,
            "num_replies": 2
        },
        "1096083450363330560": {
            "id": "1096083450363330560",
            "text": "Don't forget to update your IntelliJRust! This one's huge! Highlights:\n- Code completion is now smarter than ever. Just start typing!\n- Substantial improvements of cargo check annotator.\n- New formatters for GDB in @CLion_ide.\nLearn more at https://intellij-rust.github.io/2019/02/14/changelog-92.html\u00a0\u2026\n#rustlangpic.twitter.com/ys6PCvJ5vJ",
            "username": "intellijrust",
            "num_likes": 127,
            "num_retweets": 36,
            "num_replies": 3
        },
        "1096146648152059907": {
            "id": "1096146648152059907",
            "text": "New WebAssembly article:\n\nHow we replaced a JavaScript hot path in https://squoosh.app\u00a0 with WebAssembly to get predictable performance across all browsers.\n\nFeaturing:\n C & Emscripten\n AssemblyScript\n Rust\n\nArticle here  https://developers.google.com/web/updates/2019/02/hotpath-with-wasm\u00a0\u2026pic.twitter.com/5Yi3N9S8ZF",
            "username": "DasSurma",
            "num_likes": 425,
            "num_retweets": 117,
            "num_replies": 12
        },
        "1096398207800758272": {
            "id": "1096398207800758272",
            "text": "Headless Chrome, https://github.com/atroche/rust-headless-chrome\u00a0\u2026.\n\nA Rust crate \u00e0 la puppeteer to control a Chrome instance programmatically; e.g. useful for testing.\n\n#rustlang #chrome #headless #testing",
            "username": "mnt_io",
            "num_likes": 44,
            "num_retweets": 5,
            "num_replies": 1
        },
        "1096399962051657728": {
            "id": "1096399962051657728",
            "text": "You can transform your json into a structure / an object in your favorite language : https://transform.now.sh/\u00a0 . Works with @rustlang !",
            "username": "julian__didier",
            "num_likes": 39,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1096376915387207680": {
            "id": "1096376915387207680",
            "text": "@rustlang Brno(CZ) meetup has a new Telegram communication channel and Facebook page. Check them here: https://rust-brno.github.io/\u00a0 and share your proposals for the next meetup.",
            "username": "MartinSehnoutka",
            "num_likes": 6,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1096389338211016705": {
            "id": "1096389338211016705",
            "text": "I am so impressed with @rustlang support for #WebAssembly using the wasm-bindgen tools! Just finished implementing a #WebGL backend to my toy renderer in addition to #OpenGL. This makes it possible to build the same application to both desktop and web!\n\n@rustwasm #rustwasmpic.twitter.com/hhOMXUFphv",
            "username": "AsgerNyman",
            "num_likes": 407,
            "num_retweets": 99,
            "num_replies": 9
        },
        "1096191097674625026": {
            "id": "1096191097674625026",
            "text": "To all @rustlang experts out there: how do you pass around \"impl Trait\" objects across methods, threads and closures? The fact that the \"Trait object isn't Sized\" keeps getting in the way of my flow.",
            "username": "detronizator",
            "num_likes": 14,
            "num_retweets": 1,
            "num_replies": 4
        },
        "1096080567043612673": {
            "id": "1096080567043612673",
            "text": "My colleague Andrii (@antti_ua) has posted a blog post about how our team, Logistics Algorithms, migrated one of our most important services from Ruby to Rust! This was a really exciting project which resulted in an amazing 17x speed-up! https://deliveroo.engineering/2019/02/14/moving-from-ruby-to-rust.html\u00a0\u2026",
            "username": "DeliverooEng",
            "num_likes": 104,
            "num_retweets": 39,
            "num_replies": 2
        },
        "1096112398442942464": {
            "id": "1096112398442942464",
            "text": "Hey @rustlang (and @rustembedded and @rustwasm) people, I put together a Pre-RFC for making Cargo be aware of `std` and `core`!\n\nHeres the PR: https://github.com/jamesmunns/rfcs/pull/1\u00a0\u2026\nHeres a rendered copy of the RFC: https://github.com/jamesmunns/rfcs/blob/cargo-the-std-awakens/text/0000-std-aware-cargo.md\u00a0\u2026\n\nI'd love any feedback (on the PR link)!",
            "username": "bitshiftmask",
            "num_likes": 48,
            "num_retweets": 20,
            "num_replies": 1
        },
        "1096121978115760128": {
            "id": "1096121978115760128",
            "text": "Happy Valentine's @rustlang , with love from https://crates.io/crates/embedded-graphics\u00a0\u2026 pic.twitter.com/7Y45TbYnvS",
            "username": "jam_waffles",
            "num_likes": 69,
            "num_retweets": 8,
            "num_replies": 1
        },
        "1096075723268337664": {
            "id": "1096075723268337664",
            "text": "@PingCAP has some great starter issues for anyone wanting to get involved with opensource @rustlang https://github.com/tikv/tikv/labels/D%3A%20Easy\u00a0\u2026",
            "username": "toidiuCodes",
            "num_likes": 14,
            "num_retweets": 7,
            "num_replies": 0
        },
        "1096079909225676800": {
            "id": "1096079909225676800",
            "text": "Learn how @rustlang avoids spaghetti sharing collisions and ensures concurrency without data races!  @mozhacks\nhttps://hacks.mozilla.org/2019/02/fearless-security-thread-safety/\u00a0\u2026pic.twitter.com/Tj0ngtkKjd",
            "username": "avadacatavra",
            "num_likes": 32,
            "num_retweets": 15,
            "num_replies": 0
        },
        "1096077969683083265": {
            "id": "1096077969683083265",
            "text": "As promised, @avadacatavra is back exploring high-performance multi-threaded computing. Today's topic: managing concurrency (with the @rustlang compiler lending a helping hand)https://hacks.mozilla.org/2019/02/fearless-security-thread-safety/\u00a0\u2026",
            "username": "mozhacks",
            "num_likes": 21,
            "num_retweets": 10,
            "num_replies": 1
        },
        "1096029004400914433": {
            "id": "1096029004400914433",
            "text": "We've extended our CFP through the weekend to allow for some last minute submissions!\n\nFor all accepted speakers, we offer paid flights and hotel, as well as free attendance to the conference!\n\nMake sure you submit your CFP by the end of this Sunday (2019-02-17)!\n\n#rustlangpic.twitter.com/fzKi2b2ui6",
            "username": "OxidizeConf",
            "num_likes": 13,
            "num_retweets": 16,
            "num_replies": 1
        },
        "1095760181747564544": {
            "id": "1095760181747564544",
            "text": "Any @rustlang users out there that know how to build the `rustup` binary? Working on a PR and I need to test the binary.https://users.rust-lang.org/t/building-the-rustup-binary/25256\u00a0\u2026",
            "username": "naftulikay",
            "num_likes": 3,
            "num_retweets": 1,
            "num_replies": 2
        },
        "1095782259595116544": {
            "id": "1095782259595116544",
            "text": "Alright the version 1.0.3 of the @rustlang extension for @AzureDevOps has been published on the marketplace!\n\nhttps://marketplace.visualstudio.com/items?itemName=spontoreau.rust-vsts\u00a0\u2026\n\nNow it's time to add some new features in the extension https://twitter.com/spontoreau/status/1095449243047870464\u00a0\u2026",
            "username": "spontoreau",
            "num_likes": 8,
            "num_retweets": 3,
            "num_replies": 0
        },
        "1095625400867266560": {
            "id": "1095625400867266560",
            "text": "This @rustlang workshop I am attending gets interesting. I spent some time hacking on a @firefox extension written with @rustwasm, with hot reload of everything thanks to webpack and web-ext pic.twitter.com/30VafJN3i0",
            "username": "couac",
            "num_likes": 131,
            "num_retweets": 12,
            "num_replies": 7
        },
        "1095456240417861633": {
            "id": "1095456240417861633",
            "text": "The #rustlang and Gtk closures - how to handle mutability there.  http://sireliah.com/niusy/gtk_rust_mutable_object_in_closure/\u00a0\u2026 Actually some review from Rust pros would be appreciated!",
            "username": "sir_eliah",
            "num_likes": 16,
            "num_retweets": 4,
            "num_replies": 3
        },
        "1095432824239210497": {
            "id": "1095432824239210497",
            "text": "Hey @ThisWeekInRust! @FinhavenHQ is looking for a strong Software Developer with the desire to work with Rust programming language. Check out the job posting here: https://angel.co/finhaven/jobs/411238-software-developer\u00a0\u2026",
            "username": "FinhavenHQ",
            "num_likes": 15,
            "num_retweets": 5,
            "num_replies": 1
        },
        "1095423713082654721": {
            "id": "1095423713082654721",
            "text": "Check out our post-@fosdem blog post, recapping our team's European journey, with videos of @morgo on TiDB, @a_hoverbear + Jay + @breeswish from TiKV @tikvproject team talking @rustlang, and @kevinsxu on running stateful apps on #Kubernetes Operator.https://www.pingcap.com/blog/fosdem-2019-recap-global-technology-local-community/\u00a0\u2026",
            "username": "PingCAP",
            "num_likes": 20,
            "num_retweets": 8,
            "num_replies": 0
        },
        "1095434292937641984": {
            "id": "1095434292937641984",
            "text": "Join us tonight for another @rustlang Melbourne adventure!\n\nLet's get together to talk and work Rust. Bring our own projects, ask and give help, or even install Cargo for the very first time to build Hello World. All levels of experience are welcome!https://www.meetup.com/Rust-Melbourne/events/257974991/\u00a0\u2026",
            "username": "alfiedotwtf",
            "num_likes": 13,
            "num_retweets": 5,
            "num_replies": 2
        },
        "1095446953138311173": {
            "id": "1095446953138311173",
            "text": "When you're using @rustlang and your borrow semantics is on point https://twitter.com/mgattozzi/status/1095136081337552896\u00a0\u2026",
            "username": "aghecenco",
            "num_likes": 52,
            "num_retweets": 5,
            "num_replies": 0
        },
        "1095449243047870464": {
            "id": "1095449243047870464",
            "text": "I'm working on the version 1.0.3 of the @rustlang extension for @AzureDevOps. This version is a complet refactoring to ensure that new features will be implemented more easily!\n\nCurrently everything seams to work, but it needs more tests before publishing it on the market pic.twitter.com/zCMjIzQp5x",
            "username": "spontoreau",
            "num_likes": 14,
            "num_retweets": 3,
            "num_replies": 1
        },
        "1095455672030949377": {
            "id": "1095455672030949377",
            "text": "Join Kubernetes & Cloud Native STL at @1904Labs tomorrow to explore how the safety and performance focused @rustlang programming language can be used to develop efficient & secure containerized microservices! https://www.meetup.com/Kubernetes-Cloud-Native-STL/events/258503414/\u00a0\u2026\n#kubernetes #docker #cloudnative",
            "username": "HeavyPackets",
            "num_likes": 18,
            "num_retweets": 9,
            "num_replies": 0
        },
        "1095329146484404224": {
            "id": "1095329146484404224",
            "text": " @code @rustlang crates 0.3.7 is out with better Cargo.toml support. Manage your dependencies easily from editor. \nhttps://marketplace.visualstudio.com/items?itemName=serayuzgur.crates\u00a0\u2026",
            "username": "serayuzgur",
            "num_likes": 52,
            "num_retweets": 8,
            "num_replies": 1
        },
        "1095344395744960512": {
            "id": "1095344395744960512",
            "text": "This is why we're exploring using @rustlang at Microsoft. Hopefully we'll have more to share in the coming months!https://twitter.com/campuscodi/status/1094986825041629184\u00a0\u2026",
            "username": "ryan_levick",
            "num_likes": 620,
            "num_retweets": 171,
            "num_replies": 12
        },
        "1095290801754648577": {
            "id": "1095290801754648577",
            "text": "New blog post: \"A Quick Look at Trait Objects in Rust\" https://tratt.net/laurie/blog/entries/a_quick_look_at_trait_objects_in_rust.html\u00a0\u2026",
            "username": "laurencetratt",
            "num_likes": 61,
            "num_retweets": 17,
            "num_replies": 5
        },
        "1095324915086049282": {
            "id": "1095324915086049282",
            "text": "@rustlang @rustembedded since the introduction of rust, how has the language evolved during that time period? How have developers and organisations embraced it as a low level technology?",
            "username": "_nafees90",
            "num_likes": 7,
            "num_retweets": 3,
            "num_replies": 0
        }
    },
    "tweeted": {
        "1121887191318155264": {
            "id": "1121887191318155264",
            "text": "Mozilla IRC Sunset and the Rust channelhttps://blog.rust-lang.org/2019/04/26/Mozilla-IRC-Sunset-and-the-Rust-Channel.html\u00a0\u2026",
            "username": "rustlang",
            "num_likes": 60,
            "num_retweets": 28,
            "num_replies": 8
        },
        "1121454622898622464": {
            "id": "1121454622898622464",
            "text": "Rust 1.34.1 is here!https://blog.rust-lang.org/2019/04/25/Rust-1.34.1.html\u00a0\u2026",
            "username": "rustlang",
            "num_likes": 195,
            "num_retweets": 88,
            "num_replies": 1
        },
        "1121083856080105474": {
            "id": "1121083856080105474",
            "text": "We have moved up to \u201ctrial\u201d!https://twitter.com/thoughtworks/status/1120983366008999936\u00a0\u2026",
            "username": "rustlang",
            "num_likes": 91,
            "num_retweets": 28,
            "num_replies": 1
        },
        "1120729307905609728": {
            "id": "1120729307905609728",
            "text": "Rust\u2019s 2019 roadmap:https://blog.rust-lang.org/2019/04/23/roadmap.html\u00a0\u2026",
            "username": "rustlang",
            "num_likes": 333,
            "num_retweets": 153,
            "num_replies": 1
        },
        "1118275501435629569": {
            "id": "1118275501435629569",
            "text": "What\u2019s your favorite introduction to Rust from a JS background? @jhicks154 would like some suggestions!https://twitter.com/jhicks154/status/1118274706686324736\u00a0\u2026",
            "username": "rustlang",
            "num_likes": 26,
            "num_retweets": 8,
            "num_replies": 2
        },
        "1116398059775234048": {
            "id": "1116398059775234048",
            "text": "Rust 1.34 is here!https://blog.rust-lang.org/2019/04/11/Rust-1.34.0.html\u00a0\u2026",
            "username": "rustlang",
            "num_likes": 595,
            "num_retweets": 227,
            "num_replies": 5
        },
        "1116122615393988613": {
            "id": "1116122615393988613",
            "text": "Eyes Above The Waves: Mysteriously Low Hanging Fruit: A Big Improvement To LLD For Rust Debug Builds https://robert.ocallahan.org/2019/04/mysteriously-low-hanging-fruit-big.html?m=1\u00a0\u2026",
            "username": "rustlang",
            "num_likes": 43,
            "num_retweets": 9,
            "num_replies": 0
        },
        "1115965769555300352": {
            "id": "1115965769555300352",
            "text": "A Love Letter to Rust Macros https://happens.lol/posts/a-love-letter-to-rust-macros/\u00a0\u2026",
            "username": "rustlang",
            "num_likes": 68,
            "num_retweets": 12,
            "num_replies": 0
        },
        "1115746995694637057": {
            "id": "1115746995694637057",
            "text": "Actix Web + Magic link authenticationhttps://blog.approveapi.com/tutorials/rust-actix-web-approveapi-magic-login-link/\u00a0\u2026",
            "username": "rustlang",
            "num_likes": 120,
            "num_retweets": 20,
            "num_replies": 2
        },
        "1111754820522819587": {
            "id": "1111754820522819587",
            "text": "Five Super Helpful Rust Things That Nobody Told You About*\n\n* no refund if someone did actually tell you about them already https://saghm.github.io/five-rust-things/?utm_source=share&utm_medium=ios_app\u00a0\u2026",
            "username": "rustlang",
            "num_likes": 301,
            "num_retweets": 69,
            "num_replies": 3
        },
        "1109853667677667328": {
            "id": "1109853667677667328",
            "text": "My First 3 Weeks of Professional Rust https://www.wezm.net/technical/2019/03/first-3-weeks-of-professional-rust/\u00a0\u2026",
            "username": "rustlang",
            "num_likes": 83,
            "num_retweets": 15,
            "num_replies": 0
        },
        "1107677774968426496": {
            "id": "1107677774968426496",
            "text": "We\u2019re starting a Governance Working Group!https://internals.rust-lang.org/t/governance-working-group-announcement/9637\u00a0\u2026",
            "username": "rustlang",
            "num_likes": 66,
            "num_retweets": 19,
            "num_replies": 1
        },
        "1103680061033582592": {
            "id": "1103680061033582592",
            "text": "We have opened the RFC for our Roadmap for 2019!https://github.com/rust-lang/rfcs/pull/2657\u00a0\u2026",
            "username": "rustlang",
            "num_likes": 181,
            "num_retweets": 70,
            "num_replies": 0
        },
        "1101200862679056385": {
            "id": "1101200862679056385",
            "text": "Rust 1.33.0 is here! Better const fn, Pin<P>, and other goodies! https://blog.rust-lang.org/2019/02/28/Rust-1.33.0.html\u00a0\u2026",
            "username": "rustlang",
            "num_likes": 541,
            "num_retweets": 237,
            "num_replies": 9
        },
        "1100431955697590274": {
            "id": "1100431955697590274",
            "text": "We have a new white paper up on the website! Learn how @npmjs uses #rustlang:  https://www.rust-lang.org/static/pdfs/Rust-npm-Whitepaper.pdf\u00a0\u2026",
            "username": "rustlang",
            "num_likes": 157,
            "num_retweets": 65,
            "num_replies": 4
        },
        "1100087669718163456": {
            "id": "1100087669718163456",
            "text": "There\u2019s gonna be a Rust conference in Italy this year!https://www.rustlab.it/\u00a0",
            "username": "rustlang",
            "num_likes": 86,
            "num_retweets": 18,
            "num_replies": 4
        },
        "1099029201653559296": {
            "id": "1099029201653559296",
            "text": "Changes in the core teamhttps://blog.rust-lang.org/2019/02/22/Core-team-changes.html\u00a0\u2026",
            "username": "rustlang",
            "num_likes": 84,
            "num_retweets": 19,
            "num_replies": 1
        },
        "1095461075888279556": {
            "id": "1095461075888279556",
            "text": "\u201cIf the compiler hadn\u2019t caught this for me, all scenarios would have been bad. \u201chttps://twitter.com/sgrif/status/1095355375757520901\u00a0\u2026",
            "username": "rustlang",
            "num_likes": 72,
            "num_retweets": 10,
            "num_replies": 0
        }
    },
    "num_retweets_by_originator": {
        "faint_visions": 3,
        "QEDunham": 2,
        "ShekoHex": 2,
        "jfrog": 1,
        "nick_r_cameron": 3,
        "scottcoulton": 1,
        "FreeMasen": 3,
        "CecileTonglet": 3,
        "cloudsmith": 1,
        "nester_dev": 1,
        "mikeyhew": 2,
        "djco": 3,
        "amanjeev": 1,
        "muditchhabra1": 1,
        "fu5ha": 2,
        "PingCAP": 3,
        "tigercosmos": 2,
        "nikomatsakis": 11,
        "sszynrae": 2,
        "BrianLinuxing": 2,
        "nordicapis": 1,
        "daschl": 1,
        "kennethlarsen": 1,
        "Argorak": 10,
        "scottluptowski": 1,
        "MackT_uCF": 1,
        "thinkrapido": 4,
        "Motoblag": 6,
        "jondot": 2,
        "cmyr": 1,
        "rektide": 1,
        "grumi78": 4,
        "ryankurte": 1,
        "ivanhorvat82": 1,
        "hoodie_de": 2,
        "80guitarhero": 2,
        "fivetanley": 1,
        "jaaaarwr": 1,
        "gferon": 1,
        "bascule": 8,
        "mlusetti": 1,
        "nodebotanist": 1,
        "saiumesh": 3,
        "felipesere": 1,
        "heinz_gies": 7,
        "crepererum": 1,
        "nburdy": 3,
        "OxidizeConf": 7,
        "opara_proser": 2,
        "kwangyulseo": 2,
        "ryan_levick": 20,
        "RustNetWG": 1,
        "jntrnr": 3,
        "DavidPdrsn": 2,
        "T5uku5hi": 1,
        "serzhiio": 1,
        "JoelAbrahams96": 1,
        "oribenshir": 2,
        "davidmfutcher": 1,
        "gregrisch": 1,
        "idursun": 1,
        "themeshpotato": 1,
        "philhansch": 2,
        "mgdm": 1,
        "QConSP": 1,
        "trishume": 1,
        "danieldekok": 3,
        "pietroalbini": 1,
        "Pearfalse": 1,
        "muratkarslioglu": 1,
        "joeldpalmer": 1,
        "pantsbuild": 1,
        "hawkinjs": 1,
        "blaagh": 2,
        "wezm": 7,
        "zeenix": 1,
        "bengl": 1,
        "dsilverstone": 1,
        "teabass": 1,
        "RustWroclaw": 3,
        "randomPoison": 3,
        "chikoski": 2,
        "ThisWeekInRust": 1,
        "Brittain_Ben": 1,
        "sdroege_": 2,
        "klaehnr": 1,
        "woodworker": 1,
        "byteadventures": 11,
        "Dj3bbZ": 1,
        "_itsHabib": 1,
        "sidecut": 1,
        "eric_sink": 2,
        "chvest": 2,
        "RReverser": 8,
        "RustConAsia": 8,
        "fkling42": 1,
        "rustlab_conf": 10,
        "ivergarak": 1,
        "antvangelder": 2,
        "jesus_bv": 1,
        "pbzweihander_rs": 1,
        "mariogmd": 2,
        "_zeon000": 1,
        "mountain_ghosts": 1,
        "m_ou_se": 1,
        "masahiko_ofgp": 3,
        "Wulf_Bloody": 1,
        "kil0rk": 2,
        "onatm": 2,
        "mtmr0x": 1,
        "ivanceras": 1,
        "CliRust": 7,
        "isntitvacant": 2,
        "athre0z": 1,
        "EliBenPorat": 2,
        "fafhrd91": 1,
        "iamCharlesChege": 1,
        "jackharrhyisme": 1,
        "OBenamram": 2,
        "newrustacean": 6,
        "andygrove73": 2,
        "chrisabruce": 1,
        "SamyDindane": 1,
        "KodrAus": 3,
        "VladZhukov0": 1,
        "beardfury": 1,
        "KevinHoffman": 8,
        "ScottVaverchak": 1,
        "shelikavoid": 1,
        "bodil": 3,
        "elfsternberg": 3,
        "teek_eh": 1,
        "Erstejahre": 2,
        "dumindu_nuwan": 1,
        "anuraggoel": 1,
        "garrettsquire": 1,
        "AmethystEngine": 1,
        "vrashabh": 1,
        "rust_torino": 1,
        "JadeRubick": 1,
        "codechain_io": 1,
        "sauloalvarado": 1,
        "computermuseum": 1,
        "joseluis_q": 1,
        "adeebahmed26": 1,
        "evanxg852000": 1,
        "victorkoenders": 3,
        "maxgortman": 1,
        "shadowdroid": 3,
        "PascalPrecht": 2,
        "anystring": 1,
        "1101_debian": 1,
        "ATxTE": 1,
        "MikeCluck": 3,
        "rustconf": 3,
        "Elichai2": 1,
        "yoshuawuyts": 5,
        "squidboylan": 1,
        "DrGr4f1x": 1,
        "objectxplosive": 1,
        "intellijrust": 8,
        "jam1garner": 2,
        "luisbg": 1,
        "StaringSkyward": 1,
        "dns2utf8": 3,
        "softprops": 10,
        "JakeGoulding": 1,
        "timClicks": 2,
        "__dfreeman": 1,
        "radgeRayden": 1,
        "porfirio": 1,
        "rtfeldman": 1,
        "literalboob": 1,
        "drawpie": 1,
        "DPC_22": 2,
        "hirojin": 1,
        "danieljgibson": 2,
        "bwinton": 1,
        "japaricious": 6,
        "sw17ch": 1,
        "QuietMisdreavus": 2,
        "denji_on": 1,
        "imperioworld_": 1,
        "mapastr": 1,
        "smarkets": 1,
        "csantanapr": 1,
        "BrewingBits": 1,
        "RustLdnUsers": 1,
        "DHorse1": 1,
        "Sunjay03": 9,
        "RustLatamConf": 5,
        "rust_atx": 2,
        "homeworkprod": 1,
        "j66k": 1,
        "gmelnik": 1,
        "MakeUseOf": 1,
        "myrrlyn": 2,
        "ParityTech": 1,
        "pseudo_morphism": 1,
        "skriems": 1,
        "fischspiele": 1,
        "lu_zero_": 1,
        "TooManyBees": 2,
        "AlexGrinman": 1,
        "mactsouk": 2,
        "io_r_us": 1,
        "JakBoulton": 1,
        "cmdrline": 1,
        "alesgeno": 2,
        "serayuzgur": 3,
        "RustBerlin": 1,
        "datalust_seq": 1,
        "retep007": 3,
        "Crazcalm": 1,
        "drdanielpape": 1,
        "kubkon": 1,
        "adam_n_p": 2,
        "omalaspinas": 1,
        "BrainCOW": 1,
        "wm": 1,
        "withoutboats": 4,
        "Carols10cents": 1,
        "bltroutwine": 2,
        "madrustaceans": 1,
        "detronizator": 4,
        "acruiz": 3,
        "ag_dubs": 4,
        "rust_gamedev": 1,
        "kmdouglass": 1,
        "MaciejHirsz": 2,
        "Johno_ACSLive": 1,
        "bitshiftmask": 5,
        "rinon": 1,
        "sgrif": 2,
        "openfcsonline": 2,
        "simach": 2,
        "JasonHise64": 1,
        "AndreaPessino": 6,
        "recursecenter": 1,
        "yrashk": 2,
        "burntsushi5": 1,
        "tshepang_dev": 1,
        "seannyboy126": 1,
        "MelloGarrett": 1,
        "hermanradtke": 1,
        "COGoldRust": 2,
        "GoudaTheSwede": 1,
        "dominucco": 1,
        "doitian": 1,
        "CosmianOfficial": 1,
        "mumuparis": 1,
        "_klausi_": 1,
        "ekuber": 1,
        "ericglobdell": 1,
        "chriskrycho": 1,
        "SchuCodes": 1,
        "alfiedotwtf": 4,
        "gokuney": 1,
        "slsoftworks": 2,
        "unbalancedparen": 1,
        "divinegod": 1,
        "realdataking": 1,
        "fastly": 1,
        "s3krit": 1,
        "StatisticsFTW": 1,
        "TheWitchCave": 1,
        "birchsport": 2,
        "bogdanarabadzhi": 1,
        "jveillet": 2,
        "kinggoesgaming": 2,
        "adam_chal": 1,
        "zspencer": 1,
        "N3rdyP3pp3r": 1,
        "Cloudflare": 2,
        "knappador": 1,
        "georgionic": 1,
        "_mdiener": 2,
        "matchai": 1,
        "pragprog": 1,
        "robertohuertasm": 1,
        "gcouprie": 3,
        "ehsanmok": 1,
        "FerrousSystems": 1,
        "steadylearner_p": 1,
        "aidanhs": 3,
        "PHXTechEvents": 2,
        "zombodb": 1,
        "akochkov": 1,
        "tuxish": 1,
        "living_syn": 1,
        "acmeducation": 1,
        "akarinoftime": 1,
        "vkhytskyi": 1,
        "jessegrosjean": 1,
        "humble": 1,
        "spacekookie": 3,
        "yoshrc_public": 1,
        "fannheyward": 1,
        "theagilemonkeys": 1,
        "_manpat": 3,
        "ibossptk": 1,
        "steven_lr": 1,
        "bayualsyah": 2,
        "csfinn": 1,
        "rhdevelopers": 1,
        "dettechwatch": 1,
        "rustwasm": 2,
        "rdiaz82": 1,
        "isToxic": 4,
        "dmilith": 1,
        "cratesiostatus": 3,
        "Dzuque": 1,
        "rustlang_mx": 2,
        "naftulikay": 3,
        "androbtech": 1,
        "phonnz": 1,
        "focusaurus": 1,
        "16kbps": 1,
        "deathgreps": 1,
        "timolinn_": 1,
        "fasterthanlime": 1,
        "fabienjuif": 1,
        "ozkriff_ru": 1,
        "IstarEldritch": 1,
        "mattpodwysocki": 1,
        "RustBridge": 1,
        "occupy_paul_st": 1,
        "mnt_io": 3,
        "josh_triplett": 2,
        "siscia_": 1,
        "khuey_": 1,
        "Jonhoo": 5,
        "rasmus_kaj": 1,
        "a5huynh": 1,
        "joe_brailsford": 1,
        "erikinapeartree": 1,
        "karroffel": 1,
        "m_holtermann": 1,
        "hjanuschka": 2,
        "manuel_patrone": 1,
        "raphlinus": 4,
        "fitzgen": 1,
        "linclark": 1,
        "fortanix": 2,
        "octavonce": 1,
        "algo_luca": 1,
        "Orighoj1": 1,
        "mycoliza": 1,
        "sadisticsystems": 4,
        "crypticg00se": 1,
        "NEARProtocol": 1,
        "jam_waffles": 3,
        "devilaether": 1,
        "EnigmaMPC": 1,
        "stephano": 1,
        "dee_bloo": 1,
        "IMacronaut": 1,
        "rustsecurecode": 1,
        "SEA_TechEvents": 1,
        "medangreco": 1,
        "AAAinsley": 1,
        "Suricata_IDS": 1,
        "zeithq": 1,
        "mitsuhiko": 1,
        "DanAloni": 1,
        "RustNairobi": 2,
        "opensourceway": 1,
        "chris_zen": 1,
        "throbbin_robbin": 1,
        "rahulthakoor": 3,
        "mjb2kmn": 1,
        "GolDDranks": 2,
        "Innectic_": 1,
        "shanekilkelly": 1,
        "s_m_mcguire": 1,
        "youmike": 1,
        "geofft": 1,
        "mikong": 1,
        "Matsimitsu": 1,
        "decathorpe": 1,
        "iAm__Noah": 1,
        "hdevalence": 1,
        "arungupta": 2,
        "CAD97_": 1,
        "rust_unsafe": 1,
        "xenozoid": 1,
        "IAmSauravSharma": 1,
        "pEpFoundation": 1,
        "Uggla_": 1,
        "jeremylikness": 1,
        "jonkers_erik": 1,
        "npmjs": 1,
        "rustembedded": 3,
        "badboy_": 1,
        "wesmckinn": 1,
        "asajeffrey": 1,
        "HelloRenj": 1,
        "xernobyl": 1,
        "MtpRust": 1,
        "dwrensha": 1,
        "mgattozzi": 1,
        "jackmott42": 2,
        "blackanger": 1,
        "danigm": 1,
        "rustbeltrust": 1,
        "plugwash": 1,
        "dgrammatiko": 1,
        "willspeak": 1,
        "frondeus": 1,
        "stjepang": 1,
        "pat_shaughnessy": 1,
        "DystopianSnow": 1,
        "rossipedia": 3,
        "illicitonion": 1,
        "cori": 1,
        "mozhacks": 2,
        "avadacatavra": 2,
        "tokio_rs": 1,
        "indutny": 2,
        "dplaindoux": 1,
        "MartinSehnoutka": 2,
        "Knolspeak": 2,
        "brianbondy": 1,
        "sverrejohann": 1,
        "adafruit": 1,
        "bitandbang": 1,
        "All_Your_Dev": 1,
        "faernn": 1,
        "TechnicalRah": 1,
        "AsgerNyman": 2,
        "jblondin": 1,
        "zargony": 1,
        "svartalf": 1,
        "CryZe107": 1,
        "IcanDivideBy0": 1,
        "ogadaki": 1,
        "bojantweets": 1,
        "garmoth": 1,
        "yarmiganosca": 1,
        "lukaszsawickiwx": 1,
        "gcollazo": 1,
        "martinwoodward": 1,
        "42Technology": 2,
        "carllerche": 1,
        "gstreamer": 1,
        "ANSSI_FR": 1,
        "oetzn": 1,
        "spontoreau": 3,
        "benbrunto": 1,
        "i_ostafi": 1,
        "stiiifff": 1,
        "IAmAru": 1,
        "GKlijs": 1,
        "gnunicornBen": 1,
        "golemparts": 1,
        "_subhojit_paul": 1,
        "r_iendo": 1,
        "theelbasian": 1,
        "repi": 1,
        "couac": 2,
        "nicalsilva": 1,
        "Jonathansty": 1,
        "ifraixedes": 1,
        "FiroSolutions": 1,
        "emeryberger": 1,
        "ayushmishra2005": 1,
        "repositiveio": 1,
        "ozkriff": 1,
        "madhukaraphatak": 1,
        "opensourcegeekz": 1,
        "__Tux": 1,
        "dieselframework": 2,
        "Lucretiel": 1,
        "SergeyGalich": 1,
        "rushtonality": 1,
        "karlmdavis": 1,
        "sudoreboot": 1,
        "algstn": 1,
        "thannyinyi": 1,
        "DasSurma": 1,
        "julian__didier": 1,
        "DeliverooEng": 1,
        "toidiuCodes": 1,
        "sir_eliah": 1,
        "FinhavenHQ": 1,
        "aghecenco": 1,
        "HeavyPackets": 1,
        "laurencetratt": 1,
        "_nafees90": 1
    },
    "users_retweeted": [
        "ryan_levick",
        "nikomatsakis",
        "byteadventures",
        "Argorak",
        "rustlab_conf",
        "softprops",
        "Sunjay03",
        "bascule",
        "RReverser",
        "RustConAsia",
        "KevinHoffman",
        "intellijrust",
        "heinz_gies",
        "OxidizeConf",
        "wezm",
        "CliRust",
        "Motoblag",
        "newrustacean",
        "japaricious",
        "AndreaPessino",
        "yoshuawuyts",
        "RustLatamConf",
        "bitshiftmask",
        "Jonhoo",
        "thinkrapido",
        "grumi78",
        "withoutboats",
        "detronizator",
        "ag_dubs",
        "alfiedotwtf",
        "isToxic",
        "raphlinus",
        "sadisticsystems",
        "faint_visions",
        "nick_r_cameron",
        "FreeMasen",
        "CecileTonglet",
        "djco",
        "PingCAP",
        "saiumesh",
        "nburdy",
        "jntrnr",
        "danieldekok",
        "RustWroclaw",
        "randomPoison",
        "masahiko_ofgp",
        "KodrAus",
        "bodil",
        "elfsternberg",
        "victorkoenders",
        "shadowdroid",
        "MikeCluck",
        "rustconf",
        "dns2utf8",
        "serayuzgur",
        "retep007",
        "acruiz",
        "gcouprie",
        "aidanhs",
        "spacekookie",
        "_manpat",
        "cratesiostatus",
        "naftulikay",
        "mnt_io",
        "jam_waffles",
        "rahulthakoor",
        "rustembedded",
        "rossipedia",
        "spontoreau",
        "QEDunham",
        "ShekoHex",
        "mikeyhew",
        "fu5ha",
        "tigercosmos",
        "sszynrae",
        "BrianLinuxing",
        "jondot",
        "hoodie_de",
        "80guitarhero",
        "opara_proser",
        "kwangyulseo",
        "DavidPdrsn",
        "oribenshir",
        "philhansch",
        "blaagh",
        "chikoski",
        "sdroege_",
        "eric_sink",
        "chvest",
        "antvangelder",
        "mariogmd",
        "kil0rk",
        "onatm",
        "isntitvacant",
        "EliBenPorat",
        "OBenamram",
        "andygrove73",
        "Erstejahre",
        "PascalPrecht",
        "jam1garner",
        "timClicks",
        "DPC_22",
        "danieljgibson",
        "QuietMisdreavus",
        "rust_atx",
        "myrrlyn",
        "TooManyBees",
        "mactsouk",
        "alesgeno",
        "adam_n_p",
        "bltroutwine",
        "MaciejHirsz",
        "sgrif",
        "openfcsonline",
        "simach",
        "yrashk",
        "COGoldRust",
        "slsoftworks",
        "birchsport",
        "jveillet",
        "kinggoesgaming",
        "Cloudflare",
        "_mdiener",
        "PHXTechEvents",
        "bayualsyah",
        "rustwasm",
        "rustlang_mx",
        "josh_triplett",
        "hjanuschka",
        "fortanix",
        "RustNairobi",
        "GolDDranks",
        "arungupta",
        "jackmott42",
        "mozhacks",
        "avadacatavra",
        "indutny",
        "MartinSehnoutka",
        "Knolspeak",
        "AsgerNyman",
        "42Technology",
        "couac",
        "dieselframework",
        "jfrog",
        "scottcoulton",
        "cloudsmith",
        "nester_dev",
        "amanjeev",
        "muditchhabra1",
        "nordicapis",
        "daschl",
        "kennethlarsen",
        "scottluptowski",
        "MackT_uCF",
        "cmyr",
        "rektide",
        "ryankurte",
        "ivanhorvat82",
        "fivetanley",
        "jaaaarwr",
        "gferon",
        "mlusetti",
        "nodebotanist",
        "felipesere",
        "crepererum",
        "RustNetWG",
        "T5uku5hi",
        "serzhiio",
        "JoelAbrahams96",
        "davidmfutcher",
        "gregrisch",
        "idursun",
        "themeshpotato",
        "mgdm",
        "QConSP",
        "trishume",
        "pietroalbini",
        "Pearfalse",
        "muratkarslioglu",
        "joeldpalmer",
        "pantsbuild",
        "hawkinjs",
        "zeenix",
        "bengl",
        "dsilverstone",
        "teabass",
        "ThisWeekInRust",
        "Brittain_Ben",
        "klaehnr",
        "woodworker",
        "Dj3bbZ",
        "_itsHabib",
        "sidecut",
        "fkling42",
        "ivergarak",
        "jesus_bv",
        "pbzweihander_rs",
        "_zeon000",
        "mountain_ghosts",
        "m_ou_se",
        "Wulf_Bloody",
        "mtmr0x",
        "ivanceras",
        "athre0z",
        "fafhrd91",
        "iamCharlesChege",
        "jackharrhyisme",
        "chrisabruce",
        "SamyDindane",
        "VladZhukov0",
        "beardfury",
        "ScottVaverchak",
        "shelikavoid",
        "teek_eh",
        "dumindu_nuwan",
        "anuraggoel",
        "garrettsquire",
        "AmethystEngine",
        "vrashabh",
        "rust_torino",
        "JadeRubick",
        "codechain_io",
        "sauloalvarado",
        "computermuseum",
        "joseluis_q",
        "adeebahmed26",
        "evanxg852000",
        "maxgortman",
        "anystring",
        "1101_debian",
        "ATxTE",
        "Elichai2",
        "squidboylan",
        "DrGr4f1x",
        "objectxplosive",
        "luisbg",
        "StaringSkyward",
        "JakeGoulding",
        "__dfreeman",
        "radgeRayden",
        "porfirio",
        "rtfeldman",
        "literalboob",
        "drawpie",
        "hirojin",
        "bwinton",
        "sw17ch",
        "denji_on",
        "imperioworld_",
        "mapastr",
        "smarkets",
        "csantanapr",
        "BrewingBits",
        "RustLdnUsers",
        "DHorse1",
        "homeworkprod",
        "j66k",
        "gmelnik",
        "MakeUseOf",
        "ParityTech",
        "pseudo_morphism",
        "skriems",
        "fischspiele",
        "lu_zero_",
        "AlexGrinman",
        "io_r_us",
        "JakBoulton",
        "cmdrline",
        "RustBerlin",
        "datalust_seq",
        "Crazcalm",
        "drdanielpape",
        "kubkon",
        "omalaspinas",
        "BrainCOW",
        "wm",
        "Carols10cents",
        "madrustaceans",
        "rust_gamedev",
        "kmdouglass",
        "Johno_ACSLive",
        "rinon",
        "JasonHise64",
        "recursecenter",
        "burntsushi5",
        "tshepang_dev",
        "seannyboy126",
        "MelloGarrett",
        "hermanradtke",
        "GoudaTheSwede",
        "dominucco",
        "doitian",
        "CosmianOfficial",
        "mumuparis",
        "_klausi_",
        "ekuber",
        "ericglobdell",
        "chriskrycho",
        "SchuCodes",
        "gokuney",
        "unbalancedparen",
        "divinegod",
        "realdataking",
        "fastly",
        "s3krit",
        "StatisticsFTW",
        "TheWitchCave",
        "bogdanarabadzhi",
        "adam_chal",
        "zspencer",
        "N3rdyP3pp3r",
        "knappador",
        "georgionic",
        "matchai",
        "pragprog",
        "robertohuertasm",
        "ehsanmok",
        "FerrousSystems",
        "steadylearner_p",
        "zombodb",
        "akochkov",
        "tuxish",
        "living_syn",
        "acmeducation",
        "akarinoftime",
        "vkhytskyi",
        "jessegrosjean",
        "humble",
        "yoshrc_public",
        "fannheyward",
        "theagilemonkeys",
        "ibossptk",
        "steven_lr",
        "csfinn",
        "rhdevelopers",
        "dettechwatch",
        "rdiaz82",
        "dmilith",
        "Dzuque",
        "androbtech",
        "phonnz",
        "focusaurus",
        "16kbps",
        "deathgreps",
        "timolinn_",
        "fasterthanlime",
        "fabienjuif",
        "ozkriff_ru",
        "IstarEldritch",
        "mattpodwysocki",
        "RustBridge",
        "occupy_paul_st",
        "siscia_",
        "khuey_",
        "rasmus_kaj",
        "a5huynh",
        "joe_brailsford",
        "erikinapeartree",
        "karroffel",
        "m_holtermann",
        "manuel_patrone",
        "fitzgen",
        "linclark",
        "octavonce",
        "algo_luca",
        "Orighoj1",
        "mycoliza",
        "crypticg00se",
        "NEARProtocol",
        "devilaether",
        "EnigmaMPC",
        "stephano",
        "dee_bloo",
        "IMacronaut",
        "rustsecurecode",
        "SEA_TechEvents",
        "medangreco",
        "AAAinsley",
        "Suricata_IDS",
        "zeithq",
        "mitsuhiko",
        "DanAloni",
        "opensourceway",
        "chris_zen",
        "throbbin_robbin",
        "mjb2kmn",
        "Innectic_",
        "shanekilkelly",
        "s_m_mcguire",
        "youmike",
        "geofft",
        "mikong",
        "Matsimitsu",
        "decathorpe",
        "iAm__Noah",
        "hdevalence",
        "CAD97_",
        "rust_unsafe",
        "xenozoid",
        "IAmSauravSharma",
        "pEpFoundation",
        "Uggla_",
        "jeremylikness",
        "jonkers_erik",
        "npmjs",
        "badboy_",
        "wesmckinn",
        "asajeffrey",
        "HelloRenj",
        "xernobyl",
        "MtpRust",
        "dwrensha",
        "mgattozzi",
        "blackanger",
        "danigm",
        "rustbeltrust",
        "plugwash",
        "dgrammatiko",
        "willspeak",
        "frondeus",
        "stjepang",
        "pat_shaughnessy",
        "DystopianSnow",
        "illicitonion",
        "cori",
        "tokio_rs",
        "dplaindoux",
        "brianbondy",
        "sverrejohann",
        "adafruit",
        "bitandbang",
        "All_Your_Dev",
        "faernn",
        "TechnicalRah",
        "jblondin",
        "zargony",
        "svartalf",
        "CryZe107",
        "IcanDivideBy0",
        "ogadaki",
        "bojantweets",
        "garmoth",
        "yarmiganosca",
        "lukaszsawickiwx",
        "gcollazo",
        "martinwoodward",
        "carllerche",
        "gstreamer",
        "ANSSI_FR",
        "oetzn",
        "benbrunto",
        "i_ostafi",
        "stiiifff",
        "IAmAru",
        "GKlijs",
        "gnunicornBen",
        "golemparts",
        "_subhojit_paul",
        "r_iendo",
        "theelbasian",
        "repi",
        "nicalsilva",
        "Jonathansty",
        "ifraixedes",
        "FiroSolutions",
        "emeryberger",
        "ayushmishra2005",
        "repositiveio",
        "ozkriff",
        "madhukaraphatak",
        "opensourcegeekz",
        "__Tux",
        "Lucretiel",
        "SergeyGalich",
        "rushtonality",
        "karlmdavis",
        "sudoreboot",
        "algstn",
        "thannyinyi",
        "DasSurma",
        "julian__didier",
        "DeliverooEng",
        "toidiuCodes",
        "sir_eliah",
        "FinhavenHQ",
        "aghecenco",
        "HeavyPackets",
        "laurencetratt",
        "_nafees90"
    ]
}